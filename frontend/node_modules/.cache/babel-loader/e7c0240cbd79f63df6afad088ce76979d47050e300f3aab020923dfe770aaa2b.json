{"ast":null,"code":"var _jsxFileName = \"/Users/truonghaidang/Desktop/open-trainer/frontend/src/components/Annotate.js\";\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Annotate() {\n  const [files, setFiles] = useState([]);\n  const [previews, setPreviews] = useState([]);\n  const [annotatedResults, setAnnotatedResults] = useState([]);\n  const [annotationType, setAnnotationType] = useState('detection');\n  const [isLoading, setIsLoading] = useState(false);\n  const [processingProgress, setProcessingProgress] = useState({\n    current: 0,\n    total: 0\n  });\n  const [batchId, setBatchId] = useState(null);\n\n  // GroundingDINO specific state\n  const [groundingDinoPrompts, setGroundingDinoPrompts] = useState('scratch, dent, dirt');\n  const [confidenceThreshold, setConfidenceThreshold] = useState(0.3);\n  const [groundingDinoAvailable, setGroundingDinoAvailable] = useState(false);\n\n  // Guardrail (Anomaly Detection + Classification) specific state\n  const [guardrailModelPath, setGuardrailModelPath] = useState('');\n  const [guardrailPrompts, setGuardrailPrompts] = useState('scratch, dent, dirt');\n  const [guardrailConfidenceThreshold, setGuardrailConfidenceThreshold] = useState(0.3);\n  const [isTrainingAnomalyModel, setIsTrainingAnomalyModel] = useState(false);\n  const [anomalyTrainingFiles, setAnomalyTrainingFiles] = useState([]);\n  const [anomalyProjectName, setAnomalyProjectName] = useState('');\n  const [showAnomalyTraining, setShowAnomalyTraining] = useState(false);\n\n  // Check GroundingDINO availability on component mount\n  useEffect(() => {\n    checkGroundingDinoStatus();\n  }, []);\n  const checkGroundingDinoStatus = async () => {\n    try {\n      const response = await fetch('/grounding-dino-status');\n      const data = await response.json();\n      setGroundingDinoAvailable(data.available);\n    } catch (error) {\n      console.error('Error checking GroundingDINO status:', error);\n      setGroundingDinoAvailable(false);\n    }\n  };\n  const handleFileChange = e => {\n    const selectedFiles = Array.from(e.target.files);\n    setFiles(selectedFiles);\n\n    // Create previews for all selected files\n    const newPreviews = selectedFiles.map(file => ({\n      file,\n      url: URL.createObjectURL(file),\n      name: file.name\n    }));\n    setPreviews(newPreviews);\n    setAnnotatedResults([]); // Reset results when new files are selected\n  };\n  const handleAnnotate = async () => {\n    if (files.length === 0) {\n      alert(\"Please select at least one file first.\");\n      return;\n    }\n    setIsLoading(true);\n    setProcessingProgress({\n      current: 0,\n      total: files.length\n    });\n    setAnnotatedResults([]);\n\n    // Generate unique batch ID\n    const newBatchId = `batch_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n    setBatchId(newBatchId);\n    if (annotationType === 'grounding-dino') {\n      await handleGroundingDinoAnnotation(newBatchId);\n    } else if (annotationType === 'guardrail') {\n      await handleGuardrailAnnotation(newBatchId);\n    } else {\n      await handleTraditionalAnnotation(newBatchId);\n    }\n  };\n  const handleGroundingDinoAnnotation = async newBatchId => {\n    try {\n      const formData = new FormData();\n      files.forEach(file => formData.append('files', file));\n      formData.append('prompts', groundingDinoPrompts);\n      formData.append('confidence_threshold', confidenceThreshold);\n      const response = await fetch('/grounding-dino-batch', {\n        method: 'POST',\n        body: formData\n      });\n      if (response.ok) {\n        const data = await response.json();\n        const results = data.results.map(result => ({\n          originalName: result.filename,\n          success: result.status === 'success',\n          annotatedUrl: result.status === 'success' ? `data:image/jpeg;base64,${result.image_base64}` : null,\n          error: result.status !== 'success' ? result.message : null,\n          detections: result.detections || [],\n          total_detections: result.total_detections || 0,\n          yolo_annotations: result.yolo_annotations\n        }));\n        setAnnotatedResults(results);\n      } else {\n        throw new Error('GroundingDINO batch annotation failed');\n      }\n    } catch (error) {\n      console.error('GroundingDINO annotation error:', error);\n      alert('GroundingDINO annotation failed. Please try again.');\n    } finally {\n      setIsLoading(false);\n      setProcessingProgress({\n        current: 0,\n        total: 0\n      });\n    }\n  };\n  const handleGuardrailAnnotation = async newBatchId => {\n    if (!guardrailModelPath) {\n      alert(\"Please provide the path to your trained anomaly model.\");\n      setIsLoading(false);\n      return;\n    }\n    const results = [];\n    try {\n      for (let i = 0; i < files.length; i++) {\n        const file = files[i];\n        setProcessingProgress({\n          current: i + 1,\n          total: files.length\n        });\n        const formData = new FormData();\n        formData.append(\"file\", file);\n        formData.append(\"model_path\", guardrailModelPath);\n        formData.append(\"prompts\", guardrailPrompts);\n        formData.append(\"confidence_threshold\", guardrailConfidenceThreshold);\n        try {\n          const response = await fetch('/annotate-with-guardrail', {\n            method: 'POST',\n            body: formData\n          });\n          if (response.ok) {\n            const data = await response.json();\n            results.push({\n              originalName: file.name,\n              success: data.status === 'success',\n              annotatedUrl: data.status === 'success' && data.annotated_image ? `data:image/jpeg;base64,${btoa(String.fromCharCode(...new Uint8Array(data.annotated_image)))}` : null,\n              error: data.status !== 'success' ? data.message : null,\n              detections: data.detections || [],\n              total_detections: data.detections ? data.detections.length : 0\n            });\n          } else {\n            results.push({\n              originalName: file.name,\n              success: false,\n              error: \"Guardrail annotation failed\"\n            });\n          }\n        } catch (error) {\n          console.error(`Error processing ${file.name}:`, error);\n          results.push({\n            originalName: file.name,\n            success: false,\n            error: \"Processing error\"\n          });\n        }\n      }\n      setAnnotatedResults(results);\n    } catch (error) {\n      console.error('Guardrail annotation error:', error);\n      alert('Guardrail annotation failed. Please try again.');\n    } finally {\n      setIsLoading(false);\n      setProcessingProgress({\n        current: 0,\n        total: 0\n      });\n    }\n  };\n  const handleTraditionalAnnotation = async newBatchId => {\n    const endpointMap = {\n      'detection': '/pre-annotate-detect',\n      'segmentation': '/pre-annotate-segment',\n      'sam2-detection': '/pre-annotate-sam2-detect',\n      'sam2-segmentation': '/pre-annotate-sam2-segment'\n    };\n    const endpoint = endpointMap[annotationType] || '/pre-annotate-detect';\n    const results = [];\n    try {\n      for (let i = 0; i < files.length; i++) {\n        const file = files[i];\n        setProcessingProgress({\n          current: i + 1,\n          total: files.length\n        });\n        const formData = new FormData();\n        formData.append(\"file\", file);\n        formData.append(\"batch_id\", newBatchId); // Add batch ID for caching\n\n        try {\n          const response = await fetch(endpoint, {\n            method: \"POST\",\n            body: formData\n          });\n          if (response.ok) {\n            const imageBlob = await response.blob();\n            results.push({\n              originalName: file.name,\n              annotatedUrl: URL.createObjectURL(imageBlob),\n              success: true\n            });\n          } else {\n            results.push({\n              originalName: file.name,\n              success: false,\n              error: `${annotationType} annotation failed`\n            });\n          }\n        } catch (error) {\n          console.error(`Error processing ${file.name}:`, error);\n          results.push({\n            originalName: file.name,\n            success: false,\n            error: \"Processing error\"\n          });\n        }\n      }\n      setAnnotatedResults(results);\n    } catch (error) {\n      console.error(\"Error during batch annotation:\", error);\n      alert(\"An error occurred during batch annotation.\");\n    } finally {\n      setIsLoading(false);\n      setProcessingProgress({\n        current: 0,\n        total: 0\n      });\n    }\n  };\n  const handleDownloadZip = async () => {\n    const successfulResults = annotatedResults.filter(result => result.success);\n    if (successfulResults.length === 0) {\n      alert(\"No successful annotations to download.\");\n      return;\n    }\n    try {\n      const response = await fetch(`/download-batch-zip/${batchId}`, {\n        method: 'POST'\n      });\n      if (response.ok) {\n        const blob = await response.blob();\n        const url = window.URL.createObjectURL(blob);\n        const a = document.createElement('a');\n        a.style.display = 'none';\n        a.href = url;\n        a.download = `annotated_${annotationType}_batch.zip`;\n        document.body.appendChild(a);\n        a.click();\n        window.URL.revokeObjectURL(url);\n        document.body.removeChild(a);\n      } else {\n        throw new Error('Failed to download zip file');\n      }\n    } catch (error) {\n      console.error('Error downloading zip:', error);\n      alert('Failed to download zip file. Please try again.');\n    }\n  };\n  const handleExportYoloDataset = async () => {\n    const groundingDinoResults = annotatedResults.filter(result => result.success && result.yolo_annotations);\n    if (groundingDinoResults.length === 0) {\n      alert(\"No GroundingDINO results to export.\");\n      return;\n    }\n    try {\n      const formData = new FormData();\n      formData.append('annotation_results', JSON.stringify(groundingDinoResults));\n      formData.append('dataset_name', `grounding_dino_${Date.now()}`);\n      const response = await fetch('/grounding-dino-export-yolo', {\n        method: 'POST',\n        body: formData\n      });\n      if (response.ok) {\n        const data = await response.json();\n        alert(`YOLO dataset exported successfully: ${data.dataset_name}`);\n      } else {\n        throw new Error('Failed to export dataset');\n      }\n    } catch (error) {\n      console.error('Error exporting dataset:', error);\n      alert('Failed to export YOLO dataset.');\n    }\n  };\n  const handleAnomalyModelTraining = async () => {\n    if (anomalyTrainingFiles.length === 0) {\n      alert(\"Please select 'good' images to train the anomaly model.\");\n      return;\n    }\n    if (!anomalyProjectName.trim()) {\n      alert(\"Please provide a project name for the anomaly model.\");\n      return;\n    }\n    setIsTrainingAnomalyModel(true);\n    try {\n      const formData = new FormData();\n      anomalyTrainingFiles.forEach(file => formData.append('files', file));\n      formData.append('project_name', anomalyProjectName.trim());\n      const response = await fetch('/train-anomaly-model', {\n        method: 'POST',\n        body: formData\n      });\n      if (response.ok) {\n        const data = await response.json();\n        setGuardrailModelPath(data.model_path);\n        alert(`Anomaly model trained successfully! Model saved at: ${data.model_path}`);\n        setShowAnomalyTraining(false);\n        setAnomalyTrainingFiles([]);\n        setAnomalyProjectName('');\n      } else {\n        throw new Error('Failed to train anomaly model');\n      }\n    } catch (error) {\n      console.error('Error training anomaly model:', error);\n      alert('Failed to train anomaly model. Please try again.');\n    } finally {\n      setIsTrainingAnomalyModel(false);\n    }\n  };\n  const handleAnomalyTrainingFileChange = e => {\n    const selectedFiles = Array.from(e.target.files);\n    setAnomalyTrainingFiles(selectedFiles);\n  };\n  const renderAnnotationTypeSelector = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginBottom: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"\\uD83C\\uDFAF Annotation Method\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'grid',\n        gridTemplateColumns: 'repeat(auto-fit, minmax(200px, 1fr))',\n        gap: '10px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        style: {\n          display: 'flex',\n          alignItems: 'center',\n          padding: '10px',\n          border: '2px solid #e2e8f0',\n          borderRadius: '8px',\n          backgroundColor: annotationType === 'detection' ? '#dbeafe' : 'white',\n          borderColor: annotationType === 'detection' ? '#3b82f6' : '#e2e8f0',\n          cursor: 'pointer'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          value: \"detection\",\n          checked: annotationType === 'detection',\n          onChange: e => setAnnotationType(e.target.value),\n          style: {\n            marginRight: '8px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"\\uD83D\\uDCE6 OpenCV Detection\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        style: {\n          display: 'flex',\n          alignItems: 'center',\n          padding: '10px',\n          border: '2px solid #e2e8f0',\n          borderRadius: '8px',\n          backgroundColor: annotationType === 'segmentation' ? '#dbeafe' : 'white',\n          borderColor: annotationType === 'segmentation' ? '#3b82f6' : '#e2e8f0',\n          cursor: 'pointer'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          value: \"segmentation\",\n          checked: annotationType === 'segmentation',\n          onChange: e => setAnnotationType(e.target.value),\n          style: {\n            marginRight: '8px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 386,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"\\u2702\\uFE0F OpenCV Segmentation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 393,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        style: {\n          display: 'flex',\n          alignItems: 'center',\n          padding: '10px',\n          border: '2px solid #e2e8f0',\n          borderRadius: '8px',\n          backgroundColor: annotationType === 'sam2-detection' ? '#dbeafe' : 'white',\n          borderColor: annotationType === 'sam2-detection' ? '#3b82f6' : '#e2e8f0',\n          cursor: 'pointer'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          value: \"sam2-detection\",\n          checked: annotationType === 'sam2-detection',\n          onChange: e => setAnnotationType(e.target.value),\n          style: {\n            marginRight: '8px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 406,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"\\uD83C\\uDFAF SAM2 Detection\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 413,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        style: {\n          display: 'flex',\n          alignItems: 'center',\n          padding: '10px',\n          border: '2px solid #e2e8f0',\n          borderRadius: '8px',\n          backgroundColor: annotationType === 'sam2-segmentation' ? '#dbeafe' : 'white',\n          borderColor: annotationType === 'sam2-segmentation' ? '#3b82f6' : '#e2e8f0',\n          cursor: 'pointer'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          value: \"sam2-segmentation\",\n          checked: annotationType === 'sam2-segmentation',\n          onChange: e => setAnnotationType(e.target.value),\n          style: {\n            marginRight: '8px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 426,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"\\uD83D\\uDD2A SAM2 Segmentation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 433,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 416,\n        columnNumber: 17\n      }, this), groundingDinoAvailable && /*#__PURE__*/_jsxDEV(\"label\", {\n        style: {\n          display: 'flex',\n          alignItems: 'center',\n          padding: '10px',\n          border: '2px solid #10b981',\n          borderRadius: '8px',\n          backgroundColor: annotationType === 'grounding-dino' ? '#d1fae5' : 'white',\n          borderColor: annotationType === 'grounding-dino' ? '#10b981' : '#10b981',\n          cursor: 'pointer'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          value: \"grounding-dino\",\n          checked: annotationType === 'grounding-dino',\n          onChange: e => setAnnotationType(e.target.value),\n          style: {\n            marginRight: '8px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 447,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"\\u2728 GroundingDINO (AI-Powered)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 454,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 437,\n        columnNumber: 21\n      }, this), groundingDinoAvailable && /*#__PURE__*/_jsxDEV(\"label\", {\n        style: {\n          display: 'flex',\n          alignItems: 'center',\n          padding: '10px',\n          border: '2px solid #7c3aed',\n          borderRadius: '8px',\n          backgroundColor: annotationType === 'guardrail' ? '#ede9fe' : 'white',\n          borderColor: annotationType === 'guardrail' ? '#7c3aed' : '#7c3aed',\n          cursor: 'pointer'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          value: \"guardrail\",\n          checked: annotationType === 'guardrail',\n          onChange: e => setAnnotationType(e.target.value),\n          style: {\n            marginRight: '8px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 469,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"\\uD83D\\uDEE1\\uFE0F Guardrail (Anomaly + AI)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 476,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 459,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 13\n    }, this), !groundingDinoAvailable && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '10px',\n        padding: '10px',\n        backgroundColor: '#fef3c7',\n        border: '1px solid #f59e0b',\n        borderRadius: '4px',\n        fontSize: '14px'\n      },\n      children: \"\\u26A0\\uFE0F GroundingDINO not available. Please install dependencies to use AI-powered annotation.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 482,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 353,\n    columnNumber: 9\n  }, this);\n  const renderGroundingDinoOptions = () => {\n    if (annotationType !== 'grounding-dino') return null;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '20px',\n        padding: '20px',\n        backgroundColor: '#f0fdf4',\n        border: '1px solid #10b981',\n        borderRadius: '8px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        style: {\n          margin: '0 0 15px 0',\n          color: '#059669'\n        },\n        children: \"\\u2728 GroundingDINO Settings\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 507,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: '15px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          style: {\n            display: 'block',\n            marginBottom: '5px',\n            fontWeight: 'bold'\n          },\n          children: \"Defect Prompts (comma-separated):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 510,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: groundingDinoPrompts,\n          onChange: e => setGroundingDinoPrompts(e.target.value),\n          placeholder: \"e.g., scratch, dent, dirt, corrosion, crack\",\n          style: {\n            width: '100%',\n            padding: '8px',\n            border: '1px solid #d1d5db',\n            borderRadius: '4px',\n            fontSize: '14px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 513,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            fontSize: '12px',\n            color: '#6b7280',\n            marginTop: '5px'\n          },\n          children: \"Describe the defects you want to detect. Be specific (e.g., \\\"scratch on metal surface\\\").\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 526,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 509,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: '15px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          style: {\n            display: 'block',\n            marginBottom: '5px',\n            fontWeight: 'bold'\n          },\n          children: [\"Confidence Threshold: \", confidenceThreshold]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 532,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"range\",\n          min: \"0.1\",\n          max: \"0.9\",\n          step: \"0.1\",\n          value: confidenceThreshold,\n          onChange: e => setConfidenceThreshold(parseFloat(e.target.value)),\n          style: {\n            width: '200px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 535,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            fontSize: '12px',\n            color: '#6b7280',\n            marginTop: '5px'\n          },\n          children: \"Lower values detect more objects but may include false positives.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 544,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 531,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 500,\n      columnNumber: 13\n    }, this);\n  };\n  const renderGuardrailOptions = () => {\n    if (annotationType !== 'guardrail') return null;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '20px',\n        padding: '20px',\n        backgroundColor: '#faf5ff',\n        border: '1px solid #7c3aed',\n        borderRadius: '8px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        style: {\n          margin: '0 0 15px 0',\n          color: '#7c3aed'\n        },\n        children: \"\\uD83D\\uDEE1\\uFE0F Guardrail Settings (Anomaly Detection + AI Classification)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 563,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: '15px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          style: {\n            display: 'block',\n            marginBottom: '5px',\n            fontWeight: 'bold'\n          },\n          children: \"Anomaly Model Path:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 567,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: guardrailModelPath,\n          onChange: e => setGuardrailModelPath(e.target.value),\n          placeholder: \"Path to your trained anomaly detection model (e.g., ml/models/anomaly/project_name/patchcore_model.ckpt)\",\n          style: {\n            width: '100%',\n            padding: '8px',\n            border: '1px solid #d1d5db',\n            borderRadius: '4px',\n            fontSize: '14px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 570,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            fontSize: '12px',\n            color: '#6b7280',\n            marginTop: '5px'\n          },\n          children: \"Path to your trained PatchCore anomaly detection model.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 583,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 566,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: '15px'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowAnomalyTraining(!showAnomalyTraining),\n          style: {\n            backgroundColor: '#7c3aed',\n            color: 'white',\n            padding: '8px 16px',\n            border: 'none',\n            borderRadius: '4px',\n            cursor: 'pointer',\n            fontSize: '14px'\n          },\n          children: showAnomalyTraining ? '❌ Cancel Training' : '🔧 Train New Anomaly Model'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 590,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 589,\n        columnNumber: 17\n      }, this), showAnomalyTraining && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          padding: '15px',\n          backgroundColor: '#f3f4f6',\n          border: '1px solid #d1d5db',\n          borderRadius: '6px',\n          marginBottom: '15px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          style: {\n            margin: '0 0 10px 0',\n            color: '#7c3aed'\n          },\n          children: \"Train Anomaly Detection Model\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 615,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: '10px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            style: {\n              display: 'block',\n              marginBottom: '5px',\n              fontWeight: 'bold'\n            },\n            children: \"Project Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 618,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: anomalyProjectName,\n            onChange: e => setAnomalyProjectName(e.target.value),\n            placeholder: \"e.g., metal_parts_project\",\n            style: {\n              width: '100%',\n              padding: '6px',\n              border: '1px solid #d1d5db',\n              borderRadius: '4px',\n              fontSize: '14px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 621,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 617,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: '10px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            style: {\n              display: 'block',\n              marginBottom: '5px',\n              fontWeight: 'bold'\n            },\n            children: \"Select \\\"Good\\\" Images (Defect-Free Examples):\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 637,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            multiple: true,\n            accept: \"image/*\",\n            onChange: handleAnomalyTrainingFileChange,\n            style: {\n              width: '100%',\n              padding: '6px',\n              border: '1px solid #d1d5db',\n              borderRadius: '4px',\n              fontSize: '14px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 640,\n            columnNumber: 29\n          }, this), anomalyTrainingFiles.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              fontSize: '12px',\n              color: '#059669',\n              marginTop: '5px'\n            },\n            children: [\"\\u2705 \", anomalyTrainingFiles.length, \" good image(s) selected\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 654,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              fontSize: '12px',\n              color: '#6b7280',\n              marginTop: '5px'\n            },\n            children: \"Upload 10-50 images of defect-free products. The model will learn what \\\"normal\\\" looks like.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 658,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 636,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleAnomalyModelTraining,\n          disabled: isTrainingAnomalyModel || anomalyTrainingFiles.length === 0 || !anomalyProjectName.trim(),\n          style: {\n            backgroundColor: isTrainingAnomalyModel ? '#9ca3af' : '#059669',\n            color: 'white',\n            padding: '8px 16px',\n            border: 'none',\n            borderRadius: '4px',\n            cursor: isTrainingAnomalyModel ? 'not-allowed' : 'pointer',\n            fontSize: '14px'\n          },\n          children: isTrainingAnomalyModel ? '🔄 Training...' : '🚀 Train Model'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 663,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 608,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: '15px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          style: {\n            display: 'block',\n            marginBottom: '5px',\n            fontWeight: 'bold'\n          },\n          children: \"Classification Prompts (comma-separated):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 683,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: guardrailPrompts,\n          onChange: e => setGuardrailPrompts(e.target.value),\n          placeholder: \"e.g., scratch, dent, dirt, corrosion, crack\",\n          style: {\n            width: '100%',\n            padding: '8px',\n            border: '1px solid #d1d5db',\n            borderRadius: '4px',\n            fontSize: '14px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 686,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            fontSize: '12px',\n            color: '#6b7280',\n            marginTop: '5px'\n          },\n          children: \"After detecting anomalies, the system will use GroundingDINO to classify them with these prompts.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 699,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 682,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: '15px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          style: {\n            display: 'block',\n            marginBottom: '5px',\n            fontWeight: 'bold'\n          },\n          children: [\"Classification Confidence Threshold: \", guardrailConfidenceThreshold]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 706,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"range\",\n          min: \"0.1\",\n          max: \"0.9\",\n          step: \"0.1\",\n          value: guardrailConfidenceThreshold,\n          onChange: e => setGuardrailConfidenceThreshold(parseFloat(e.target.value)),\n          style: {\n            width: '200px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 709,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            fontSize: '12px',\n            color: '#6b7280',\n            marginTop: '5px'\n          },\n          children: \"Confidence threshold for GroundingDINO classification of detected anomalies.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 718,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 705,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          padding: '10px',\n          backgroundColor: '#e0e7ff',\n          border: '1px solid #3b82f6',\n          borderRadius: '4px',\n          fontSize: '12px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"How Guardrail Works:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 731,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n          style: {\n            margin: '5px 0',\n            paddingLeft: '20px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Anomaly Detection:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 733,\n              columnNumber: 29\n            }, this), \" PatchCore detects deviations from \\\"normal\\\" (high sensitivity)\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 733,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Classification:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 734,\n              columnNumber: 29\n            }, this), \" GroundingDINO classifies detected anomalies using your prompts\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 734,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Result:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 735,\n              columnNumber: 29\n            }, this), \" Only real defects are labeled, with minimal false positives\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 735,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 732,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 724,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 556,\n      columnNumber: 13\n    }, this);\n  };\n  const renderResults = () => {\n    if (annotatedResults.length === 0) return null;\n    const successfulResults = annotatedResults.filter(result => result.success);\n    const failedResults = annotatedResults.filter(result => !result.success);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '30px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          justifyContent: 'space-between',\n          alignItems: 'center',\n          marginBottom: '20px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"\\uD83D\\uDCCA Annotation Results\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 751,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            gap: '10px'\n          },\n          children: [successfulResults.length > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleDownloadZip,\n            style: {\n              backgroundColor: '#059669',\n              color: 'white',\n              padding: '8px 16px',\n              border: 'none',\n              borderRadius: '4px',\n              cursor: 'pointer'\n            },\n            children: \"\\uD83D\\uDCE5 Download ZIP\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 754,\n            columnNumber: 29\n          }, this), annotationType === 'grounding-dino' && successfulResults.some(r => r.yolo_annotations) && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleExportYoloDataset,\n            style: {\n              backgroundColor: '#7c3aed',\n              color: 'white',\n              padding: '8px 16px',\n              border: 'none',\n              borderRadius: '4px',\n              cursor: 'pointer'\n            },\n            children: \"\\uD83D\\uDCE6 Export YOLO Dataset\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 769,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 752,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 750,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'grid',\n          gridTemplateColumns: 'repeat(auto-fit, minmax(300px, 1fr))',\n          gap: '20px',\n          marginBottom: '20px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            padding: '15px',\n            backgroundColor: '#dcfce7',\n            border: '1px solid #86efac',\n            borderRadius: '8px'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              fontSize: '18px',\n              fontWeight: 'bold',\n              color: '#059669'\n            },\n            children: [\"\\u2705 Successful: \", successfulResults.length]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 798,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 792,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            padding: '15px',\n            backgroundColor: '#fee2e2',\n            border: '1px solid #fca5a5',\n            borderRadius: '8px'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              fontSize: '18px',\n              fontWeight: 'bold',\n              color: '#dc2626'\n            },\n            children: [\"\\u274C Failed: \", failedResults.length]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 808,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 802,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 786,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'grid',\n          gridTemplateColumns: 'repeat(auto-fit, minmax(400px, 1fr))',\n          gap: '20px'\n        },\n        children: annotatedResults.map((result, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            border: '1px solid #e2e8f0',\n            borderRadius: '8px',\n            padding: '15px',\n            backgroundColor: result.success ? '#f9fafb' : '#fef2f2'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            style: {\n              margin: '0 0 10px 0'\n            },\n            children: result.originalName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 822,\n            columnNumber: 29\n          }, this), result.success ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: result.annotatedUrl,\n              alt: `Annotated ${result.originalName}`,\n              style: {\n                width: '100%',\n                borderRadius: '4px',\n                marginBottom: '10px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 826,\n              columnNumber: 37\n            }, this), result.detections && /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                fontSize: '14px',\n                color: '#6b7280'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Detections:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 834,\n                columnNumber: 45\n              }, this), \" \", result.total_detections || result.detections.length, result.detections.map((detection, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  marginLeft: '10px',\n                  fontSize: '12px'\n                },\n                children: [\"\\u2022 \", detection.class, \": \", (detection.confidence * 100).toFixed(1), \"%\"]\n              }, idx, true, {\n                fileName: _jsxFileName,\n                lineNumber: 836,\n                columnNumber: 49\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 833,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 825,\n            columnNumber: 33\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              color: '#dc2626'\n            },\n            children: [\"Error: \", result.error]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 844,\n            columnNumber: 33\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 816,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 814,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 749,\n      columnNumber: 13\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '20px',\n      maxWidth: '1200px',\n      margin: '0 auto'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uD83C\\uDFF7\\uFE0F Image Annotation\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 857,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        style: {\n          display: 'block',\n          marginBottom: '10px',\n          fontSize: '16px',\n          fontWeight: 'bold'\n        },\n        children: \"\\uD83D\\uDCC1 Select Images:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 860,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        multiple: true,\n        accept: \"image/*\",\n        onChange: handleFileChange,\n        style: {\n          padding: '10px',\n          border: '2px dashed #d1d5db',\n          borderRadius: '8px',\n          width: '100%',\n          cursor: 'pointer'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 863,\n        columnNumber: 17\n      }, this), files.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: '10px',\n          fontSize: '14px',\n          color: '#059669'\n        },\n        children: [\"\\u2705 \", files.length, \" image(s) selected\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 877,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 859,\n      columnNumber: 13\n    }, this), renderAnnotationTypeSelector(), renderGroundingDinoOptions(), renderGuardrailOptions(), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '30px'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAnnotate,\n        disabled: files.length === 0 || isLoading,\n        style: {\n          backgroundColor: files.length === 0 || isLoading ? '#9ca3af' : '#1e3a8a',\n          color: 'white',\n          padding: '12px 24px',\n          border: 'none',\n          borderRadius: '8px',\n          fontSize: '16px',\n          cursor: files.length === 0 || isLoading ? 'not-allowed' : 'pointer'\n        },\n        children: isLoading ? `🔄 Processing... (${processingProgress.current}/${processingProgress.total})` : '🚀 Start Annotation'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 888,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 887,\n      columnNumber: 13\n    }, this), renderResults()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 856,\n    columnNumber: 9\n  }, this);\n}\nexport default Annotate;","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Annotate","files","setFiles","previews","setPreviews","annotatedResults","setAnnotatedResults","annotationType","setAnnotationType","isLoading","setIsLoading","processingProgress","setProcessingProgress","current","total","batchId","setBatchId","groundingDinoPrompts","setGroundingDinoPrompts","confidenceThreshold","setConfidenceThreshold","groundingDinoAvailable","setGroundingDinoAvailable","guardrailModelPath","setGuardrailModelPath","guardrailPrompts","setGuardrailPrompts","guardrailConfidenceThreshold","setGuardrailConfidenceThreshold","isTrainingAnomalyModel","setIsTrainingAnomalyModel","anomalyTrainingFiles","setAnomalyTrainingFiles","anomalyProjectName","setAnomalyProjectName","showAnomalyTraining","setShowAnomalyTraining","checkGroundingDinoStatus","response","fetch","data","json","available","error","console","handleFileChange","e","selectedFiles","Array","from","target","newPreviews","map","file","url","URL","createObjectURL","name","handleAnnotate","length","alert","newBatchId","Date","now","Math","random","toString","substr","handleGroundingDinoAnnotation","handleGuardrailAnnotation","handleTraditionalAnnotation","formData","FormData","forEach","append","method","body","ok","results","result","originalName","filename","success","status","annotatedUrl","image_base64","message","detections","total_detections","yolo_annotations","Error","i","push","annotated_image","btoa","String","fromCharCode","Uint8Array","endpointMap","endpoint","imageBlob","blob","handleDownloadZip","successfulResults","filter","window","a","document","createElement","style","display","href","download","appendChild","click","revokeObjectURL","removeChild","handleExportYoloDataset","groundingDinoResults","JSON","stringify","dataset_name","handleAnomalyModelTraining","trim","model_path","handleAnomalyTrainingFileChange","renderAnnotationTypeSelector","marginBottom","children","fileName","_jsxFileName","lineNumber","columnNumber","gridTemplateColumns","gap","alignItems","padding","border","borderRadius","backgroundColor","borderColor","cursor","type","value","checked","onChange","marginRight","marginTop","fontSize","renderGroundingDinoOptions","margin","color","fontWeight","placeholder","width","min","max","step","parseFloat","renderGuardrailOptions","onClick","multiple","accept","disabled","paddingLeft","renderResults","failedResults","justifyContent","some","r","index","src","alt","detection","idx","marginLeft","class","confidence","toFixed","maxWidth"],"sources":["/Users/truonghaidang/Desktop/open-trainer/frontend/src/components/Annotate.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nfunction Annotate() {\n    const [files, setFiles] = useState([]);\n    const [previews, setPreviews] = useState([]);\n    const [annotatedResults, setAnnotatedResults] = useState([]);\n    const [annotationType, setAnnotationType] = useState('detection');\n    const [isLoading, setIsLoading] = useState(false);\n    const [processingProgress, setProcessingProgress] = useState({ current: 0, total: 0 });\n    const [batchId, setBatchId] = useState(null);\n    \n    // GroundingDINO specific state\n    const [groundingDinoPrompts, setGroundingDinoPrompts] = useState('scratch, dent, dirt');\n    const [confidenceThreshold, setConfidenceThreshold] = useState(0.3);\n    const [groundingDinoAvailable, setGroundingDinoAvailable] = useState(false);\n\n    // Guardrail (Anomaly Detection + Classification) specific state\n    const [guardrailModelPath, setGuardrailModelPath] = useState('');\n    const [guardrailPrompts, setGuardrailPrompts] = useState('scratch, dent, dirt');\n    const [guardrailConfidenceThreshold, setGuardrailConfidenceThreshold] = useState(0.3);\n    const [isTrainingAnomalyModel, setIsTrainingAnomalyModel] = useState(false);\n    const [anomalyTrainingFiles, setAnomalyTrainingFiles] = useState([]);\n    const [anomalyProjectName, setAnomalyProjectName] = useState('');\n    const [showAnomalyTraining, setShowAnomalyTraining] = useState(false);\n\n    // Check GroundingDINO availability on component mount\n    useEffect(() => {\n        checkGroundingDinoStatus();\n    }, []);\n\n    const checkGroundingDinoStatus = async () => {\n        try {\n            const response = await fetch('/grounding-dino-status');\n            const data = await response.json();\n            setGroundingDinoAvailable(data.available);\n        } catch (error) {\n            console.error('Error checking GroundingDINO status:', error);\n            setGroundingDinoAvailable(false);\n        }\n    };\n\n    const handleFileChange = (e) => {\n        const selectedFiles = Array.from(e.target.files);\n        setFiles(selectedFiles);\n        \n        // Create previews for all selected files\n        const newPreviews = selectedFiles.map(file => ({\n            file,\n            url: URL.createObjectURL(file),\n            name: file.name\n        }));\n        setPreviews(newPreviews);\n        setAnnotatedResults([]); // Reset results when new files are selected\n    };\n\n    const handleAnnotate = async () => {\n        if (files.length === 0) {\n            alert(\"Please select at least one file first.\");\n            return;\n        }\n\n        setIsLoading(true);\n        setProcessingProgress({ current: 0, total: files.length });\n        setAnnotatedResults([]);\n\n        // Generate unique batch ID\n        const newBatchId = `batch_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n        setBatchId(newBatchId);\n\n        if (annotationType === 'grounding-dino') {\n            await handleGroundingDinoAnnotation(newBatchId);\n        } else if (annotationType === 'guardrail') {\n            await handleGuardrailAnnotation(newBatchId);\n        } else {\n            await handleTraditionalAnnotation(newBatchId);\n        }\n    };\n\n    const handleGroundingDinoAnnotation = async (newBatchId) => {\n        try {\n            const formData = new FormData();\n            files.forEach(file => formData.append('files', file));\n            formData.append('prompts', groundingDinoPrompts);\n            formData.append('confidence_threshold', confidenceThreshold);\n\n            const response = await fetch('/grounding-dino-batch', {\n                method: 'POST',\n                body: formData\n            });\n\n            if (response.ok) {\n                const data = await response.json();\n                \n                const results = data.results.map(result => ({\n                    originalName: result.filename,\n                    success: result.status === 'success',\n                    annotatedUrl: result.status === 'success' ? `data:image/jpeg;base64,${result.image_base64}` : null,\n                    error: result.status !== 'success' ? result.message : null,\n                    detections: result.detections || [],\n                    total_detections: result.total_detections || 0,\n                    yolo_annotations: result.yolo_annotations\n                }));\n\n                setAnnotatedResults(results);\n            } else {\n                throw new Error('GroundingDINO batch annotation failed');\n            }\n        } catch (error) {\n            console.error('GroundingDINO annotation error:', error);\n            alert('GroundingDINO annotation failed. Please try again.');\n        } finally {\n            setIsLoading(false);\n            setProcessingProgress({ current: 0, total: 0 });\n        }\n    };\n\n    const handleGuardrailAnnotation = async (newBatchId) => {\n        if (!guardrailModelPath) {\n            alert(\"Please provide the path to your trained anomaly model.\");\n            setIsLoading(false);\n            return;\n        }\n\n        const results = [];\n\n        try {\n            for (let i = 0; i < files.length; i++) {\n                const file = files[i];\n                setProcessingProgress({ current: i + 1, total: files.length });\n\n                const formData = new FormData();\n                formData.append(\"file\", file);\n                formData.append(\"model_path\", guardrailModelPath);\n                formData.append(\"prompts\", guardrailPrompts);\n                formData.append(\"confidence_threshold\", guardrailConfidenceThreshold);\n\n                try {\n                    const response = await fetch('/annotate-with-guardrail', {\n                        method: 'POST',\n                        body: formData\n                    });\n\n                    if (response.ok) {\n                        const data = await response.json();\n                        results.push({\n                            originalName: file.name,\n                            success: data.status === 'success',\n                            annotatedUrl: data.status === 'success' && data.annotated_image ? \n                                `data:image/jpeg;base64,${btoa(String.fromCharCode(...new Uint8Array(data.annotated_image)))}` : null,\n                            error: data.status !== 'success' ? data.message : null,\n                            detections: data.detections || [],\n                            total_detections: data.detections ? data.detections.length : 0\n                        });\n                    } else {\n                        results.push({\n                            originalName: file.name,\n                            success: false,\n                            error: \"Guardrail annotation failed\"\n                        });\n                    }\n                } catch (error) {\n                    console.error(`Error processing ${file.name}:`, error);\n                    results.push({\n                        originalName: file.name,\n                        success: false,\n                        error: \"Processing error\"\n                    });\n                }\n            }\n\n            setAnnotatedResults(results);\n        } catch (error) {\n            console.error('Guardrail annotation error:', error);\n            alert('Guardrail annotation failed. Please try again.');\n        } finally {\n            setIsLoading(false);\n            setProcessingProgress({ current: 0, total: 0 });\n        }\n    };\n\n    const handleTraditionalAnnotation = async (newBatchId) => {\n        const endpointMap = {\n            'detection': '/pre-annotate-detect',\n            'segmentation': '/pre-annotate-segment',\n            'sam2-detection': '/pre-annotate-sam2-detect',\n            'sam2-segmentation': '/pre-annotate-sam2-segment'\n        };\n        const endpoint = endpointMap[annotationType] || '/pre-annotate-detect';\n\n        const results = [];\n\n        try {\n            for (let i = 0; i < files.length; i++) {\n                const file = files[i];\n                setProcessingProgress({ current: i + 1, total: files.length });\n\n                const formData = new FormData();\n                formData.append(\"file\", file);\n                formData.append(\"batch_id\", newBatchId); // Add batch ID for caching\n\n                try {\n                    const response = await fetch(endpoint, {\n                        method: \"POST\",\n                        body: formData,\n                    });\n\n                    if (response.ok) {\n                        const imageBlob = await response.blob();\n                        results.push({\n                            originalName: file.name,\n                            annotatedUrl: URL.createObjectURL(imageBlob),\n                            success: true\n                        });\n                    } else {\n                        results.push({\n                            originalName: file.name,\n                            success: false,\n                            error: `${annotationType} annotation failed`\n                        });\n                    }\n                } catch (error) {\n                    console.error(`Error processing ${file.name}:`, error);\n                    results.push({\n                        originalName: file.name,\n                        success: false,\n                        error: \"Processing error\"\n                    });\n                }\n            }\n\n            setAnnotatedResults(results);\n        } catch (error) {\n            console.error(\"Error during batch annotation:\", error);\n            alert(\"An error occurred during batch annotation.\");\n        } finally {\n            setIsLoading(false);\n            setProcessingProgress({ current: 0, total: 0 });\n        }\n    };\n\n    const handleDownloadZip = async () => {\n        const successfulResults = annotatedResults.filter(result => result.success);\n        \n        if (successfulResults.length === 0) {\n            alert(\"No successful annotations to download.\");\n            return;\n        }\n\n        try {\n            const response = await fetch(`/download-batch-zip/${batchId}`, {\n                method: 'POST',\n            });\n\n            if (response.ok) {\n                const blob = await response.blob();\n                const url = window.URL.createObjectURL(blob);\n                const a = document.createElement('a');\n                a.style.display = 'none';\n                a.href = url;\n                a.download = `annotated_${annotationType}_batch.zip`;\n                document.body.appendChild(a);\n                a.click();\n                window.URL.revokeObjectURL(url);\n                document.body.removeChild(a);\n            } else {\n                throw new Error('Failed to download zip file');\n            }\n        } catch (error) {\n            console.error('Error downloading zip:', error);\n            alert('Failed to download zip file. Please try again.');\n        }\n    };\n\n    const handleExportYoloDataset = async () => {\n        const groundingDinoResults = annotatedResults.filter(result => \n            result.success && result.yolo_annotations\n        );\n\n        if (groundingDinoResults.length === 0) {\n            alert(\"No GroundingDINO results to export.\");\n            return;\n        }\n\n        try {\n            const formData = new FormData();\n            formData.append('annotation_results', JSON.stringify(groundingDinoResults));\n            formData.append('dataset_name', `grounding_dino_${Date.now()}`);\n\n            const response = await fetch('/grounding-dino-export-yolo', {\n                method: 'POST',\n                body: formData\n            });\n\n            if (response.ok) {\n                const data = await response.json();\n                alert(`YOLO dataset exported successfully: ${data.dataset_name}`);\n            } else {\n                throw new Error('Failed to export dataset');\n            }\n        } catch (error) {\n            console.error('Error exporting dataset:', error);\n            alert('Failed to export YOLO dataset.');\n        }\n    };\n\n    const handleAnomalyModelTraining = async () => {\n        if (anomalyTrainingFiles.length === 0) {\n            alert(\"Please select 'good' images to train the anomaly model.\");\n            return;\n        }\n\n        if (!anomalyProjectName.trim()) {\n            alert(\"Please provide a project name for the anomaly model.\");\n            return;\n        }\n\n        setIsTrainingAnomalyModel(true);\n\n        try {\n            const formData = new FormData();\n            anomalyTrainingFiles.forEach(file => formData.append('files', file));\n            formData.append('project_name', anomalyProjectName.trim());\n\n            const response = await fetch('/train-anomaly-model', {\n                method: 'POST',\n                body: formData\n            });\n\n            if (response.ok) {\n                const data = await response.json();\n                setGuardrailModelPath(data.model_path);\n                alert(`Anomaly model trained successfully! Model saved at: ${data.model_path}`);\n                setShowAnomalyTraining(false);\n                setAnomalyTrainingFiles([]);\n                setAnomalyProjectName('');\n            } else {\n                throw new Error('Failed to train anomaly model');\n            }\n        } catch (error) {\n            console.error('Error training anomaly model:', error);\n            alert('Failed to train anomaly model. Please try again.');\n        } finally {\n            setIsTrainingAnomalyModel(false);\n        }\n    };\n\n    const handleAnomalyTrainingFileChange = (e) => {\n        const selectedFiles = Array.from(e.target.files);\n        setAnomalyTrainingFiles(selectedFiles);\n    };\n\n    const renderAnnotationTypeSelector = () => (\n        <div style={{ marginBottom: '20px' }}>\n            <h3>🎯 Annotation Method</h3>\n            <div style={{ display: 'grid', gridTemplateColumns: 'repeat(auto-fit, minmax(200px, 1fr))', gap: '10px' }}>\n                <label style={{ \n                    display: 'flex', \n                    alignItems: 'center',\n                    padding: '10px',\n                    border: '2px solid #e2e8f0',\n                    borderRadius: '8px',\n                    backgroundColor: annotationType === 'detection' ? '#dbeafe' : 'white',\n                    borderColor: annotationType === 'detection' ? '#3b82f6' : '#e2e8f0',\n                    cursor: 'pointer'\n                }}>\n                    <input\n                        type=\"radio\"\n                        value=\"detection\"\n                        checked={annotationType === 'detection'}\n                        onChange={(e) => setAnnotationType(e.target.value)}\n                        style={{ marginRight: '8px' }}\n                    />\n                    <span>📦 OpenCV Detection</span>\n                </label>\n\n                <label style={{\n                    display: 'flex', \n                    alignItems: 'center',\n                    padding: '10px',\n                    border: '2px solid #e2e8f0',\n                    borderRadius: '8px',\n                    backgroundColor: annotationType === 'segmentation' ? '#dbeafe' : 'white',\n                    borderColor: annotationType === 'segmentation' ? '#3b82f6' : '#e2e8f0',\n                    cursor: 'pointer'\n                }}>\n                    <input\n                        type=\"radio\"\n                        value=\"segmentation\"\n                        checked={annotationType === 'segmentation'}\n                        onChange={(e) => setAnnotationType(e.target.value)}\n                        style={{ marginRight: '8px' }}\n                    />\n                    <span>✂️ OpenCV Segmentation</span>\n                </label>\n\n                <label style={{\n                    display: 'flex', \n                    alignItems: 'center',\n                    padding: '10px',\n                    border: '2px solid #e2e8f0',\n                    borderRadius: '8px',\n                    backgroundColor: annotationType === 'sam2-detection' ? '#dbeafe' : 'white',\n                    borderColor: annotationType === 'sam2-detection' ? '#3b82f6' : '#e2e8f0',\n                    cursor: 'pointer'\n                }}>\n                    <input\n                        type=\"radio\"\n                        value=\"sam2-detection\"\n                        checked={annotationType === 'sam2-detection'}\n                        onChange={(e) => setAnnotationType(e.target.value)}\n                        style={{ marginRight: '8px' }}\n                    />\n                    <span>🎯 SAM2 Detection</span>\n                </label>\n\n                <label style={{\n                    display: 'flex', \n                    alignItems: 'center',\n                    padding: '10px',\n                    border: '2px solid #e2e8f0',\n                    borderRadius: '8px',\n                    backgroundColor: annotationType === 'sam2-segmentation' ? '#dbeafe' : 'white',\n                    borderColor: annotationType === 'sam2-segmentation' ? '#3b82f6' : '#e2e8f0',\n                    cursor: 'pointer'\n                }}>\n                    <input\n                        type=\"radio\"\n                        value=\"sam2-segmentation\"\n                        checked={annotationType === 'sam2-segmentation'}\n                        onChange={(e) => setAnnotationType(e.target.value)}\n                        style={{ marginRight: '8px' }}\n                    />\n                    <span>🔪 SAM2 Segmentation</span>\n                </label>\n\n                {groundingDinoAvailable && (\n                    <label style={{\n                        display: 'flex', \n                        alignItems: 'center',\n                        padding: '10px',\n                        border: '2px solid #10b981',\n                        borderRadius: '8px',\n                        backgroundColor: annotationType === 'grounding-dino' ? '#d1fae5' : 'white',\n                        borderColor: annotationType === 'grounding-dino' ? '#10b981' : '#10b981',\n                        cursor: 'pointer'\n                    }}>\n                        <input\n                            type=\"radio\"\n                            value=\"grounding-dino\"\n                            checked={annotationType === 'grounding-dino'}\n                            onChange={(e) => setAnnotationType(e.target.value)}\n                            style={{ marginRight: '8px' }}\n                        />\n                        <span>✨ GroundingDINO (AI-Powered)</span>\n                    </label>\n                )}\n\n                {groundingDinoAvailable && (\n                    <label style={{\n                        display: 'flex', \n                        alignItems: 'center',\n                        padding: '10px',\n                        border: '2px solid #7c3aed',\n                        borderRadius: '8px',\n                        backgroundColor: annotationType === 'guardrail' ? '#ede9fe' : 'white',\n                        borderColor: annotationType === 'guardrail' ? '#7c3aed' : '#7c3aed',\n                        cursor: 'pointer'\n                    }}>\n                        <input\n                            type=\"radio\"\n                            value=\"guardrail\"\n                            checked={annotationType === 'guardrail'}\n                            onChange={(e) => setAnnotationType(e.target.value)}\n                            style={{ marginRight: '8px' }}\n                        />\n                        <span>🛡️ Guardrail (Anomaly + AI)</span>\n                    </label>\n                )}\n            </div>\n\n            {!groundingDinoAvailable && (\n                <div style={{ \n                    marginTop: '10px', \n                    padding: '10px', \n                    backgroundColor: '#fef3c7', \n                    border: '1px solid #f59e0b',\n                    borderRadius: '4px',\n                    fontSize: '14px'\n                }}>\n                    ⚠️ GroundingDINO not available. Please install dependencies to use AI-powered annotation.\n                </div>\n            )}\n        </div>\n    );\n\n    const renderGroundingDinoOptions = () => {\n        if (annotationType !== 'grounding-dino') return null;\n\n        return (\n            <div style={{\n                marginBottom: '20px',\n                padding: '20px',\n                backgroundColor: '#f0fdf4',\n                border: '1px solid #10b981',\n                borderRadius: '8px'\n            }}>\n                <h4 style={{ margin: '0 0 15px 0', color: '#059669' }}>✨ GroundingDINO Settings</h4>\n                \n                <div style={{ marginBottom: '15px' }}>\n                    <label style={{ display: 'block', marginBottom: '5px', fontWeight: 'bold' }}>\n                        Defect Prompts (comma-separated):\n                    </label>\n                    <input\n                        type=\"text\"\n                        value={groundingDinoPrompts}\n                        onChange={(e) => setGroundingDinoPrompts(e.target.value)}\n                        placeholder=\"e.g., scratch, dent, dirt, corrosion, crack\"\n                        style={{ \n                            width: '100%', \n                            padding: '8px', \n                            border: '1px solid #d1d5db',\n                            borderRadius: '4px',\n                            fontSize: '14px'\n                        }}\n                    />\n                    <div style={{ fontSize: '12px', color: '#6b7280', marginTop: '5px' }}>\n                        Describe the defects you want to detect. Be specific (e.g., \"scratch on metal surface\").\n                    </div>\n                </div>\n\n                <div style={{ marginBottom: '15px' }}>\n                    <label style={{ display: 'block', marginBottom: '5px', fontWeight: 'bold' }}>\n                        Confidence Threshold: {confidenceThreshold}\n                    </label>\n                    <input\n                        type=\"range\"\n                        min=\"0.1\"\n                        max=\"0.9\"\n                        step=\"0.1\"\n                        value={confidenceThreshold}\n                        onChange={(e) => setConfidenceThreshold(parseFloat(e.target.value))}\n                        style={{ width: '200px' }}\n                    />\n                    <div style={{ fontSize: '12px', color: '#6b7280', marginTop: '5px' }}>\n                        Lower values detect more objects but may include false positives.\n                    </div>\n                </div>\n            </div>\n        );\n    };\n\n    const renderGuardrailOptions = () => {\n        if (annotationType !== 'guardrail') return null;\n\n        return (\n            <div style={{\n                marginBottom: '20px',\n                padding: '20px',\n                backgroundColor: '#faf5ff',\n                border: '1px solid #7c3aed',\n                borderRadius: '8px'\n            }}>\n                <h4 style={{ margin: '0 0 15px 0', color: '#7c3aed' }}>🛡️ Guardrail Settings (Anomaly Detection + AI Classification)</h4>\n                \n                {/* Model Path Input */}\n                <div style={{ marginBottom: '15px' }}>\n                    <label style={{ display: 'block', marginBottom: '5px', fontWeight: 'bold' }}>\n                        Anomaly Model Path:\n                    </label>\n                    <input\n                        type=\"text\"\n                        value={guardrailModelPath}\n                        onChange={(e) => setGuardrailModelPath(e.target.value)}\n                        placeholder=\"Path to your trained anomaly detection model (e.g., ml/models/anomaly/project_name/patchcore_model.ckpt)\"\n                        style={{ \n                            width: '100%', \n                            padding: '8px', \n                            border: '1px solid #d1d5db',\n                            borderRadius: '4px',\n                            fontSize: '14px'\n                        }}\n                    />\n                    <div style={{ fontSize: '12px', color: '#6b7280', marginTop: '5px' }}>\n                        Path to your trained PatchCore anomaly detection model.\n                    </div>\n                </div>\n\n                {/* Train New Model Button */}\n                <div style={{ marginBottom: '15px' }}>\n                    <button\n                        onClick={() => setShowAnomalyTraining(!showAnomalyTraining)}\n                        style={{\n                            backgroundColor: '#7c3aed',\n                            color: 'white',\n                            padding: '8px 16px',\n                            border: 'none',\n                            borderRadius: '4px',\n                            cursor: 'pointer',\n                            fontSize: '14px'\n                        }}\n                    >\n                        {showAnomalyTraining ? '❌ Cancel Training' : '🔧 Train New Anomaly Model'}\n                    </button>\n                </div>\n\n                {/* Anomaly Model Training Section */}\n                {showAnomalyTraining && (\n                    <div style={{\n                        padding: '15px',\n                        backgroundColor: '#f3f4f6',\n                        border: '1px solid #d1d5db',\n                        borderRadius: '6px',\n                        marginBottom: '15px'\n                    }}>\n                        <h5 style={{ margin: '0 0 10px 0', color: '#7c3aed' }}>Train Anomaly Detection Model</h5>\n                        \n                        <div style={{ marginBottom: '10px' }}>\n                            <label style={{ display: 'block', marginBottom: '5px', fontWeight: 'bold' }}>\n                                Project Name:\n                            </label>\n                            <input\n                                type=\"text\"\n                                value={anomalyProjectName}\n                                onChange={(e) => setAnomalyProjectName(e.target.value)}\n                                placeholder=\"e.g., metal_parts_project\"\n                                style={{\n                                    width: '100%',\n                                    padding: '6px',\n                                    border: '1px solid #d1d5db',\n                                    borderRadius: '4px',\n                                    fontSize: '14px'\n                                }}\n                            />\n                        </div>\n\n                        <div style={{ marginBottom: '10px' }}>\n                            <label style={{ display: 'block', marginBottom: '5px', fontWeight: 'bold' }}>\n                                Select \"Good\" Images (Defect-Free Examples):\n                            </label>\n                            <input\n                                type=\"file\"\n                                multiple\n                                accept=\"image/*\"\n                                onChange={handleAnomalyTrainingFileChange}\n                                style={{\n                                    width: '100%',\n                                    padding: '6px',\n                                    border: '1px solid #d1d5db',\n                                    borderRadius: '4px',\n                                    fontSize: '14px'\n                                }}\n                            />\n                            {anomalyTrainingFiles.length > 0 && (\n                                <div style={{ fontSize: '12px', color: '#059669', marginTop: '5px' }}>\n                                    ✅ {anomalyTrainingFiles.length} good image(s) selected\n                                </div>\n                            )}\n                            <div style={{ fontSize: '12px', color: '#6b7280', marginTop: '5px' }}>\n                                Upload 10-50 images of defect-free products. The model will learn what \"normal\" looks like.\n                            </div>\n                        </div>\n\n                        <button\n                            onClick={handleAnomalyModelTraining}\n                            disabled={isTrainingAnomalyModel || anomalyTrainingFiles.length === 0 || !anomalyProjectName.trim()}\n                            style={{\n                                backgroundColor: isTrainingAnomalyModel ? '#9ca3af' : '#059669',\n                                color: 'white',\n                                padding: '8px 16px',\n                                border: 'none',\n                                borderRadius: '4px',\n                                cursor: isTrainingAnomalyModel ? 'not-allowed' : 'pointer',\n                                fontSize: '14px'\n                            }}\n                        >\n                            {isTrainingAnomalyModel ? '🔄 Training...' : '🚀 Train Model'}\n                        </button>\n                    </div>\n                )}\n\n                {/* Classification Prompts */}\n                <div style={{ marginBottom: '15px' }}>\n                    <label style={{ display: 'block', marginBottom: '5px', fontWeight: 'bold' }}>\n                        Classification Prompts (comma-separated):\n                    </label>\n                    <input\n                        type=\"text\"\n                        value={guardrailPrompts}\n                        onChange={(e) => setGuardrailPrompts(e.target.value)}\n                        placeholder=\"e.g., scratch, dent, dirt, corrosion, crack\"\n                        style={{ \n                            width: '100%', \n                            padding: '8px', \n                            border: '1px solid #d1d5db',\n                            borderRadius: '4px',\n                            fontSize: '14px'\n                        }}\n                    />\n                    <div style={{ fontSize: '12px', color: '#6b7280', marginTop: '5px' }}>\n                        After detecting anomalies, the system will use GroundingDINO to classify them with these prompts.\n                    </div>\n                </div>\n\n                {/* Confidence Threshold */}\n                <div style={{ marginBottom: '15px' }}>\n                    <label style={{ display: 'block', marginBottom: '5px', fontWeight: 'bold' }}>\n                        Classification Confidence Threshold: {guardrailConfidenceThreshold}\n                    </label>\n                    <input\n                        type=\"range\"\n                        min=\"0.1\"\n                        max=\"0.9\"\n                        step=\"0.1\"\n                        value={guardrailConfidenceThreshold}\n                        onChange={(e) => setGuardrailConfidenceThreshold(parseFloat(e.target.value))}\n                        style={{ width: '200px' }}\n                    />\n                    <div style={{ fontSize: '12px', color: '#6b7280', marginTop: '5px' }}>\n                        Confidence threshold for GroundingDINO classification of detected anomalies.\n                    </div>\n                </div>\n\n                {/* How it works */}\n                <div style={{\n                    padding: '10px',\n                    backgroundColor: '#e0e7ff',\n                    border: '1px solid #3b82f6',\n                    borderRadius: '4px',\n                    fontSize: '12px'\n                }}>\n                    <strong>How Guardrail Works:</strong>\n                    <ol style={{ margin: '5px 0', paddingLeft: '20px' }}>\n                        <li><strong>Anomaly Detection:</strong> PatchCore detects deviations from \"normal\" (high sensitivity)</li>\n                        <li><strong>Classification:</strong> GroundingDINO classifies detected anomalies using your prompts</li>\n                        <li><strong>Result:</strong> Only real defects are labeled, with minimal false positives</li>\n                    </ol>\n                </div>\n            </div>\n        );\n    };\n\n    const renderResults = () => {\n        if (annotatedResults.length === 0) return null;\n\n        const successfulResults = annotatedResults.filter(result => result.success);\n        const failedResults = annotatedResults.filter(result => !result.success);\n\n        return (\n            <div style={{ marginTop: '30px' }}>\n                <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', marginBottom: '20px' }}>\n                    <h3>📊 Annotation Results</h3>\n                    <div style={{ display: 'flex', gap: '10px' }}>\n                        {successfulResults.length > 0 && (\n                            <button \n                                onClick={handleDownloadZip}\n                                style={{\n                                    backgroundColor: '#059669',\n                                    color: 'white',\n                                    padding: '8px 16px',\n                                    border: 'none',\n                                    borderRadius: '4px',\n                                    cursor: 'pointer'\n                                }}\n                            >\n                                📥 Download ZIP\n                            </button>\n                        )}\n                        {annotationType === 'grounding-dino' && successfulResults.some(r => r.yolo_annotations) && (\n                            <button \n                                onClick={handleExportYoloDataset}\n                                style={{\n                                    backgroundColor: '#7c3aed',\n                                    color: 'white',\n                                    padding: '8px 16px',\n                                    border: 'none',\n                                    borderRadius: '4px',\n                                    cursor: 'pointer'\n                                }}\n                            >\n                                📦 Export YOLO Dataset\n                            </button>\n                        )}\n                    </div>\n                </div>\n\n                <div style={{ \n                    display: 'grid', \n                    gridTemplateColumns: 'repeat(auto-fit, minmax(300px, 1fr))', \n                    gap: '20px',\n                    marginBottom: '20px'\n                }}>\n                    <div style={{\n                        padding: '15px',\n                        backgroundColor: '#dcfce7',\n                        border: '1px solid #86efac',\n                        borderRadius: '8px'\n                    }}>\n                        <div style={{ fontSize: '18px', fontWeight: 'bold', color: '#059669' }}>\n                            ✅ Successful: {successfulResults.length}\n                        </div>\n                    </div>\n                    <div style={{\n                        padding: '15px',\n                        backgroundColor: '#fee2e2',\n                        border: '1px solid #fca5a5',\n                        borderRadius: '8px'\n                    }}>\n                        <div style={{ fontSize: '18px', fontWeight: 'bold', color: '#dc2626' }}>\n                            ❌ Failed: {failedResults.length}\n                        </div>\n                    </div>\n                </div>\n\n                <div style={{ display: 'grid', gridTemplateColumns: 'repeat(auto-fit, minmax(400px, 1fr))', gap: '20px' }}>\n                    {annotatedResults.map((result, index) => (\n                        <div key={index} style={{ \n                            border: '1px solid #e2e8f0', \n                            borderRadius: '8px', \n                            padding: '15px',\n                            backgroundColor: result.success ? '#f9fafb' : '#fef2f2'\n                        }}>\n                            <h4 style={{ margin: '0 0 10px 0' }}>{result.originalName}</h4>\n                            \n                            {result.success ? (\n                                <div>\n                                    <img \n                                        src={result.annotatedUrl} \n                                        alt={`Annotated ${result.originalName}`} \n                                        style={{ width: '100%', borderRadius: '4px', marginBottom: '10px' }}\n                                    />\n                                    \n                                    {result.detections && (\n                                        <div style={{ fontSize: '14px', color: '#6b7280' }}>\n                                            <strong>Detections:</strong> {result.total_detections || result.detections.length}\n                                            {result.detections.map((detection, idx) => (\n                                                <div key={idx} style={{ marginLeft: '10px', fontSize: '12px' }}>\n                                                    • {detection.class}: {(detection.confidence * 100).toFixed(1)}%\n                                                </div>\n                                            ))}\n                                        </div>\n                                    )}\n                                </div>\n                            ) : (\n                                <div style={{ color: '#dc2626' }}>\n                                    Error: {result.error}\n                                </div>\n                            )}\n                        </div>\n                    ))}\n                </div>\n            </div>\n        );\n    };\n\n    return (\n        <div style={{ padding: '20px', maxWidth: '1200px', margin: '0 auto' }}>\n            <h2>🏷️ Image Annotation</h2>\n            \n            <div style={{ marginBottom: '20px' }}>\n                <label style={{ display: 'block', marginBottom: '10px', fontSize: '16px', fontWeight: 'bold' }}>\n                    📁 Select Images:\n                </label>\n                <input \n                    type=\"file\" \n                    multiple \n                    accept=\"image/*\"\n                    onChange={handleFileChange}\n                    style={{ \n                        padding: '10px',\n                        border: '2px dashed #d1d5db',\n                        borderRadius: '8px',\n                        width: '100%',\n                        cursor: 'pointer'\n                    }}\n                />\n                {files.length > 0 && (\n                    <div style={{ marginTop: '10px', fontSize: '14px', color: '#059669' }}>\n                        ✅ {files.length} image(s) selected\n                    </div>\n                )}\n            </div>\n\n            {renderAnnotationTypeSelector()}\n            {renderGroundingDinoOptions()}\n            {renderGuardrailOptions()}\n\n            <div style={{ marginBottom: '30px' }}>\n                <button \n                    onClick={handleAnnotate}\n                    disabled={files.length === 0 || isLoading}\n                    style={{\n                        backgroundColor: files.length === 0 || isLoading ? '#9ca3af' : '#1e3a8a',\n                        color: 'white',\n                        padding: '12px 24px',\n                        border: 'none',\n                        borderRadius: '8px',\n                        fontSize: '16px',\n                        cursor: files.length === 0 || isLoading ? 'not-allowed' : 'pointer'\n                    }}\n                >\n                    {isLoading ? `🔄 Processing... (${processingProgress.current}/${processingProgress.total})` : '🚀 Start Annotation'}\n                </button>\n            </div>\n\n            {renderResults()}\n        </div>\n    );\n}\n\nexport default Annotate;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,QAAQA,CAAA,EAAG;EAChB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACO,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACS,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC5D,MAAM,CAACW,cAAc,EAAEC,iBAAiB,CAAC,GAAGZ,QAAQ,CAAC,WAAW,CAAC;EACjE,MAAM,CAACa,SAAS,EAAEC,YAAY,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACe,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGhB,QAAQ,CAAC;IAAEiB,OAAO,EAAE,CAAC;IAAEC,KAAK,EAAE;EAAE,CAAC,CAAC;EACtF,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGpB,QAAQ,CAAC,IAAI,CAAC;;EAE5C;EACA,MAAM,CAACqB,oBAAoB,EAAEC,uBAAuB,CAAC,GAAGtB,QAAQ,CAAC,qBAAqB,CAAC;EACvF,MAAM,CAACuB,mBAAmB,EAAEC,sBAAsB,CAAC,GAAGxB,QAAQ,CAAC,GAAG,CAAC;EACnE,MAAM,CAACyB,sBAAsB,EAAEC,yBAAyB,CAAC,GAAG1B,QAAQ,CAAC,KAAK,CAAC;;EAE3E;EACA,MAAM,CAAC2B,kBAAkB,EAAEC,qBAAqB,CAAC,GAAG5B,QAAQ,CAAC,EAAE,CAAC;EAChE,MAAM,CAAC6B,gBAAgB,EAAEC,mBAAmB,CAAC,GAAG9B,QAAQ,CAAC,qBAAqB,CAAC;EAC/E,MAAM,CAAC+B,4BAA4B,EAAEC,+BAA+B,CAAC,GAAGhC,QAAQ,CAAC,GAAG,CAAC;EACrF,MAAM,CAACiC,sBAAsB,EAAEC,yBAAyB,CAAC,GAAGlC,QAAQ,CAAC,KAAK,CAAC;EAC3E,MAAM,CAACmC,oBAAoB,EAAEC,uBAAuB,CAAC,GAAGpC,QAAQ,CAAC,EAAE,CAAC;EACpE,MAAM,CAACqC,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGtC,QAAQ,CAAC,EAAE,CAAC;EAChE,MAAM,CAACuC,mBAAmB,EAAEC,sBAAsB,CAAC,GAAGxC,QAAQ,CAAC,KAAK,CAAC;;EAErE;EACAC,SAAS,CAAC,MAAM;IACZwC,wBAAwB,CAAC,CAAC;EAC9B,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,wBAAwB,GAAG,MAAAA,CAAA,KAAY;IACzC,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,wBAAwB,CAAC;MACtD,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAClCnB,yBAAyB,CAACkB,IAAI,CAACE,SAAS,CAAC;IAC7C,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,sCAAsC,EAAEA,KAAK,CAAC;MAC5DrB,yBAAyB,CAAC,KAAK,CAAC;IACpC;EACJ,CAAC;EAED,MAAMuB,gBAAgB,GAAIC,CAAC,IAAK;IAC5B,MAAMC,aAAa,GAAGC,KAAK,CAACC,IAAI,CAACH,CAAC,CAACI,MAAM,CAACjD,KAAK,CAAC;IAChDC,QAAQ,CAAC6C,aAAa,CAAC;;IAEvB;IACA,MAAMI,WAAW,GAAGJ,aAAa,CAACK,GAAG,CAACC,IAAI,KAAK;MAC3CA,IAAI;MACJC,GAAG,EAAEC,GAAG,CAACC,eAAe,CAACH,IAAI,CAAC;MAC9BI,IAAI,EAAEJ,IAAI,CAACI;IACf,CAAC,CAAC,CAAC;IACHrD,WAAW,CAAC+C,WAAW,CAAC;IACxB7C,mBAAmB,CAAC,EAAE,CAAC,CAAC,CAAC;EAC7B,CAAC;EAED,MAAMoD,cAAc,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAIzD,KAAK,CAAC0D,MAAM,KAAK,CAAC,EAAE;MACpBC,KAAK,CAAC,wCAAwC,CAAC;MAC/C;IACJ;IAEAlD,YAAY,CAAC,IAAI,CAAC;IAClBE,qBAAqB,CAAC;MAAEC,OAAO,EAAE,CAAC;MAAEC,KAAK,EAAEb,KAAK,CAAC0D;IAAO,CAAC,CAAC;IAC1DrD,mBAAmB,CAAC,EAAE,CAAC;;IAEvB;IACA,MAAMuD,UAAU,GAAG,SAASC,IAAI,CAACC,GAAG,CAAC,CAAC,IAAIC,IAAI,CAACC,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,EAAE,CAAC,CAACC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE;IACnFnD,UAAU,CAAC6C,UAAU,CAAC;IAEtB,IAAItD,cAAc,KAAK,gBAAgB,EAAE;MACrC,MAAM6D,6BAA6B,CAACP,UAAU,CAAC;IACnD,CAAC,MAAM,IAAItD,cAAc,KAAK,WAAW,EAAE;MACvC,MAAM8D,yBAAyB,CAACR,UAAU,CAAC;IAC/C,CAAC,MAAM;MACH,MAAMS,2BAA2B,CAACT,UAAU,CAAC;IACjD;EACJ,CAAC;EAED,MAAMO,6BAA6B,GAAG,MAAOP,UAAU,IAAK;IACxD,IAAI;MACA,MAAMU,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;MAC/BvE,KAAK,CAACwE,OAAO,CAACpB,IAAI,IAAIkB,QAAQ,CAACG,MAAM,CAAC,OAAO,EAAErB,IAAI,CAAC,CAAC;MACrDkB,QAAQ,CAACG,MAAM,CAAC,SAAS,EAAEzD,oBAAoB,CAAC;MAChDsD,QAAQ,CAACG,MAAM,CAAC,sBAAsB,EAAEvD,mBAAmB,CAAC;MAE5D,MAAMmB,QAAQ,GAAG,MAAMC,KAAK,CAAC,uBAAuB,EAAE;QAClDoC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAEL;MACV,CAAC,CAAC;MAEF,IAAIjC,QAAQ,CAACuC,EAAE,EAAE;QACb,MAAMrC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QAElC,MAAMqC,OAAO,GAAGtC,IAAI,CAACsC,OAAO,CAAC1B,GAAG,CAAC2B,MAAM,KAAK;UACxCC,YAAY,EAAED,MAAM,CAACE,QAAQ;UAC7BC,OAAO,EAAEH,MAAM,CAACI,MAAM,KAAK,SAAS;UACpCC,YAAY,EAAEL,MAAM,CAACI,MAAM,KAAK,SAAS,GAAG,0BAA0BJ,MAAM,CAACM,YAAY,EAAE,GAAG,IAAI;UAClG1C,KAAK,EAAEoC,MAAM,CAACI,MAAM,KAAK,SAAS,GAAGJ,MAAM,CAACO,OAAO,GAAG,IAAI;UAC1DC,UAAU,EAAER,MAAM,CAACQ,UAAU,IAAI,EAAE;UACnCC,gBAAgB,EAAET,MAAM,CAACS,gBAAgB,IAAI,CAAC;UAC9CC,gBAAgB,EAAEV,MAAM,CAACU;QAC7B,CAAC,CAAC,CAAC;QAEHnF,mBAAmB,CAACwE,OAAO,CAAC;MAChC,CAAC,MAAM;QACH,MAAM,IAAIY,KAAK,CAAC,uCAAuC,CAAC;MAC5D;IACJ,CAAC,CAAC,OAAO/C,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;MACvDiB,KAAK,CAAC,oDAAoD,CAAC;IAC/D,CAAC,SAAS;MACNlD,YAAY,CAAC,KAAK,CAAC;MACnBE,qBAAqB,CAAC;QAAEC,OAAO,EAAE,CAAC;QAAEC,KAAK,EAAE;MAAE,CAAC,CAAC;IACnD;EACJ,CAAC;EAED,MAAMuD,yBAAyB,GAAG,MAAOR,UAAU,IAAK;IACpD,IAAI,CAACtC,kBAAkB,EAAE;MACrBqC,KAAK,CAAC,wDAAwD,CAAC;MAC/DlD,YAAY,CAAC,KAAK,CAAC;MACnB;IACJ;IAEA,MAAMoE,OAAO,GAAG,EAAE;IAElB,IAAI;MACA,KAAK,IAAIa,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG1F,KAAK,CAAC0D,MAAM,EAAEgC,CAAC,EAAE,EAAE;QACnC,MAAMtC,IAAI,GAAGpD,KAAK,CAAC0F,CAAC,CAAC;QACrB/E,qBAAqB,CAAC;UAAEC,OAAO,EAAE8E,CAAC,GAAG,CAAC;UAAE7E,KAAK,EAAEb,KAAK,CAAC0D;QAAO,CAAC,CAAC;QAE9D,MAAMY,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;QAC/BD,QAAQ,CAACG,MAAM,CAAC,MAAM,EAAErB,IAAI,CAAC;QAC7BkB,QAAQ,CAACG,MAAM,CAAC,YAAY,EAAEnD,kBAAkB,CAAC;QACjDgD,QAAQ,CAACG,MAAM,CAAC,SAAS,EAAEjD,gBAAgB,CAAC;QAC5C8C,QAAQ,CAACG,MAAM,CAAC,sBAAsB,EAAE/C,4BAA4B,CAAC;QAErE,IAAI;UACA,MAAMW,QAAQ,GAAG,MAAMC,KAAK,CAAC,0BAA0B,EAAE;YACrDoC,MAAM,EAAE,MAAM;YACdC,IAAI,EAAEL;UACV,CAAC,CAAC;UAEF,IAAIjC,QAAQ,CAACuC,EAAE,EAAE;YACb,MAAMrC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;YAClCqC,OAAO,CAACc,IAAI,CAAC;cACTZ,YAAY,EAAE3B,IAAI,CAACI,IAAI;cACvByB,OAAO,EAAE1C,IAAI,CAAC2C,MAAM,KAAK,SAAS;cAClCC,YAAY,EAAE5C,IAAI,CAAC2C,MAAM,KAAK,SAAS,IAAI3C,IAAI,CAACqD,eAAe,GAC3D,0BAA0BC,IAAI,CAACC,MAAM,CAACC,YAAY,CAAC,GAAG,IAAIC,UAAU,CAACzD,IAAI,CAACqD,eAAe,CAAC,CAAC,CAAC,EAAE,GAAG,IAAI;cACzGlD,KAAK,EAAEH,IAAI,CAAC2C,MAAM,KAAK,SAAS,GAAG3C,IAAI,CAAC8C,OAAO,GAAG,IAAI;cACtDC,UAAU,EAAE/C,IAAI,CAAC+C,UAAU,IAAI,EAAE;cACjCC,gBAAgB,EAAEhD,IAAI,CAAC+C,UAAU,GAAG/C,IAAI,CAAC+C,UAAU,CAAC5B,MAAM,GAAG;YACjE,CAAC,CAAC;UACN,CAAC,MAAM;YACHmB,OAAO,CAACc,IAAI,CAAC;cACTZ,YAAY,EAAE3B,IAAI,CAACI,IAAI;cACvByB,OAAO,EAAE,KAAK;cACdvC,KAAK,EAAE;YACX,CAAC,CAAC;UACN;QACJ,CAAC,CAAC,OAAOA,KAAK,EAAE;UACZC,OAAO,CAACD,KAAK,CAAC,oBAAoBU,IAAI,CAACI,IAAI,GAAG,EAAEd,KAAK,CAAC;UACtDmC,OAAO,CAACc,IAAI,CAAC;YACTZ,YAAY,EAAE3B,IAAI,CAACI,IAAI;YACvByB,OAAO,EAAE,KAAK;YACdvC,KAAK,EAAE;UACX,CAAC,CAAC;QACN;MACJ;MAEArC,mBAAmB,CAACwE,OAAO,CAAC;IAChC,CAAC,CAAC,OAAOnC,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACnDiB,KAAK,CAAC,gDAAgD,CAAC;IAC3D,CAAC,SAAS;MACNlD,YAAY,CAAC,KAAK,CAAC;MACnBE,qBAAqB,CAAC;QAAEC,OAAO,EAAE,CAAC;QAAEC,KAAK,EAAE;MAAE,CAAC,CAAC;IACnD;EACJ,CAAC;EAED,MAAMwD,2BAA2B,GAAG,MAAOT,UAAU,IAAK;IACtD,MAAMqC,WAAW,GAAG;MAChB,WAAW,EAAE,sBAAsB;MACnC,cAAc,EAAE,uBAAuB;MACvC,gBAAgB,EAAE,2BAA2B;MAC7C,mBAAmB,EAAE;IACzB,CAAC;IACD,MAAMC,QAAQ,GAAGD,WAAW,CAAC3F,cAAc,CAAC,IAAI,sBAAsB;IAEtE,MAAMuE,OAAO,GAAG,EAAE;IAElB,IAAI;MACA,KAAK,IAAIa,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG1F,KAAK,CAAC0D,MAAM,EAAEgC,CAAC,EAAE,EAAE;QACnC,MAAMtC,IAAI,GAAGpD,KAAK,CAAC0F,CAAC,CAAC;QACrB/E,qBAAqB,CAAC;UAAEC,OAAO,EAAE8E,CAAC,GAAG,CAAC;UAAE7E,KAAK,EAAEb,KAAK,CAAC0D;QAAO,CAAC,CAAC;QAE9D,MAAMY,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;QAC/BD,QAAQ,CAACG,MAAM,CAAC,MAAM,EAAErB,IAAI,CAAC;QAC7BkB,QAAQ,CAACG,MAAM,CAAC,UAAU,EAAEb,UAAU,CAAC,CAAC,CAAC;;QAEzC,IAAI;UACA,MAAMvB,QAAQ,GAAG,MAAMC,KAAK,CAAC4D,QAAQ,EAAE;YACnCxB,MAAM,EAAE,MAAM;YACdC,IAAI,EAAEL;UACV,CAAC,CAAC;UAEF,IAAIjC,QAAQ,CAACuC,EAAE,EAAE;YACb,MAAMuB,SAAS,GAAG,MAAM9D,QAAQ,CAAC+D,IAAI,CAAC,CAAC;YACvCvB,OAAO,CAACc,IAAI,CAAC;cACTZ,YAAY,EAAE3B,IAAI,CAACI,IAAI;cACvB2B,YAAY,EAAE7B,GAAG,CAACC,eAAe,CAAC4C,SAAS,CAAC;cAC5ClB,OAAO,EAAE;YACb,CAAC,CAAC;UACN,CAAC,MAAM;YACHJ,OAAO,CAACc,IAAI,CAAC;cACTZ,YAAY,EAAE3B,IAAI,CAACI,IAAI;cACvByB,OAAO,EAAE,KAAK;cACdvC,KAAK,EAAE,GAAGpC,cAAc;YAC5B,CAAC,CAAC;UACN;QACJ,CAAC,CAAC,OAAOoC,KAAK,EAAE;UACZC,OAAO,CAACD,KAAK,CAAC,oBAAoBU,IAAI,CAACI,IAAI,GAAG,EAAEd,KAAK,CAAC;UACtDmC,OAAO,CAACc,IAAI,CAAC;YACTZ,YAAY,EAAE3B,IAAI,CAACI,IAAI;YACvByB,OAAO,EAAE,KAAK;YACdvC,KAAK,EAAE;UACX,CAAC,CAAC;QACN;MACJ;MAEArC,mBAAmB,CAACwE,OAAO,CAAC;IAChC,CAAC,CAAC,OAAOnC,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;MACtDiB,KAAK,CAAC,4CAA4C,CAAC;IACvD,CAAC,SAAS;MACNlD,YAAY,CAAC,KAAK,CAAC;MACnBE,qBAAqB,CAAC;QAAEC,OAAO,EAAE,CAAC;QAAEC,KAAK,EAAE;MAAE,CAAC,CAAC;IACnD;EACJ,CAAC;EAED,MAAMwF,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IAClC,MAAMC,iBAAiB,GAAGlG,gBAAgB,CAACmG,MAAM,CAACzB,MAAM,IAAIA,MAAM,CAACG,OAAO,CAAC;IAE3E,IAAIqB,iBAAiB,CAAC5C,MAAM,KAAK,CAAC,EAAE;MAChCC,KAAK,CAAC,wCAAwC,CAAC;MAC/C;IACJ;IAEA,IAAI;MACA,MAAMtB,QAAQ,GAAG,MAAMC,KAAK,CAAC,uBAAuBxB,OAAO,EAAE,EAAE;QAC3D4D,MAAM,EAAE;MACZ,CAAC,CAAC;MAEF,IAAIrC,QAAQ,CAACuC,EAAE,EAAE;QACb,MAAMwB,IAAI,GAAG,MAAM/D,QAAQ,CAAC+D,IAAI,CAAC,CAAC;QAClC,MAAM/C,GAAG,GAAGmD,MAAM,CAAClD,GAAG,CAACC,eAAe,CAAC6C,IAAI,CAAC;QAC5C,MAAMK,CAAC,GAAGC,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC;QACrCF,CAAC,CAACG,KAAK,CAACC,OAAO,GAAG,MAAM;QACxBJ,CAAC,CAACK,IAAI,GAAGzD,GAAG;QACZoD,CAAC,CAACM,QAAQ,GAAG,aAAazG,cAAc,YAAY;QACpDoG,QAAQ,CAAC/B,IAAI,CAACqC,WAAW,CAACP,CAAC,CAAC;QAC5BA,CAAC,CAACQ,KAAK,CAAC,CAAC;QACTT,MAAM,CAAClD,GAAG,CAAC4D,eAAe,CAAC7D,GAAG,CAAC;QAC/BqD,QAAQ,CAAC/B,IAAI,CAACwC,WAAW,CAACV,CAAC,CAAC;MAChC,CAAC,MAAM;QACH,MAAM,IAAIhB,KAAK,CAAC,6BAA6B,CAAC;MAClD;IACJ,CAAC,CAAC,OAAO/C,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAC9CiB,KAAK,CAAC,gDAAgD,CAAC;IAC3D;EACJ,CAAC;EAED,MAAMyD,uBAAuB,GAAG,MAAAA,CAAA,KAAY;IACxC,MAAMC,oBAAoB,GAAGjH,gBAAgB,CAACmG,MAAM,CAACzB,MAAM,IACvDA,MAAM,CAACG,OAAO,IAAIH,MAAM,CAACU,gBAC7B,CAAC;IAED,IAAI6B,oBAAoB,CAAC3D,MAAM,KAAK,CAAC,EAAE;MACnCC,KAAK,CAAC,qCAAqC,CAAC;MAC5C;IACJ;IAEA,IAAI;MACA,MAAMW,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;MAC/BD,QAAQ,CAACG,MAAM,CAAC,oBAAoB,EAAE6C,IAAI,CAACC,SAAS,CAACF,oBAAoB,CAAC,CAAC;MAC3E/C,QAAQ,CAACG,MAAM,CAAC,cAAc,EAAE,kBAAkBZ,IAAI,CAACC,GAAG,CAAC,CAAC,EAAE,CAAC;MAE/D,MAAMzB,QAAQ,GAAG,MAAMC,KAAK,CAAC,6BAA6B,EAAE;QACxDoC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAEL;MACV,CAAC,CAAC;MAEF,IAAIjC,QAAQ,CAACuC,EAAE,EAAE;QACb,MAAMrC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QAClCmB,KAAK,CAAC,uCAAuCpB,IAAI,CAACiF,YAAY,EAAE,CAAC;MACrE,CAAC,MAAM;QACH,MAAM,IAAI/B,KAAK,CAAC,0BAA0B,CAAC;MAC/C;IACJ,CAAC,CAAC,OAAO/C,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAChDiB,KAAK,CAAC,gCAAgC,CAAC;IAC3C;EACJ,CAAC;EAED,MAAM8D,0BAA0B,GAAG,MAAAA,CAAA,KAAY;IAC3C,IAAI3F,oBAAoB,CAAC4B,MAAM,KAAK,CAAC,EAAE;MACnCC,KAAK,CAAC,yDAAyD,CAAC;MAChE;IACJ;IAEA,IAAI,CAAC3B,kBAAkB,CAAC0F,IAAI,CAAC,CAAC,EAAE;MAC5B/D,KAAK,CAAC,sDAAsD,CAAC;MAC7D;IACJ;IAEA9B,yBAAyB,CAAC,IAAI,CAAC;IAE/B,IAAI;MACA,MAAMyC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;MAC/BzC,oBAAoB,CAAC0C,OAAO,CAACpB,IAAI,IAAIkB,QAAQ,CAACG,MAAM,CAAC,OAAO,EAAErB,IAAI,CAAC,CAAC;MACpEkB,QAAQ,CAACG,MAAM,CAAC,cAAc,EAAEzC,kBAAkB,CAAC0F,IAAI,CAAC,CAAC,CAAC;MAE1D,MAAMrF,QAAQ,GAAG,MAAMC,KAAK,CAAC,sBAAsB,EAAE;QACjDoC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAEL;MACV,CAAC,CAAC;MAEF,IAAIjC,QAAQ,CAACuC,EAAE,EAAE;QACb,MAAMrC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QAClCjB,qBAAqB,CAACgB,IAAI,CAACoF,UAAU,CAAC;QACtChE,KAAK,CAAC,uDAAuDpB,IAAI,CAACoF,UAAU,EAAE,CAAC;QAC/ExF,sBAAsB,CAAC,KAAK,CAAC;QAC7BJ,uBAAuB,CAAC,EAAE,CAAC;QAC3BE,qBAAqB,CAAC,EAAE,CAAC;MAC7B,CAAC,MAAM;QACH,MAAM,IAAIwD,KAAK,CAAC,+BAA+B,CAAC;MACpD;IACJ,CAAC,CAAC,OAAO/C,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;MACrDiB,KAAK,CAAC,kDAAkD,CAAC;IAC7D,CAAC,SAAS;MACN9B,yBAAyB,CAAC,KAAK,CAAC;IACpC;EACJ,CAAC;EAED,MAAM+F,+BAA+B,GAAI/E,CAAC,IAAK;IAC3C,MAAMC,aAAa,GAAGC,KAAK,CAACC,IAAI,CAACH,CAAC,CAACI,MAAM,CAACjD,KAAK,CAAC;IAChD+B,uBAAuB,CAACe,aAAa,CAAC;EAC1C,CAAC;EAED,MAAM+E,4BAA4B,GAAGA,CAAA,kBACjC/H,OAAA;IAAK8G,KAAK,EAAE;MAAEkB,YAAY,EAAE;IAAO,CAAE;IAAAC,QAAA,gBACjCjI,OAAA;MAAAiI,QAAA,EAAI;IAAoB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC7BrI,OAAA;MAAK8G,KAAK,EAAE;QAAEC,OAAO,EAAE,MAAM;QAAEuB,mBAAmB,EAAE,sCAAsC;QAAEC,GAAG,EAAE;MAAO,CAAE;MAAAN,QAAA,gBACtGjI,OAAA;QAAO8G,KAAK,EAAE;UACVC,OAAO,EAAE,MAAM;UACfyB,UAAU,EAAE,QAAQ;UACpBC,OAAO,EAAE,MAAM;UACfC,MAAM,EAAE,mBAAmB;UAC3BC,YAAY,EAAE,KAAK;UACnBC,eAAe,EAAEpI,cAAc,KAAK,WAAW,GAAG,SAAS,GAAG,OAAO;UACrEqI,WAAW,EAAErI,cAAc,KAAK,WAAW,GAAG,SAAS,GAAG,SAAS;UACnEsI,MAAM,EAAE;QACZ,CAAE;QAAAb,QAAA,gBACEjI,OAAA;UACI+I,IAAI,EAAC,OAAO;UACZC,KAAK,EAAC,WAAW;UACjBC,OAAO,EAAEzI,cAAc,KAAK,WAAY;UACxC0I,QAAQ,EAAGnG,CAAC,IAAKtC,iBAAiB,CAACsC,CAAC,CAACI,MAAM,CAAC6F,KAAK,CAAE;UACnDlC,KAAK,EAAE;YAAEqC,WAAW,EAAE;UAAM;QAAE;UAAAjB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjC,CAAC,eACFrI,OAAA;UAAAiI,QAAA,EAAM;QAAmB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7B,CAAC,eAERrI,OAAA;QAAO8G,KAAK,EAAE;UACVC,OAAO,EAAE,MAAM;UACfyB,UAAU,EAAE,QAAQ;UACpBC,OAAO,EAAE,MAAM;UACfC,MAAM,EAAE,mBAAmB;UAC3BC,YAAY,EAAE,KAAK;UACnBC,eAAe,EAAEpI,cAAc,KAAK,cAAc,GAAG,SAAS,GAAG,OAAO;UACxEqI,WAAW,EAAErI,cAAc,KAAK,cAAc,GAAG,SAAS,GAAG,SAAS;UACtEsI,MAAM,EAAE;QACZ,CAAE;QAAAb,QAAA,gBACEjI,OAAA;UACI+I,IAAI,EAAC,OAAO;UACZC,KAAK,EAAC,cAAc;UACpBC,OAAO,EAAEzI,cAAc,KAAK,cAAe;UAC3C0I,QAAQ,EAAGnG,CAAC,IAAKtC,iBAAiB,CAACsC,CAAC,CAACI,MAAM,CAAC6F,KAAK,CAAE;UACnDlC,KAAK,EAAE;YAAEqC,WAAW,EAAE;UAAM;QAAE;UAAAjB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjC,CAAC,eACFrI,OAAA;UAAAiI,QAAA,EAAM;QAAsB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChC,CAAC,eAERrI,OAAA;QAAO8G,KAAK,EAAE;UACVC,OAAO,EAAE,MAAM;UACfyB,UAAU,EAAE,QAAQ;UACpBC,OAAO,EAAE,MAAM;UACfC,MAAM,EAAE,mBAAmB;UAC3BC,YAAY,EAAE,KAAK;UACnBC,eAAe,EAAEpI,cAAc,KAAK,gBAAgB,GAAG,SAAS,GAAG,OAAO;UAC1EqI,WAAW,EAAErI,cAAc,KAAK,gBAAgB,GAAG,SAAS,GAAG,SAAS;UACxEsI,MAAM,EAAE;QACZ,CAAE;QAAAb,QAAA,gBACEjI,OAAA;UACI+I,IAAI,EAAC,OAAO;UACZC,KAAK,EAAC,gBAAgB;UACtBC,OAAO,EAAEzI,cAAc,KAAK,gBAAiB;UAC7C0I,QAAQ,EAAGnG,CAAC,IAAKtC,iBAAiB,CAACsC,CAAC,CAACI,MAAM,CAAC6F,KAAK,CAAE;UACnDlC,KAAK,EAAE;YAAEqC,WAAW,EAAE;UAAM;QAAE;UAAAjB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjC,CAAC,eACFrI,OAAA;UAAAiI,QAAA,EAAM;QAAiB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3B,CAAC,eAERrI,OAAA;QAAO8G,KAAK,EAAE;UACVC,OAAO,EAAE,MAAM;UACfyB,UAAU,EAAE,QAAQ;UACpBC,OAAO,EAAE,MAAM;UACfC,MAAM,EAAE,mBAAmB;UAC3BC,YAAY,EAAE,KAAK;UACnBC,eAAe,EAAEpI,cAAc,KAAK,mBAAmB,GAAG,SAAS,GAAG,OAAO;UAC7EqI,WAAW,EAAErI,cAAc,KAAK,mBAAmB,GAAG,SAAS,GAAG,SAAS;UAC3EsI,MAAM,EAAE;QACZ,CAAE;QAAAb,QAAA,gBACEjI,OAAA;UACI+I,IAAI,EAAC,OAAO;UACZC,KAAK,EAAC,mBAAmB;UACzBC,OAAO,EAAEzI,cAAc,KAAK,mBAAoB;UAChD0I,QAAQ,EAAGnG,CAAC,IAAKtC,iBAAiB,CAACsC,CAAC,CAACI,MAAM,CAAC6F,KAAK,CAAE;UACnDlC,KAAK,EAAE;YAAEqC,WAAW,EAAE;UAAM;QAAE;UAAAjB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjC,CAAC,eACFrI,OAAA;UAAAiI,QAAA,EAAM;QAAoB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9B,CAAC,EAEP/G,sBAAsB,iBACnBtB,OAAA;QAAO8G,KAAK,EAAE;UACVC,OAAO,EAAE,MAAM;UACfyB,UAAU,EAAE,QAAQ;UACpBC,OAAO,EAAE,MAAM;UACfC,MAAM,EAAE,mBAAmB;UAC3BC,YAAY,EAAE,KAAK;UACnBC,eAAe,EAAEpI,cAAc,KAAK,gBAAgB,GAAG,SAAS,GAAG,OAAO;UAC1EqI,WAAW,EAAErI,cAAc,KAAK,gBAAgB,GAAG,SAAS,GAAG,SAAS;UACxEsI,MAAM,EAAE;QACZ,CAAE;QAAAb,QAAA,gBACEjI,OAAA;UACI+I,IAAI,EAAC,OAAO;UACZC,KAAK,EAAC,gBAAgB;UACtBC,OAAO,EAAEzI,cAAc,KAAK,gBAAiB;UAC7C0I,QAAQ,EAAGnG,CAAC,IAAKtC,iBAAiB,CAACsC,CAAC,CAACI,MAAM,CAAC6F,KAAK,CAAE;UACnDlC,KAAK,EAAE;YAAEqC,WAAW,EAAE;UAAM;QAAE;UAAAjB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjC,CAAC,eACFrI,OAAA;UAAAiI,QAAA,EAAM;QAA4B;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtC,CACV,EAEA/G,sBAAsB,iBACnBtB,OAAA;QAAO8G,KAAK,EAAE;UACVC,OAAO,EAAE,MAAM;UACfyB,UAAU,EAAE,QAAQ;UACpBC,OAAO,EAAE,MAAM;UACfC,MAAM,EAAE,mBAAmB;UAC3BC,YAAY,EAAE,KAAK;UACnBC,eAAe,EAAEpI,cAAc,KAAK,WAAW,GAAG,SAAS,GAAG,OAAO;UACrEqI,WAAW,EAAErI,cAAc,KAAK,WAAW,GAAG,SAAS,GAAG,SAAS;UACnEsI,MAAM,EAAE;QACZ,CAAE;QAAAb,QAAA,gBACEjI,OAAA;UACI+I,IAAI,EAAC,OAAO;UACZC,KAAK,EAAC,WAAW;UACjBC,OAAO,EAAEzI,cAAc,KAAK,WAAY;UACxC0I,QAAQ,EAAGnG,CAAC,IAAKtC,iBAAiB,CAACsC,CAAC,CAACI,MAAM,CAAC6F,KAAK,CAAE;UACnDlC,KAAK,EAAE;YAAEqC,WAAW,EAAE;UAAM;QAAE;UAAAjB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjC,CAAC,eACFrI,OAAA;UAAAiI,QAAA,EAAM;QAA4B;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtC,CACV;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,EAEL,CAAC/G,sBAAsB,iBACpBtB,OAAA;MAAK8G,KAAK,EAAE;QACRsC,SAAS,EAAE,MAAM;QACjBX,OAAO,EAAE,MAAM;QACfG,eAAe,EAAE,SAAS;QAC1BF,MAAM,EAAE,mBAAmB;QAC3BC,YAAY,EAAE,KAAK;QACnBU,QAAQ,EAAE;MACd,CAAE;MAAApB,QAAA,EAAC;IAEH;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CACR;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CACR;EAED,MAAMiB,0BAA0B,GAAGA,CAAA,KAAM;IACrC,IAAI9I,cAAc,KAAK,gBAAgB,EAAE,OAAO,IAAI;IAEpD,oBACIR,OAAA;MAAK8G,KAAK,EAAE;QACRkB,YAAY,EAAE,MAAM;QACpBS,OAAO,EAAE,MAAM;QACfG,eAAe,EAAE,SAAS;QAC1BF,MAAM,EAAE,mBAAmB;QAC3BC,YAAY,EAAE;MAClB,CAAE;MAAAV,QAAA,gBACEjI,OAAA;QAAI8G,KAAK,EAAE;UAAEyC,MAAM,EAAE,YAAY;UAAEC,KAAK,EAAE;QAAU,CAAE;QAAAvB,QAAA,EAAC;MAAwB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAEpFrI,OAAA;QAAK8G,KAAK,EAAE;UAAEkB,YAAY,EAAE;QAAO,CAAE;QAAAC,QAAA,gBACjCjI,OAAA;UAAO8G,KAAK,EAAE;YAAEC,OAAO,EAAE,OAAO;YAAEiB,YAAY,EAAE,KAAK;YAAEyB,UAAU,EAAE;UAAO,CAAE;UAAAxB,QAAA,EAAC;QAE7E;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACRrI,OAAA;UACI+I,IAAI,EAAC,MAAM;UACXC,KAAK,EAAE9H,oBAAqB;UAC5BgI,QAAQ,EAAGnG,CAAC,IAAK5B,uBAAuB,CAAC4B,CAAC,CAACI,MAAM,CAAC6F,KAAK,CAAE;UACzDU,WAAW,EAAC,6CAA6C;UACzD5C,KAAK,EAAE;YACH6C,KAAK,EAAE,MAAM;YACblB,OAAO,EAAE,KAAK;YACdC,MAAM,EAAE,mBAAmB;YAC3BC,YAAY,EAAE,KAAK;YACnBU,QAAQ,EAAE;UACd;QAAE;UAAAnB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CAAC,eACFrI,OAAA;UAAK8G,KAAK,EAAE;YAAEuC,QAAQ,EAAE,MAAM;YAAEG,KAAK,EAAE,SAAS;YAAEJ,SAAS,EAAE;UAAM,CAAE;UAAAnB,QAAA,EAAC;QAEtE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC,eAENrI,OAAA;QAAK8G,KAAK,EAAE;UAAEkB,YAAY,EAAE;QAAO,CAAE;QAAAC,QAAA,gBACjCjI,OAAA;UAAO8G,KAAK,EAAE;YAAEC,OAAO,EAAE,OAAO;YAAEiB,YAAY,EAAE,KAAK;YAAEyB,UAAU,EAAE;UAAO,CAAE;UAAAxB,QAAA,GAAC,wBACnD,EAAC7G,mBAAmB;QAAA;UAAA8G,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACvC,CAAC,eACRrI,OAAA;UACI+I,IAAI,EAAC,OAAO;UACZa,GAAG,EAAC,KAAK;UACTC,GAAG,EAAC,KAAK;UACTC,IAAI,EAAC,KAAK;UACVd,KAAK,EAAE5H,mBAAoB;UAC3B8H,QAAQ,EAAGnG,CAAC,IAAK1B,sBAAsB,CAAC0I,UAAU,CAAChH,CAAC,CAACI,MAAM,CAAC6F,KAAK,CAAC,CAAE;UACpElC,KAAK,EAAE;YAAE6C,KAAK,EAAE;UAAQ;QAAE;UAAAzB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC7B,CAAC,eACFrI,OAAA;UAAK8G,KAAK,EAAE;YAAEuC,QAAQ,EAAE,MAAM;YAAEG,KAAK,EAAE,SAAS;YAAEJ,SAAS,EAAE;UAAM,CAAE;UAAAnB,QAAA,EAAC;QAEtE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAEd,CAAC;EAED,MAAM2B,sBAAsB,GAAGA,CAAA,KAAM;IACjC,IAAIxJ,cAAc,KAAK,WAAW,EAAE,OAAO,IAAI;IAE/C,oBACIR,OAAA;MAAK8G,KAAK,EAAE;QACRkB,YAAY,EAAE,MAAM;QACpBS,OAAO,EAAE,MAAM;QACfG,eAAe,EAAE,SAAS;QAC1BF,MAAM,EAAE,mBAAmB;QAC3BC,YAAY,EAAE;MAClB,CAAE;MAAAV,QAAA,gBACEjI,OAAA;QAAI8G,KAAK,EAAE;UAAEyC,MAAM,EAAE,YAAY;UAAEC,KAAK,EAAE;QAAU,CAAE;QAAAvB,QAAA,EAAC;MAA8D;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAG1HrI,OAAA;QAAK8G,KAAK,EAAE;UAAEkB,YAAY,EAAE;QAAO,CAAE;QAAAC,QAAA,gBACjCjI,OAAA;UAAO8G,KAAK,EAAE;YAAEC,OAAO,EAAE,OAAO;YAAEiB,YAAY,EAAE,KAAK;YAAEyB,UAAU,EAAE;UAAO,CAAE;UAAAxB,QAAA,EAAC;QAE7E;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACRrI,OAAA;UACI+I,IAAI,EAAC,MAAM;UACXC,KAAK,EAAExH,kBAAmB;UAC1B0H,QAAQ,EAAGnG,CAAC,IAAKtB,qBAAqB,CAACsB,CAAC,CAACI,MAAM,CAAC6F,KAAK,CAAE;UACvDU,WAAW,EAAC,0GAA0G;UACtH5C,KAAK,EAAE;YACH6C,KAAK,EAAE,MAAM;YACblB,OAAO,EAAE,KAAK;YACdC,MAAM,EAAE,mBAAmB;YAC3BC,YAAY,EAAE,KAAK;YACnBU,QAAQ,EAAE;UACd;QAAE;UAAAnB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CAAC,eACFrI,OAAA;UAAK8G,KAAK,EAAE;YAAEuC,QAAQ,EAAE,MAAM;YAAEG,KAAK,EAAE,SAAS;YAAEJ,SAAS,EAAE;UAAM,CAAE;UAAAnB,QAAA,EAAC;QAEtE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC,eAGNrI,OAAA;QAAK8G,KAAK,EAAE;UAAEkB,YAAY,EAAE;QAAO,CAAE;QAAAC,QAAA,eACjCjI,OAAA;UACIiK,OAAO,EAAEA,CAAA,KAAM5H,sBAAsB,CAAC,CAACD,mBAAmB,CAAE;UAC5D0E,KAAK,EAAE;YACH8B,eAAe,EAAE,SAAS;YAC1BY,KAAK,EAAE,OAAO;YACdf,OAAO,EAAE,UAAU;YACnBC,MAAM,EAAE,MAAM;YACdC,YAAY,EAAE,KAAK;YACnBG,MAAM,EAAE,SAAS;YACjBO,QAAQ,EAAE;UACd,CAAE;UAAApB,QAAA,EAED7F,mBAAmB,GAAG,mBAAmB,GAAG;QAA4B;UAAA8F,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACrE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACR,CAAC,EAGLjG,mBAAmB,iBAChBpC,OAAA;QAAK8G,KAAK,EAAE;UACR2B,OAAO,EAAE,MAAM;UACfG,eAAe,EAAE,SAAS;UAC1BF,MAAM,EAAE,mBAAmB;UAC3BC,YAAY,EAAE,KAAK;UACnBX,YAAY,EAAE;QAClB,CAAE;QAAAC,QAAA,gBACEjI,OAAA;UAAI8G,KAAK,EAAE;YAAEyC,MAAM,EAAE,YAAY;YAAEC,KAAK,EAAE;UAAU,CAAE;UAAAvB,QAAA,EAAC;QAA6B;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAEzFrI,OAAA;UAAK8G,KAAK,EAAE;YAAEkB,YAAY,EAAE;UAAO,CAAE;UAAAC,QAAA,gBACjCjI,OAAA;YAAO8G,KAAK,EAAE;cAAEC,OAAO,EAAE,OAAO;cAAEiB,YAAY,EAAE,KAAK;cAAEyB,UAAU,EAAE;YAAO,CAAE;YAAAxB,QAAA,EAAC;UAE7E;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACRrI,OAAA;YACI+I,IAAI,EAAC,MAAM;YACXC,KAAK,EAAE9G,kBAAmB;YAC1BgH,QAAQ,EAAGnG,CAAC,IAAKZ,qBAAqB,CAACY,CAAC,CAACI,MAAM,CAAC6F,KAAK,CAAE;YACvDU,WAAW,EAAC,2BAA2B;YACvC5C,KAAK,EAAE;cACH6C,KAAK,EAAE,MAAM;cACblB,OAAO,EAAE,KAAK;cACdC,MAAM,EAAE,mBAAmB;cAC3BC,YAAY,EAAE,KAAK;cACnBU,QAAQ,EAAE;YACd;UAAE;YAAAnB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACL,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD,CAAC,eAENrI,OAAA;UAAK8G,KAAK,EAAE;YAAEkB,YAAY,EAAE;UAAO,CAAE;UAAAC,QAAA,gBACjCjI,OAAA;YAAO8G,KAAK,EAAE;cAAEC,OAAO,EAAE,OAAO;cAAEiB,YAAY,EAAE,KAAK;cAAEyB,UAAU,EAAE;YAAO,CAAE;YAAAxB,QAAA,EAAC;UAE7E;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACRrI,OAAA;YACI+I,IAAI,EAAC,MAAM;YACXmB,QAAQ;YACRC,MAAM,EAAC,SAAS;YAChBjB,QAAQ,EAAEpB,+BAAgC;YAC1ChB,KAAK,EAAE;cACH6C,KAAK,EAAE,MAAM;cACblB,OAAO,EAAE,KAAK;cACdC,MAAM,EAAE,mBAAmB;cAC3BC,YAAY,EAAE,KAAK;cACnBU,QAAQ,EAAE;YACd;UAAE;YAAAnB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACL,CAAC,EACDrG,oBAAoB,CAAC4B,MAAM,GAAG,CAAC,iBAC5B5D,OAAA;YAAK8G,KAAK,EAAE;cAAEuC,QAAQ,EAAE,MAAM;cAAEG,KAAK,EAAE,SAAS;cAAEJ,SAAS,EAAE;YAAM,CAAE;YAAAnB,QAAA,GAAC,SAChE,EAACjG,oBAAoB,CAAC4B,MAAM,EAAC,yBACnC;UAAA;YAAAsE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CACR,eACDrI,OAAA;YAAK8G,KAAK,EAAE;cAAEuC,QAAQ,EAAE,MAAM;cAAEG,KAAK,EAAE,SAAS;cAAEJ,SAAS,EAAE;YAAM,CAAE;YAAAnB,QAAA,EAAC;UAEtE;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CAAC,eAENrI,OAAA;UACIiK,OAAO,EAAEtC,0BAA2B;UACpCyC,QAAQ,EAAEtI,sBAAsB,IAAIE,oBAAoB,CAAC4B,MAAM,KAAK,CAAC,IAAI,CAAC1B,kBAAkB,CAAC0F,IAAI,CAAC,CAAE;UACpGd,KAAK,EAAE;YACH8B,eAAe,EAAE9G,sBAAsB,GAAG,SAAS,GAAG,SAAS;YAC/D0H,KAAK,EAAE,OAAO;YACdf,OAAO,EAAE,UAAU;YACnBC,MAAM,EAAE,MAAM;YACdC,YAAY,EAAE,KAAK;YACnBG,MAAM,EAAEhH,sBAAsB,GAAG,aAAa,GAAG,SAAS;YAC1DuH,QAAQ,EAAE;UACd,CAAE;UAAApB,QAAA,EAEDnG,sBAAsB,GAAG,gBAAgB,GAAG;QAAgB;UAAAoG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACzD,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACR,CACR,eAGDrI,OAAA;QAAK8G,KAAK,EAAE;UAAEkB,YAAY,EAAE;QAAO,CAAE;QAAAC,QAAA,gBACjCjI,OAAA;UAAO8G,KAAK,EAAE;YAAEC,OAAO,EAAE,OAAO;YAAEiB,YAAY,EAAE,KAAK;YAAEyB,UAAU,EAAE;UAAO,CAAE;UAAAxB,QAAA,EAAC;QAE7E;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACRrI,OAAA;UACI+I,IAAI,EAAC,MAAM;UACXC,KAAK,EAAEtH,gBAAiB;UACxBwH,QAAQ,EAAGnG,CAAC,IAAKpB,mBAAmB,CAACoB,CAAC,CAACI,MAAM,CAAC6F,KAAK,CAAE;UACrDU,WAAW,EAAC,6CAA6C;UACzD5C,KAAK,EAAE;YACH6C,KAAK,EAAE,MAAM;YACblB,OAAO,EAAE,KAAK;YACdC,MAAM,EAAE,mBAAmB;YAC3BC,YAAY,EAAE,KAAK;YACnBU,QAAQ,EAAE;UACd;QAAE;UAAAnB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CAAC,eACFrI,OAAA;UAAK8G,KAAK,EAAE;YAAEuC,QAAQ,EAAE,MAAM;YAAEG,KAAK,EAAE,SAAS;YAAEJ,SAAS,EAAE;UAAM,CAAE;UAAAnB,QAAA,EAAC;QAEtE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC,eAGNrI,OAAA;QAAK8G,KAAK,EAAE;UAAEkB,YAAY,EAAE;QAAO,CAAE;QAAAC,QAAA,gBACjCjI,OAAA;UAAO8G,KAAK,EAAE;YAAEC,OAAO,EAAE,OAAO;YAAEiB,YAAY,EAAE,KAAK;YAAEyB,UAAU,EAAE;UAAO,CAAE;UAAAxB,QAAA,GAAC,uCACpC,EAACrG,4BAA4B;QAAA;UAAAsG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC/D,CAAC,eACRrI,OAAA;UACI+I,IAAI,EAAC,OAAO;UACZa,GAAG,EAAC,KAAK;UACTC,GAAG,EAAC,KAAK;UACTC,IAAI,EAAC,KAAK;UACVd,KAAK,EAAEpH,4BAA6B;UACpCsH,QAAQ,EAAGnG,CAAC,IAAKlB,+BAA+B,CAACkI,UAAU,CAAChH,CAAC,CAACI,MAAM,CAAC6F,KAAK,CAAC,CAAE;UAC7ElC,KAAK,EAAE;YAAE6C,KAAK,EAAE;UAAQ;QAAE;UAAAzB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC7B,CAAC,eACFrI,OAAA;UAAK8G,KAAK,EAAE;YAAEuC,QAAQ,EAAE,MAAM;YAAEG,KAAK,EAAE,SAAS;YAAEJ,SAAS,EAAE;UAAM,CAAE;UAAAnB,QAAA,EAAC;QAEtE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC,eAGNrI,OAAA;QAAK8G,KAAK,EAAE;UACR2B,OAAO,EAAE,MAAM;UACfG,eAAe,EAAE,SAAS;UAC1BF,MAAM,EAAE,mBAAmB;UAC3BC,YAAY,EAAE,KAAK;UACnBU,QAAQ,EAAE;QACd,CAAE;QAAApB,QAAA,gBACEjI,OAAA;UAAAiI,QAAA,EAAQ;QAAoB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACrCrI,OAAA;UAAI8G,KAAK,EAAE;YAAEyC,MAAM,EAAE,OAAO;YAAEc,WAAW,EAAE;UAAO,CAAE;UAAApC,QAAA,gBAChDjI,OAAA;YAAAiI,QAAA,gBAAIjI,OAAA;cAAAiI,QAAA,EAAQ;YAAkB;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,oEAA8D;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC1GrI,OAAA;YAAAiI,QAAA,gBAAIjI,OAAA;cAAAiI,QAAA,EAAQ;YAAe;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,mEAA+D;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACxGrI,OAAA;YAAAiI,QAAA,gBAAIjI,OAAA;cAAAiI,QAAA,EAAQ;YAAO;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,gEAA4D;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC7F,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAEd,CAAC;EAED,MAAMiC,aAAa,GAAGA,CAAA,KAAM;IACxB,IAAIhK,gBAAgB,CAACsD,MAAM,KAAK,CAAC,EAAE,OAAO,IAAI;IAE9C,MAAM4C,iBAAiB,GAAGlG,gBAAgB,CAACmG,MAAM,CAACzB,MAAM,IAAIA,MAAM,CAACG,OAAO,CAAC;IAC3E,MAAMoF,aAAa,GAAGjK,gBAAgB,CAACmG,MAAM,CAACzB,MAAM,IAAI,CAACA,MAAM,CAACG,OAAO,CAAC;IAExE,oBACInF,OAAA;MAAK8G,KAAK,EAAE;QAAEsC,SAAS,EAAE;MAAO,CAAE;MAAAnB,QAAA,gBAC9BjI,OAAA;QAAK8G,KAAK,EAAE;UAAEC,OAAO,EAAE,MAAM;UAAEyD,cAAc,EAAE,eAAe;UAAEhC,UAAU,EAAE,QAAQ;UAAER,YAAY,EAAE;QAAO,CAAE;QAAAC,QAAA,gBACzGjI,OAAA;UAAAiI,QAAA,EAAI;QAAqB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC9BrI,OAAA;UAAK8G,KAAK,EAAE;YAAEC,OAAO,EAAE,MAAM;YAAEwB,GAAG,EAAE;UAAO,CAAE;UAAAN,QAAA,GACxCzB,iBAAiB,CAAC5C,MAAM,GAAG,CAAC,iBACzB5D,OAAA;YACIiK,OAAO,EAAE1D,iBAAkB;YAC3BO,KAAK,EAAE;cACH8B,eAAe,EAAE,SAAS;cAC1BY,KAAK,EAAE,OAAO;cACdf,OAAO,EAAE,UAAU;cACnBC,MAAM,EAAE,MAAM;cACdC,YAAY,EAAE,KAAK;cACnBG,MAAM,EAAE;YACZ,CAAE;YAAAb,QAAA,EACL;UAED;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CACX,EACA7H,cAAc,KAAK,gBAAgB,IAAIgG,iBAAiB,CAACiE,IAAI,CAACC,CAAC,IAAIA,CAAC,CAAChF,gBAAgB,CAAC,iBACnF1F,OAAA;YACIiK,OAAO,EAAE3C,uBAAwB;YACjCR,KAAK,EAAE;cACH8B,eAAe,EAAE,SAAS;cAC1BY,KAAK,EAAE,OAAO;cACdf,OAAO,EAAE,UAAU;cACnBC,MAAM,EAAE,MAAM;cACdC,YAAY,EAAE,KAAK;cACnBG,MAAM,EAAE;YACZ,CAAE;YAAAb,QAAA,EACL;UAED;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CACX;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC,eAENrI,OAAA;QAAK8G,KAAK,EAAE;UACRC,OAAO,EAAE,MAAM;UACfuB,mBAAmB,EAAE,sCAAsC;UAC3DC,GAAG,EAAE,MAAM;UACXP,YAAY,EAAE;QAClB,CAAE;QAAAC,QAAA,gBACEjI,OAAA;UAAK8G,KAAK,EAAE;YACR2B,OAAO,EAAE,MAAM;YACfG,eAAe,EAAE,SAAS;YAC1BF,MAAM,EAAE,mBAAmB;YAC3BC,YAAY,EAAE;UAClB,CAAE;UAAAV,QAAA,eACEjI,OAAA;YAAK8G,KAAK,EAAE;cAAEuC,QAAQ,EAAE,MAAM;cAAEI,UAAU,EAAE,MAAM;cAAED,KAAK,EAAE;YAAU,CAAE;YAAAvB,QAAA,GAAC,qBACtD,EAACzB,iBAAiB,CAAC5C,MAAM;UAAA;YAAAsE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACtC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CAAC,eACNrI,OAAA;UAAK8G,KAAK,EAAE;YACR2B,OAAO,EAAE,MAAM;YACfG,eAAe,EAAE,SAAS;YAC1BF,MAAM,EAAE,mBAAmB;YAC3BC,YAAY,EAAE;UAClB,CAAE;UAAAV,QAAA,eACEjI,OAAA;YAAK8G,KAAK,EAAE;cAAEuC,QAAQ,EAAE,MAAM;cAAEI,UAAU,EAAE,MAAM;cAAED,KAAK,EAAE;YAAU,CAAE;YAAAvB,QAAA,GAAC,iBAC1D,EAACsC,aAAa,CAAC3G,MAAM;UAAA;YAAAsE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC9B;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC,eAENrI,OAAA;QAAK8G,KAAK,EAAE;UAAEC,OAAO,EAAE,MAAM;UAAEuB,mBAAmB,EAAE,sCAAsC;UAAEC,GAAG,EAAE;QAAO,CAAE;QAAAN,QAAA,EACrG3H,gBAAgB,CAAC+C,GAAG,CAAC,CAAC2B,MAAM,EAAE2F,KAAK,kBAChC3K,OAAA;UAAiB8G,KAAK,EAAE;YACpB4B,MAAM,EAAE,mBAAmB;YAC3BC,YAAY,EAAE,KAAK;YACnBF,OAAO,EAAE,MAAM;YACfG,eAAe,EAAE5D,MAAM,CAACG,OAAO,GAAG,SAAS,GAAG;UAClD,CAAE;UAAA8C,QAAA,gBACEjI,OAAA;YAAI8G,KAAK,EAAE;cAAEyC,MAAM,EAAE;YAAa,CAAE;YAAAtB,QAAA,EAAEjD,MAAM,CAACC;UAAY;YAAAiD,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,EAE9DrD,MAAM,CAACG,OAAO,gBACXnF,OAAA;YAAAiI,QAAA,gBACIjI,OAAA;cACI4K,GAAG,EAAE5F,MAAM,CAACK,YAAa;cACzBwF,GAAG,EAAE,aAAa7F,MAAM,CAACC,YAAY,EAAG;cACxC6B,KAAK,EAAE;gBAAE6C,KAAK,EAAE,MAAM;gBAAEhB,YAAY,EAAE,KAAK;gBAAEX,YAAY,EAAE;cAAO;YAAE;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACvE,CAAC,EAEDrD,MAAM,CAACQ,UAAU,iBACdxF,OAAA;cAAK8G,KAAK,EAAE;gBAAEuC,QAAQ,EAAE,MAAM;gBAAEG,KAAK,EAAE;cAAU,CAAE;cAAAvB,QAAA,gBAC/CjI,OAAA;gBAAAiI,QAAA,EAAQ;cAAW;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,KAAC,EAACrD,MAAM,CAACS,gBAAgB,IAAIT,MAAM,CAACQ,UAAU,CAAC5B,MAAM,EAChFoB,MAAM,CAACQ,UAAU,CAACnC,GAAG,CAAC,CAACyH,SAAS,EAAEC,GAAG,kBAClC/K,OAAA;gBAAe8G,KAAK,EAAE;kBAAEkE,UAAU,EAAE,MAAM;kBAAE3B,QAAQ,EAAE;gBAAO,CAAE;gBAAApB,QAAA,GAAC,SAC1D,EAAC6C,SAAS,CAACG,KAAK,EAAC,IAAE,EAAC,CAACH,SAAS,CAACI,UAAU,GAAG,GAAG,EAAEC,OAAO,CAAC,CAAC,CAAC,EAAC,GAClE;cAAA,GAFUJ,GAAG;gBAAA7C,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAER,CACR,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACD,CACR;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACA,CAAC,gBAENrI,OAAA;YAAK8G,KAAK,EAAE;cAAE0C,KAAK,EAAE;YAAU,CAAE;YAAAvB,QAAA,GAAC,SACvB,EAACjD,MAAM,CAACpC,KAAK;UAAA;YAAAsF,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACnB,CACR;QAAA,GA/BKsC,KAAK;UAAAzC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAgCV,CACR;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAEd,CAAC;EAED,oBACIrI,OAAA;IAAK8G,KAAK,EAAE;MAAE2B,OAAO,EAAE,MAAM;MAAE2C,QAAQ,EAAE,QAAQ;MAAE7B,MAAM,EAAE;IAAS,CAAE;IAAAtB,QAAA,gBAClEjI,OAAA;MAAAiI,QAAA,EAAI;IAAoB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAE7BrI,OAAA;MAAK8G,KAAK,EAAE;QAAEkB,YAAY,EAAE;MAAO,CAAE;MAAAC,QAAA,gBACjCjI,OAAA;QAAO8G,KAAK,EAAE;UAAEC,OAAO,EAAE,OAAO;UAAEiB,YAAY,EAAE,MAAM;UAAEqB,QAAQ,EAAE,MAAM;UAAEI,UAAU,EAAE;QAAO,CAAE;QAAAxB,QAAA,EAAC;MAEhG;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACRrI,OAAA;QACI+I,IAAI,EAAC,MAAM;QACXmB,QAAQ;QACRC,MAAM,EAAC,SAAS;QAChBjB,QAAQ,EAAEpG,gBAAiB;QAC3BgE,KAAK,EAAE;UACH2B,OAAO,EAAE,MAAM;UACfC,MAAM,EAAE,oBAAoB;UAC5BC,YAAY,EAAE,KAAK;UACnBgB,KAAK,EAAE,MAAM;UACbb,MAAM,EAAE;QACZ;MAAE;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC,EACDnI,KAAK,CAAC0D,MAAM,GAAG,CAAC,iBACb5D,OAAA;QAAK8G,KAAK,EAAE;UAAEsC,SAAS,EAAE,MAAM;UAAEC,QAAQ,EAAE,MAAM;UAAEG,KAAK,EAAE;QAAU,CAAE;QAAAvB,QAAA,GAAC,SACjE,EAAC/H,KAAK,CAAC0D,MAAM,EAAC,oBACpB;MAAA;QAAAsE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CACR;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,EAELN,4BAA4B,CAAC,CAAC,EAC9BuB,0BAA0B,CAAC,CAAC,EAC5BU,sBAAsB,CAAC,CAAC,eAEzBhK,OAAA;MAAK8G,KAAK,EAAE;QAAEkB,YAAY,EAAE;MAAO,CAAE;MAAAC,QAAA,eACjCjI,OAAA;QACIiK,OAAO,EAAEtG,cAAe;QACxByG,QAAQ,EAAElK,KAAK,CAAC0D,MAAM,KAAK,CAAC,IAAIlD,SAAU;QAC1CoG,KAAK,EAAE;UACH8B,eAAe,EAAE1I,KAAK,CAAC0D,MAAM,KAAK,CAAC,IAAIlD,SAAS,GAAG,SAAS,GAAG,SAAS;UACxE8I,KAAK,EAAE,OAAO;UACdf,OAAO,EAAE,WAAW;UACpBC,MAAM,EAAE,MAAM;UACdC,YAAY,EAAE,KAAK;UACnBU,QAAQ,EAAE,MAAM;UAChBP,MAAM,EAAE5I,KAAK,CAAC0D,MAAM,KAAK,CAAC,IAAIlD,SAAS,GAAG,aAAa,GAAG;QAC9D,CAAE;QAAAuH,QAAA,EAEDvH,SAAS,GAAG,qBAAqBE,kBAAkB,CAACE,OAAO,IAAIF,kBAAkB,CAACG,KAAK,GAAG,GAAG;MAAqB;QAAAmH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/G;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR,CAAC,EAELiC,aAAa,CAAC,CAAC;EAAA;IAAApC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACf,CAAC;AAEd;AAEA,eAAepI,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}