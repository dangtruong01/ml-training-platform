{"ast":null,"code":"var _jsxFileName = \"/Users/truonghaidang/Desktop/open-trainer/frontend/src/components/auto-annotation/TrainingDataUpload.js\";\nimport React, { useState } from 'react';\nimport './TrainingDataUpload.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TrainingDataUpload({\n  projectId,\n  projectType,\n  onDataUploaded\n}) {\n  const [uploadState, setUploadState] = useState({\n    images: [],\n    annotations: [],\n    uploading: false,\n    dragActive: false\n  });\n  const [errors, setErrors] = useState({});\n  const acceptedImageTypes = ['image/jpeg', 'image/jpg', 'image/png'];\n  const handleImagesDrop = e => {\n    e.preventDefault();\n    setUploadState(prev => ({\n      ...prev,\n      dragActive: false\n    }));\n    const files = Array.from(e.dataTransfer.files);\n    const imageFiles = files.filter(file => acceptedImageTypes.includes(file.type));\n    if (imageFiles.length !== files.length) {\n      setErrors({\n        images: 'Some files were not images and were ignored'\n      });\n    } else {\n      setErrors(prev => ({\n        ...prev,\n        images: ''\n      }));\n    }\n    setUploadState(prev => ({\n      ...prev,\n      images: imageFiles\n    }));\n  };\n  const handleImagesSelect = e => {\n    const files = Array.from(e.target.files);\n    setUploadState(prev => ({\n      ...prev,\n      images: files\n    }));\n    setErrors(prev => ({\n      ...prev,\n      images: ''\n    }));\n  };\n  const handleAnnotationsSelect = e => {\n    const files = Array.from(e.target.files);\n    const txtFiles = files.filter(file => file.name.toLowerCase().endsWith('.txt'));\n    if (txtFiles.length !== files.length) {\n      setErrors({\n        annotations: 'Some files were not .txt files and were ignored'\n      });\n    } else {\n      setErrors(prev => ({\n        ...prev,\n        annotations: ''\n      }));\n    }\n    setUploadState(prev => ({\n      ...prev,\n      annotations: txtFiles\n    }));\n  };\n  const validateUpload = () => {\n    const newErrors = {};\n    if (uploadState.images.length === 0) {\n      newErrors.images = 'Please select at least one training image';\n    }\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n  const handleUpload = async () => {\n    if (!validateUpload()) {\n      return;\n    }\n    setUploadState(prev => ({\n      ...prev,\n      uploading: true\n    }));\n    try {\n      const formData = new FormData();\n\n      // Add images\n      uploadState.images.forEach(image => {\n        formData.append('training_images', image);\n      });\n\n      // Add annotation files if provided\n      if (uploadState.annotations && uploadState.annotations.length > 0) {\n        uploadState.annotations.forEach(annotation => {\n          formData.append('annotation_files', annotation);\n        });\n      }\n\n      // Add format\n      formData.append('annotation_format', 'auto');\n      const response = await fetch(`/api/auto-annotation/projects/${projectId}/upload-training-data`, {\n        method: 'POST',\n        body: formData\n      });\n      const result = await response.json();\n      if (result.status === 'success') {\n        // Reset form\n        setUploadState({\n          images: [],\n          annotations: [],\n          uploading: false,\n          dragActive: false\n        });\n        if (onDataUploaded) {\n          onDataUploaded();\n        }\n      } else {\n        setErrors({\n          upload: result.message || 'Upload failed'\n        });\n      }\n    } catch (error) {\n      console.error('Upload failed:', error);\n      setErrors({\n        upload: 'Network error. Please try again.'\n      });\n    } finally {\n      setUploadState(prev => ({\n        ...prev,\n        uploading: false\n      }));\n    }\n  };\n  const removeImage = index => {\n    setUploadState(prev => ({\n      ...prev,\n      images: prev.images.filter((_, i) => i !== index)\n    }));\n  };\n  const formatFileSize = bytes => {\n    if (bytes === 0) return '0 Bytes';\n    const k = 1024;\n    const sizes = ['Bytes', 'KB', 'MB', 'GB'];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"training-data-upload\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"upload-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"\\uD83D\\uDCF8 Training Images\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"section-description\",\n        children: [\"Upload images that will be used to train your \", projectType === 'object_detection' ? 'YOLO' : 'SAM2', \" model\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `drop-zone ${uploadState.dragActive ? 'active' : ''}`,\n        onDrop: handleImagesDrop,\n        onDragOver: e => e.preventDefault(),\n        onDragEnter: () => setUploadState(prev => ({\n          ...prev,\n          dragActive: true\n        })),\n        onDragLeave: () => setUploadState(prev => ({\n          ...prev,\n          dragActive: false\n        })),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"drop-zone-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"drop-icon\",\n            children: \"\\uD83D\\uDCC1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Drag and drop images here, or click to select\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"file-types\",\n            children: \"Supported: JPG, JPEG, PNG\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            multiple: true,\n            accept: \".jpg,.jpeg,.png\",\n            onChange: handleImagesSelect,\n            className: \"hidden-file-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this), errors.images && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: errors.images\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 11\n      }, this), uploadState.images.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"file-preview\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          children: [\"Selected Images (\", uploadState.images.length, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"image-grid\",\n          children: [uploadState.images.slice(0, 6).map((file, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"image-preview-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: URL.createObjectURL(file),\n              alt: `Preview ${index}`,\n              onLoad: e => URL.revokeObjectURL(e.target.src)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"image-info\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"image-name\",\n                children: file.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"image-size\",\n                children: formatFileSize(file.size)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"remove-button\",\n              onClick: () => removeImage(index),\n              children: \"\\xD7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 17\n          }, this)), uploadState.images.length > 6 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"more-images\",\n            children: [\"+\", uploadState.images.length - 6, \" more\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"upload-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"\\uD83C\\uDFF7\\uFE0F Annotations (Optional)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"section-description\",\n        children: projectType === 'object_detection' ? 'Upload YOLO format annotations (multiple .txt files)' : 'Upload COCO format annotations (JSON file with segmentation data)'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"file-input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          accept: projectType === 'object_detection' ? '.txt' : '.json',\n          multiple: projectType === 'object_detection',\n          onChange: handleAnnotationsSelect,\n          className: \"file-input\",\n          id: \"annotations-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"annotations-input\",\n          className: \"file-input-label\",\n          children: uploadState.annotations.length > 0 ? `${uploadState.annotations.length} annotation file${uploadState.annotations.length > 1 ? 's' : ''} selected` : `Choose ${projectType === 'object_detection' ? 'Annotation Files (.txt)' : 'Annotation File (.json)'}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this), errors.annotations && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: errors.annotations\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"format-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \"\\uD83D\\uDCCB Expected Format:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 11\n        }, this), projectType === 'object_detection' ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"format-example\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"YOLO Format (multiple .txt files):\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 18\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"code\", {\n            children: \"class_id center_x center_y width height\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"format-note\",\n            children: [\"Example: \", /*#__PURE__*/_jsxDEV(\"code\", {\n              children: \"0 0.5 0.3 0.2 0.1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 26\n            }, this), \" (normalized coordinates)\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"format-note\",\n            children: \"Select all .txt annotation files at once. Each file should correspond to an image.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"format-example\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"COCO Format (JSON file):\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 18\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"code\", {\n            children: `{\"annotations\": [{\"segmentation\": [[x1,y1,x2,y2,...]], \"bbox\": [x,y,w,h]}]}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"format-note\",\n            children: \"Standard COCO JSON with polygon segmentation data\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"upload-actions\",\n      children: [errors.upload && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-banner\",\n        children: [\"\\u274C \", errors.upload]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"action-buttons\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"upload-button\",\n          onClick: handleUpload,\n          disabled: uploadState.uploading || uploadState.images.length === 0,\n          children: uploadState.uploading ? '⏳ Uploading...' : '📤 Upload Training Data'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"upload-summary\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Ready to upload: \", uploadState.images.length, \" images\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 11\n        }, this), uploadState.annotations.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\", \", uploadState.annotations.length, \" annotation file\", uploadState.annotations.length > 1 ? 's' : '']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 5\n  }, this);\n}\nexport default TrainingDataUpload;","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","TrainingDataUpload","projectId","projectType","onDataUploaded","uploadState","setUploadState","images","annotations","uploading","dragActive","errors","setErrors","acceptedImageTypes","handleImagesDrop","e","preventDefault","prev","files","Array","from","dataTransfer","imageFiles","filter","file","includes","type","length","handleImagesSelect","target","handleAnnotationsSelect","txtFiles","name","toLowerCase","endsWith","validateUpload","newErrors","Object","keys","handleUpload","formData","FormData","forEach","image","append","annotation","response","fetch","method","body","result","json","status","upload","message","error","console","removeImage","index","_","i","formatFileSize","bytes","k","sizes","Math","floor","log","parseFloat","pow","toFixed","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onDrop","onDragOver","onDragEnter","onDragLeave","multiple","accept","onChange","slice","map","src","URL","createObjectURL","alt","onLoad","revokeObjectURL","size","onClick","id","htmlFor","disabled"],"sources":["/Users/truonghaidang/Desktop/open-trainer/frontend/src/components/auto-annotation/TrainingDataUpload.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './TrainingDataUpload.css';\n\nfunction TrainingDataUpload({ projectId, projectType, onDataUploaded }) {\n  const [uploadState, setUploadState] = useState({\n    images: [],\n    annotations: [],\n    uploading: false,\n    dragActive: false\n  });\n  const [errors, setErrors] = useState({});\n\n  const acceptedImageTypes = ['image/jpeg', 'image/jpg', 'image/png'];\n\n  const handleImagesDrop = (e) => {\n    e.preventDefault();\n    setUploadState(prev => ({ ...prev, dragActive: false }));\n    \n    const files = Array.from(e.dataTransfer.files);\n    const imageFiles = files.filter(file => acceptedImageTypes.includes(file.type));\n    \n    if (imageFiles.length !== files.length) {\n      setErrors({ images: 'Some files were not images and were ignored' });\n    } else {\n      setErrors(prev => ({ ...prev, images: '' }));\n    }\n    \n    setUploadState(prev => ({ ...prev, images: imageFiles }));\n  };\n\n  const handleImagesSelect = (e) => {\n    const files = Array.from(e.target.files);\n    setUploadState(prev => ({ ...prev, images: files }));\n    setErrors(prev => ({ ...prev, images: '' }));\n  };\n\n  const handleAnnotationsSelect = (e) => {\n    const files = Array.from(e.target.files);\n    const txtFiles = files.filter(file => file.name.toLowerCase().endsWith('.txt'));\n    \n    if (txtFiles.length !== files.length) {\n      setErrors({ annotations: 'Some files were not .txt files and were ignored' });\n    } else {\n      setErrors(prev => ({ ...prev, annotations: '' }));\n    }\n    \n    setUploadState(prev => ({ ...prev, annotations: txtFiles }));\n  };\n\n  const validateUpload = () => {\n    const newErrors = {};\n    \n    if (uploadState.images.length === 0) {\n      newErrors.images = 'Please select at least one training image';\n    }\n    \n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n\n  const handleUpload = async () => {\n    if (!validateUpload()) {\n      return;\n    }\n\n    setUploadState(prev => ({ ...prev, uploading: true }));\n    \n    try {\n      const formData = new FormData();\n      \n      // Add images\n      uploadState.images.forEach(image => {\n        formData.append('training_images', image);\n      });\n      \n      // Add annotation files if provided\n      if (uploadState.annotations && uploadState.annotations.length > 0) {\n        uploadState.annotations.forEach(annotation => {\n          formData.append('annotation_files', annotation);\n        });\n      }\n      \n      // Add format\n      formData.append('annotation_format', 'auto');\n\n      const response = await fetch(`/api/auto-annotation/projects/${projectId}/upload-training-data`, {\n        method: 'POST',\n        body: formData\n      });\n\n      const result = await response.json();\n      \n      if (result.status === 'success') {\n        // Reset form\n        setUploadState({\n          images: [],\n          annotations: [],\n          uploading: false,\n          dragActive: false\n        });\n        \n        if (onDataUploaded) {\n          onDataUploaded();\n        }\n      } else {\n        setErrors({ upload: result.message || 'Upload failed' });\n      }\n    } catch (error) {\n      console.error('Upload failed:', error);\n      setErrors({ upload: 'Network error. Please try again.' });\n    } finally {\n      setUploadState(prev => ({ ...prev, uploading: false }));\n    }\n  };\n\n  const removeImage = (index) => {\n    setUploadState(prev => ({\n      ...prev,\n      images: prev.images.filter((_, i) => i !== index)\n    }));\n  };\n\n  const formatFileSize = (bytes) => {\n    if (bytes === 0) return '0 Bytes';\n    const k = 1024;\n    const sizes = ['Bytes', 'KB', 'MB', 'GB'];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n  };\n\n  return (\n    <div className=\"training-data-upload\">\n      {/* Image Upload Section */}\n      <div className=\"upload-section\">\n        <h4>📸 Training Images</h4>\n        <p className=\"section-description\">\n          Upload images that will be used to train your {projectType === 'object_detection' ? 'YOLO' : 'SAM2'} model\n        </p>\n        \n        <div \n          className={`drop-zone ${uploadState.dragActive ? 'active' : ''}`}\n          onDrop={handleImagesDrop}\n          onDragOver={(e) => e.preventDefault()}\n          onDragEnter={() => setUploadState(prev => ({ ...prev, dragActive: true }))}\n          onDragLeave={() => setUploadState(prev => ({ ...prev, dragActive: false }))}\n        >\n          <div className=\"drop-zone-content\">\n            <div className=\"drop-icon\">📁</div>\n            <p>Drag and drop images here, or click to select</p>\n            <p className=\"file-types\">Supported: JPG, JPEG, PNG</p>\n            <input\n              type=\"file\"\n              multiple\n              accept=\".jpg,.jpeg,.png\"\n              onChange={handleImagesSelect}\n              className=\"hidden-file-input\"\n            />\n          </div>\n        </div>\n        \n        {errors.images && (\n          <div className=\"error-message\">{errors.images}</div>\n        )}\n        \n        {/* Image Preview */}\n        {uploadState.images.length > 0 && (\n          <div className=\"file-preview\">\n            <h5>Selected Images ({uploadState.images.length})</h5>\n            <div className=\"image-grid\">\n              {uploadState.images.slice(0, 6).map((file, index) => (\n                <div key={index} className=\"image-preview-item\">\n                  <img \n                    src={URL.createObjectURL(file)} \n                    alt={`Preview ${index}`}\n                    onLoad={(e) => URL.revokeObjectURL(e.target.src)}\n                  />\n                  <div className=\"image-info\">\n                    <span className=\"image-name\">{file.name}</span>\n                    <span className=\"image-size\">{formatFileSize(file.size)}</span>\n                  </div>\n                  <button \n                    className=\"remove-button\"\n                    onClick={() => removeImage(index)}\n                  >\n                    ×\n                  </button>\n                </div>\n              ))}\n              {uploadState.images.length > 6 && (\n                <div className=\"more-images\">\n                  +{uploadState.images.length - 6} more\n                </div>\n              )}\n            </div>\n          </div>\n        )}\n      </div>\n\n      {/* Annotations Upload Section */}\n      <div className=\"upload-section\">\n        <h4>🏷️ Annotations (Optional)</h4>\n        <p className=\"section-description\">\n          {projectType === 'object_detection' \n            ? 'Upload YOLO format annotations (multiple .txt files)'\n            : 'Upload COCO format annotations (JSON file with segmentation data)'\n          }\n        </p>\n        \n        <div className=\"file-input-container\">\n          <input\n            type=\"file\"\n            accept={projectType === 'object_detection' ? '.txt' : '.json'}\n            multiple={projectType === 'object_detection'}\n            onChange={handleAnnotationsSelect}\n            className=\"file-input\"\n            id=\"annotations-input\"\n          />\n          <label htmlFor=\"annotations-input\" className=\"file-input-label\">\n            {uploadState.annotations.length > 0 \n              ? `${uploadState.annotations.length} annotation file${uploadState.annotations.length > 1 ? 's' : ''} selected`\n              : `Choose ${projectType === 'object_detection' ? 'Annotation Files (.txt)' : 'Annotation File (.json)'}`\n            }\n          </label>\n        </div>\n        \n        {errors.annotations && (\n          <div className=\"error-message\">{errors.annotations}</div>\n        )}\n        \n        {/* Annotation Format Info */}\n        <div className=\"format-info\">\n          <h5>📋 Expected Format:</h5>\n          {projectType === 'object_detection' ? (\n            <div className=\"format-example\">\n              <p><strong>YOLO Format (multiple .txt files):</strong></p>\n              <code>class_id center_x center_y width height</code>\n              <p className=\"format-note\">\n                Example: <code>0 0.5 0.3 0.2 0.1</code> (normalized coordinates)\n              </p>\n              <p className=\"format-note\">\n                Select all .txt annotation files at once. Each file should correspond to an image.\n              </p>\n            </div>\n          ) : (\n            <div className=\"format-example\">\n              <p><strong>COCO Format (JSON file):</strong></p>\n              <code>{`{\"annotations\": [{\"segmentation\": [[x1,y1,x2,y2,...]], \"bbox\": [x,y,w,h]}]}`}</code>\n              <p className=\"format-note\">\n                Standard COCO JSON with polygon segmentation data\n              </p>\n            </div>\n          )}\n        </div>\n      </div>\n\n      {/* Upload Actions */}\n      <div className=\"upload-actions\">\n        {errors.upload && (\n          <div className=\"error-banner\">\n            ❌ {errors.upload}\n          </div>\n        )}\n        \n        <div className=\"action-buttons\">\n          <button\n            className=\"upload-button\"\n            onClick={handleUpload}\n            disabled={uploadState.uploading || uploadState.images.length === 0}\n          >\n            {uploadState.uploading ? '⏳ Uploading...' : '📤 Upload Training Data'}\n          </button>\n        </div>\n        \n        <div className=\"upload-summary\">\n          <span>Ready to upload: {uploadState.images.length} images</span>\n          {uploadState.annotations.length > 0 && (\n            <span>, {uploadState.annotations.length} annotation file{uploadState.annotations.length > 1 ? 's' : ''}</span>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default TrainingDataUpload;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}