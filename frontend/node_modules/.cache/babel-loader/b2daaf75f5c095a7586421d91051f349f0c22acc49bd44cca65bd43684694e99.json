{"ast":null,"code":"var _jsxFileName = \"/Users/truonghaidang/Desktop/open-trainer/frontend/src/components/Annotate.js\";\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Annotate() {\n  const [files, setFiles] = useState([]);\n  const [previews, setPreviews] = useState([]);\n  const [annotatedResults, setAnnotatedResults] = useState([]);\n  const [annotationType, setAnnotationType] = useState('detection');\n  const [isLoading, setIsLoading] = useState(false);\n  const [processingProgress, setProcessingProgress] = useState({\n    current: 0,\n    total: 0\n  });\n  const handleFileChange = e => {\n    const selectedFiles = Array.from(e.target.files);\n    setFiles(selectedFiles);\n\n    // Create previews for all selected files\n    const newPreviews = selectedFiles.map(file => ({\n      file,\n      url: URL.createObjectURL(file),\n      name: file.name\n    }));\n    setPreviews(newPreviews);\n    setAnnotatedResults([]); // Reset results when new files are selected\n  };\n  const handleAnnotate = async () => {\n    if (files.length === 0) {\n      alert(\"Please select at least one file first.\");\n      return;\n    }\n    setIsLoading(true);\n    setProcessingProgress({\n      current: 0,\n      total: files.length\n    });\n    setAnnotatedResults([]);\n    const endpoint = annotationType === 'detection' ? \"/pre-annotate-detect\" : \"/pre-annotate-segment\";\n    const results = [];\n    try {\n      for (let i = 0; i < files.length; i++) {\n        const file = files[i];\n        setProcessingProgress({\n          current: i + 1,\n          total: files.length\n        });\n        const formData = new FormData();\n        formData.append(\"file\", file);\n        try {\n          const response = await fetch(endpoint, {\n            method: \"POST\",\n            body: formData\n          });\n          if (response.ok) {\n            const imageBlob = await response.blob();\n            results.push({\n              originalName: file.name,\n              annotatedUrl: URL.createObjectURL(imageBlob),\n              success: true\n            });\n          } else {\n            results.push({\n              originalName: file.name,\n              success: false,\n              error: `${annotationType} annotation failed`\n            });\n          }\n        } catch (error) {\n          console.error(`Error processing ${file.name}:`, error);\n          results.push({\n            originalName: file.name,\n            success: false,\n            error: \"Processing error\"\n          });\n        }\n      }\n      setAnnotatedResults(results);\n    } catch (error) {\n      console.error(\"Error during batch annotation:\", error);\n      alert(\"An error occurred during batch annotation.\");\n    } finally {\n      setIsLoading(false);\n      setProcessingProgress({\n        current: 0,\n        total: 0\n      });\n    }\n  };\n  const handleDownloadZip = async () => {\n    const successfulResults = annotatedResults.filter(result => result.success);\n    if (successfulResults.length === 0) {\n      alert(\"No successfully annotated images to download.\");\n      return;\n    }\n    try {\n      const formData = new FormData();\n      formData.append('annotationType', annotationType);\n\n      // Add all original files that were successfully processed\n      for (let result of successfulResults) {\n        const originalFile = files.find(f => f.name === result.originalName);\n        if (originalFile) {\n          formData.append('files', originalFile);\n        }\n      }\n      const response = await fetch('/batch-annotate-zip', {\n        method: 'POST',\n        body: formData\n      });\n      if (response.ok) {\n        const blob = await response.blob();\n        const url = window.URL.createObjectURL(blob);\n        const a = document.createElement('a');\n        a.href = url;\n        a.download = `annotated_${annotationType}_batch.zip`;\n        document.body.appendChild(a);\n        a.click();\n        window.URL.revokeObjectURL(url);\n        document.body.removeChild(a);\n      } else {\n        alert(\"Failed to create zip file.\");\n      }\n    } catch (error) {\n      console.error(\"Error downloading zip:\", error);\n      alert(\"An error occurred while creating the zip file.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Pre-annotate Image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '20px'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: handleFileChange,\n        accept: \"image/*\",\n        style: {\n          marginBottom: '10px',\n          display: 'block'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Select Annotation Type:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          gap: '15px',\n          alignItems: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          style: {\n            display: 'flex',\n            alignItems: 'center',\n            cursor: 'pointer'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            value: \"detection\",\n            checked: annotationType === 'detection',\n            onChange: e => setAnnotationType(e.target.value),\n            style: {\n              marginRight: '8px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"\\uD83C\\uDFAF \", /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Object Detection\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 34\n            }, this), \" - Draw rectangles around metallic objects\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          style: {\n            display: 'flex',\n            alignItems: 'center',\n            cursor: 'pointer'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            value: \"segmentation\",\n            checked: annotationType === 'segmentation',\n            onChange: e => setAnnotationType(e.target.value),\n            style: {\n              marginRight: '8px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"\\u2702\\uFE0F \", /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Segmentation\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 34\n            }, this), \" - Draw exact contours around objects\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAnnotate,\n      disabled: !file || isLoading,\n      style: {\n        backgroundColor: !file || isLoading ? '#ccc' : '#1e3a8a',\n        color: 'white',\n        padding: '12px 24px',\n        border: 'none',\n        borderRadius: '6px',\n        cursor: !file || isLoading ? 'not-allowed' : 'pointer',\n        fontSize: '16px',\n        marginBottom: '30px'\n      },\n      children: isLoading ? `Processing ${annotationType}...` : `Start ${annotationType}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        gap: '30px',\n        flexWrap: 'wrap'\n      },\n      children: [preview && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          flex: '1',\n          minWidth: '300px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"\\uD83D\\uDCF7 Original Image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: preview,\n          alt: \"Original\",\n          style: {\n            maxWidth: '100%',\n            height: 'auto',\n            border: '2px solid #ddd',\n            borderRadius: '8px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 21\n      }, this), annotatedImage && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          flex: '1',\n          minWidth: '300px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: annotationType === 'detection' ? '🎯 Detection Result' : '✂️ Segmentation Result'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: annotatedImage,\n          alt: \"Annotated\",\n          style: {\n            maxWidth: '100%',\n            height: 'auto',\n            border: '2px solid #1e3a8a',\n            borderRadius: '8px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: '10px',\n            fontSize: '14px',\n            color: '#666'\n          },\n          children: annotationType === 'detection' ? 'Bounding boxes show detected metallic objects' : 'Colored regions show segmented object areas'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 9\n  }, this);\n}\nexport default Annotate;","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Annotate","files","setFiles","previews","setPreviews","annotatedResults","setAnnotatedResults","annotationType","setAnnotationType","isLoading","setIsLoading","processingProgress","setProcessingProgress","current","total","handleFileChange","e","selectedFiles","Array","from","target","newPreviews","map","file","url","URL","createObjectURL","name","handleAnnotate","length","alert","endpoint","results","i","formData","FormData","append","response","fetch","method","body","ok","imageBlob","blob","push","originalName","annotatedUrl","success","error","console","handleDownloadZip","successfulResults","filter","result","originalFile","find","f","window","a","document","createElement","href","download","appendChild","click","revokeObjectURL","removeChild","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","marginBottom","type","onChange","accept","display","gap","alignItems","cursor","value","checked","marginRight","onClick","disabled","backgroundColor","color","border","borderRadius","fontSize","flexWrap","preview","flex","minWidth","src","alt","maxWidth","height","annotatedImage","marginTop"],"sources":["/Users/truonghaidang/Desktop/open-trainer/frontend/src/components/Annotate.js"],"sourcesContent":["import React, { useState } from 'react';\n\nfunction Annotate() {\n    const [files, setFiles] = useState([]);\n    const [previews, setPreviews] = useState([]);\n    const [annotatedResults, setAnnotatedResults] = useState([]);\n    const [annotationType, setAnnotationType] = useState('detection');\n    const [isLoading, setIsLoading] = useState(false);\n    const [processingProgress, setProcessingProgress] = useState({ current: 0, total: 0 });\n\n    const handleFileChange = (e) => {\n        const selectedFiles = Array.from(e.target.files);\n        setFiles(selectedFiles);\n        \n        // Create previews for all selected files\n        const newPreviews = selectedFiles.map(file => ({\n            file,\n            url: URL.createObjectURL(file),\n            name: file.name\n        }));\n        setPreviews(newPreviews);\n        setAnnotatedResults([]); // Reset results when new files are selected\n    };\n\n    const handleAnnotate = async () => {\n        if (files.length === 0) {\n            alert(\"Please select at least one file first.\");\n            return;\n        }\n\n        setIsLoading(true);\n        setProcessingProgress({ current: 0, total: files.length });\n        setAnnotatedResults([]);\n\n        const endpoint = annotationType === 'detection' \n            ? \"/pre-annotate-detect\" \n            : \"/pre-annotate-segment\";\n\n        const results = [];\n\n        try {\n            for (let i = 0; i < files.length; i++) {\n                const file = files[i];\n                setProcessingProgress({ current: i + 1, total: files.length });\n\n                const formData = new FormData();\n                formData.append(\"file\", file);\n\n                try {\n                    const response = await fetch(endpoint, {\n                        method: \"POST\",\n                        body: formData,\n                    });\n\n                    if (response.ok) {\n                        const imageBlob = await response.blob();\n                        results.push({\n                            originalName: file.name,\n                            annotatedUrl: URL.createObjectURL(imageBlob),\n                            success: true\n                        });\n                    } else {\n                        results.push({\n                            originalName: file.name,\n                            success: false,\n                            error: `${annotationType} annotation failed`\n                        });\n                    }\n                } catch (error) {\n                    console.error(`Error processing ${file.name}:`, error);\n                    results.push({\n                        originalName: file.name,\n                        success: false,\n                        error: \"Processing error\"\n                    });\n                }\n            }\n\n            setAnnotatedResults(results);\n        } catch (error) {\n            console.error(\"Error during batch annotation:\", error);\n            alert(\"An error occurred during batch annotation.\");\n        } finally {\n            setIsLoading(false);\n            setProcessingProgress({ current: 0, total: 0 });\n        }\n    };\n\n    const handleDownloadZip = async () => {\n        const successfulResults = annotatedResults.filter(result => result.success);\n        \n        if (successfulResults.length === 0) {\n            alert(\"No successfully annotated images to download.\");\n            return;\n        }\n\n        try {\n            const formData = new FormData();\n            formData.append('annotationType', annotationType);\n            \n            // Add all original files that were successfully processed\n            for (let result of successfulResults) {\n                const originalFile = files.find(f => f.name === result.originalName);\n                if (originalFile) {\n                    formData.append('files', originalFile);\n                }\n            }\n\n            const response = await fetch('/batch-annotate-zip', {\n                method: 'POST',\n                body: formData,\n            });\n\n            if (response.ok) {\n                const blob = await response.blob();\n                const url = window.URL.createObjectURL(blob);\n                const a = document.createElement('a');\n                a.href = url;\n                a.download = `annotated_${annotationType}_batch.zip`;\n                document.body.appendChild(a);\n                a.click();\n                window.URL.revokeObjectURL(url);\n                document.body.removeChild(a);\n            } else {\n                alert(\"Failed to create zip file.\");\n            }\n        } catch (error) {\n            console.error(\"Error downloading zip:\", error);\n            alert(\"An error occurred while creating the zip file.\");\n        }\n    };\n\n    return (\n        <div style={{ padding: '20px' }}>\n            <h2>Pre-annotate Image</h2>\n            \n            {/* File Upload */}\n            <div style={{ marginBottom: '20px' }}>\n                <input \n                    type=\"file\" \n                    onChange={handleFileChange}\n                    accept=\"image/*\"\n                    style={{ marginBottom: '10px', display: 'block' }}\n                />\n            </div>\n\n            {/* Annotation Type Selection */}\n            <div style={{ marginBottom: '20px' }}>\n                <h4>Select Annotation Type:</h4>\n                <div style={{ display: 'flex', gap: '15px', alignItems: 'center' }}>\n                    <label style={{ display: 'flex', alignItems: 'center', cursor: 'pointer' }}>\n                        <input\n                            type=\"radio\"\n                            value=\"detection\"\n                            checked={annotationType === 'detection'}\n                            onChange={(e) => setAnnotationType(e.target.value)}\n                            style={{ marginRight: '8px' }}\n                        />\n                        <span>🎯 <strong>Object Detection</strong> - Draw rectangles around metallic objects</span>\n                    </label>\n                    <label style={{ display: 'flex', alignItems: 'center', cursor: 'pointer' }}>\n                        <input\n                            type=\"radio\"\n                            value=\"segmentation\"\n                            checked={annotationType === 'segmentation'}\n                            onChange={(e) => setAnnotationType(e.target.value)}\n                            style={{ marginRight: '8px' }}\n                        />\n                        <span>✂️ <strong>Segmentation</strong> - Draw exact contours around objects</span>\n                    </label>\n                </div>\n            </div>\n\n            {/* Annotate Button */}\n            <button \n                onClick={handleAnnotate}\n                disabled={!file || isLoading}\n                style={{\n                    backgroundColor: !file || isLoading ? '#ccc' : '#1e3a8a',\n                    color: 'white',\n                    padding: '12px 24px',\n                    border: 'none',\n                    borderRadius: '6px',\n                    cursor: !file || isLoading ? 'not-allowed' : 'pointer',\n                    fontSize: '16px',\n                    marginBottom: '30px'\n                }}\n            >\n                {isLoading ? `Processing ${annotationType}...` : `Start ${annotationType}`}\n            </button>\n\n            {/* Results Display */}\n            <div style={{ display: 'flex', gap: '30px', flexWrap: 'wrap' }}>\n                {preview && (\n                    <div style={{ flex: '1', minWidth: '300px' }}>\n                        <h3>📷 Original Image</h3>\n                        <img \n                            src={preview} \n                            alt=\"Original\" \n                            style={{ \n                                maxWidth: '100%', \n                                height: 'auto',\n                                border: '2px solid #ddd',\n                                borderRadius: '8px'\n                            }} \n                        />\n                    </div>\n                )}\n                {annotatedImage && (\n                    <div style={{ flex: '1', minWidth: '300px' }}>\n                        <h3>\n                            {annotationType === 'detection' ? '🎯 Detection Result' : '✂️ Segmentation Result'}\n                        </h3>\n                        <img \n                            src={annotatedImage} \n                            alt=\"Annotated\" \n                            style={{ \n                                maxWidth: '100%', \n                                height: 'auto',\n                                border: '2px solid #1e3a8a',\n                                borderRadius: '8px'\n                            }} \n                        />\n                        <div style={{ marginTop: '10px', fontSize: '14px', color: '#666' }}>\n                            {annotationType === 'detection' \n                                ? 'Bounding boxes show detected metallic objects' \n                                : 'Colored regions show segmented object areas'}\n                        </div>\n                    </div>\n                )}\n            </div>\n        </div>\n    );\n}\n\nexport default Annotate;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}