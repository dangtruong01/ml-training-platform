{"ast":null,"code":"var _jsxFileName = \"/Users/truonghaidang/Desktop/open-trainer/frontend/src/components/Train.js\";\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Train() {\n  const [dataset, setDataset] = useState(null);\n  const [task, setTask] = useState('detection');\n  const [message, setMessage] = useState('');\n  const handleTrain = async () => {\n    if (!dataset) {\n      setMessage('Please select a dataset zip file.');\n      return;\n    }\n    const endpoint = task === 'detection' ? '/train-detect' : '/train-seg';\n    const formData = new FormData();\n    formData.append('file', dataset);\n    try {\n      const response = await axios.post(endpoint, formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      setMessage(response.data.message);\n    } catch (error) {\n      setMessage('Error starting training.');\n      console.error(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"section\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Train a Model\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Dataset (.zip): \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: e => setDataset(e.target.files[0])\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Task: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: task,\n        onChange: e => setTask(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"detection\",\n          children: \"Object Detection\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"segmentation\",\n          children: \"Image Segmentation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleTrain,\n      children: \"Start Training\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\nexport default Train;","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","Train","dataset","setDataset","task","setTask","message","setMessage","handleTrain","endpoint","formData","FormData","append","response","post","headers","data","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","e","target","files","value","onClick"],"sources":["/Users/truonghaidang/Desktop/open-trainer/frontend/src/components/Train.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\nfunction Train() {\n  const [dataset, setDataset] = useState(null);\n  const [task, setTask] = useState('detection');\n  const [message, setMessage] = useState('');\n\n  const handleTrain = async () => {\n    if (!dataset) {\n      setMessage('Please select a dataset zip file.');\n      return;\n    }\n\n    const endpoint = task === 'detection' ? '/train-detect' : '/train-seg';\n    const formData = new FormData();\n    formData.append('file', dataset);\n\n    try {\n      const response = await axios.post(endpoint, formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n        },\n      });\n      setMessage(response.data.message);\n    } catch (error) {\n      setMessage('Error starting training.');\n      console.error(error);\n    }\n  };\n\n  return (\n    <div className=\"section\">\n      <h2>Train a Model</h2>\n      <div>\n        <label>Dataset (.zip): </label>\n        <input type=\"file\" onChange={(e) => setDataset(e.target.files[0])} />\n      </div>\n      <div>\n        <label>Task: </label>\n        <select value={task} onChange={(e) => setTask(e.target.value)}>\n          <option value=\"detection\">Object Detection</option>\n          <option value=\"segmentation\">Image Segmentation</option>\n        </select>\n      </div>\n      <button onClick={handleTrain}>Start Training</button>\n      {message && <p>{message}</p>}\n    </div>\n  );\n}\n\nexport default Train;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}