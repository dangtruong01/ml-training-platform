{"ast":null,"code":"var _jsxFileName = \"/Users/truonghaidang/Desktop/open-trainer/frontend/src/components/auto-annotation/ROIExtractionStep.js\";\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ROIExtractionStep({\n  projectId,\n  projectName,\n  trainingImagesCount,\n  onStepComplete\n}) {\n  const [extractionState, setExtractionState] = useState({\n    // ROI Method Selection\n    roiMethod: 'grounding_dino',\n    // GroundingDINO settings\n    componentDescription: 'metal plate',\n    confidenceThreshold: 0.3,\n    // Manufacturing segmentation settings\n    manufacturingScenario: 'general',\n    partMaterial: 'metal',\n    fixtureType: 'tray',\n    fixtureColor: 'blue',\n    // Processing state\n    processing: false,\n    results: null,\n    previewImages: [],\n    loadingPreview: false,\n    // Defective images\n    uploadingDefectiveImages: false,\n    defectiveImagesCount: 0\n  });\n  const [errors, setErrors] = useState({});\n  const [defectiveFiles, setDefectiveFiles] = useState([]);\n  const handleSettingChange = (setting, value) => {\n    setExtractionState(prev => ({\n      ...prev,\n      [setting]: value\n    }));\n  };\n  const handleDefectiveImagesUpload = async e => {\n    const files = Array.from(e.target.files);\n    if (files.length === 0) return;\n    setDefectiveFiles(files);\n    setExtractionState(prev => ({\n      ...prev,\n      uploadingDefectiveImages: true,\n      defectiveImagesCount: files.length\n    }));\n    setErrors({});\n    try {\n      const formData = new FormData();\n      files.forEach((file, index) => {\n        formData.append(`defective_images`, file);\n      });\n      console.log(`📤 Uploading ${files.length} defective images...`);\n      const response = await fetch(`/api/auto-annotation/projects/${projectId}/upload-defective-images`, {\n        method: 'POST',\n        body: formData\n      });\n      const result = await response.json();\n      if (result.status === 'success') {\n        console.log('✅ Defective images uploaded successfully');\n        setExtractionState(prev => ({\n          ...prev,\n          defectiveImagesCount: result.uploaded_count\n        }));\n      } else {\n        setErrors({\n          defectiveUpload: result.message || 'Failed to upload defective images'\n        });\n      }\n    } catch (error) {\n      console.error('❌ Defective images upload failed:', error);\n      setErrors({\n        defectiveUpload: 'Network error during upload'\n      });\n    } finally {\n      setExtractionState(prev => ({\n        ...prev,\n        uploadingDefectiveImages: false\n      }));\n    }\n  };\n  const startROIExtraction = async () => {\n    setExtractionState(prev => ({\n      ...prev,\n      processing: true\n    }));\n    setErrors({});\n    try {\n      const formData = new FormData();\n      formData.append('roi_method', extractionState.roiMethod);\n      if (extractionState.roiMethod === 'grounding_dino') {\n        formData.append('component_description', extractionState.componentDescription);\n        formData.append('confidence_threshold', extractionState.confidenceThreshold);\n      } else if (extractionState.roiMethod === 'manufacturing_segmentation') {\n        formData.append('manufacturing_scenario', extractionState.manufacturingScenario);\n        formData.append('part_material', extractionState.partMaterial);\n        formData.append('fixture_type', extractionState.fixtureType);\n        formData.append('fixture_color', extractionState.fixtureColor);\n      }\n      const response = await fetch(`/api/auto-annotation/projects/${projectId}/extract-roi`, {\n        method: 'POST',\n        body: formData\n      });\n      const result = await response.json();\n      if (result.status === 'success') {\n        setExtractionState(prev => ({\n          ...prev,\n          results: result\n        }));\n        console.log('✅ ROI extraction completed:', result);\n\n        // Auto-load preview after successful extraction\n        setTimeout(() => {\n          loadROIPreview();\n        }, 500);\n      } else {\n        setErrors({\n          extraction: result.message || 'ROI extraction failed'\n        });\n      }\n    } catch (error) {\n      console.error('ROI extraction failed:', error);\n      setErrors({\n        extraction: 'Network error. Please try again.'\n      });\n    } finally {\n      setExtractionState(prev => ({\n        ...prev,\n        processing: false\n      }));\n    }\n  };\n  const getSuccessRate = () => {\n    if (!extractionState.results) return 0;\n    return extractionState.results.successful_extractions / extractionState.results.total_images * 100;\n  };\n  const loadROIPreview = async () => {\n    setExtractionState(prev => ({\n      ...prev,\n      loadingPreview: true\n    }));\n    try {\n      const response = await fetch(`/api/auto-annotation/projects/${projectId}/roi-preview`);\n      const result = await response.json();\n      if (result.status === 'success') {\n        setExtractionState(prev => ({\n          ...prev,\n          previewImages: result.preview_images\n        }));\n      } else {\n        console.warn('Failed to load ROI preview:', result.message);\n      }\n    } catch (error) {\n      console.error('Error loading ROI preview:', error);\n    } finally {\n      setExtractionState(prev => ({\n        ...prev,\n        loadingPreview: false\n      }));\n    }\n  };\n  const handleProceedToNextStep = () => {\n    if (onStepComplete) {\n      onStepComplete(extractionState.results);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"roi-extraction-step\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"step-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"\\uD83C\\uDFAF Step 1: Extract ROI from Training Images\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Use GroundingDINO to identify and crop component regions from your \", trainingImagesCount, \" training images.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"extraction-settings\",\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \"\\u2699\\uFE0F ROI Extraction Settings\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"settings-grid\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"setting-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Component Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: extractionState.componentDescription,\n            onChange: e => handleSettingChange('componentDescription', e.target.value),\n            placeholder: \"e.g., metal plate, circuit board, component\",\n            disabled: extractionState.processing\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"setting-help\",\n            children: \"Describe what GroundingDINO should detect\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"setting-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Confidence Threshold\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"threshold-control\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"range\",\n              value: extractionState.confidenceThreshold,\n              onChange: e => handleSettingChange('confidenceThreshold', parseFloat(e.target.value)),\n              min: \"0.1\",\n              max: \"0.8\",\n              step: \"0.1\",\n              disabled: extractionState.processing\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"threshold-value\",\n              children: extractionState.confidenceThreshold\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"setting-help\",\n            children: \"Detection confidence threshold (lower = more detections)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"extraction-actions\",\n      children: [errors.extraction && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-banner\",\n        children: [\"\\u274C \", errors.extraction]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"start-extraction-button\",\n        onClick: startROIExtraction,\n        disabled: extractionState.processing,\n        children: extractionState.processing ? '⏳ Extracting ROI...' : '🎯 Extract Component ROI'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 7\n    }, this), extractionState.results && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"extraction-results\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"results-header\",\n        children: /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \"\\uD83D\\uDCCA ROI Extraction Results\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"results-summary\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"summary-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"summary-label\",\n            children: \"Total Images:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"summary-value\",\n            children: extractionState.results.total_images\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"summary-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"summary-label\",\n            children: \"Successful:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"summary-value success\",\n            children: extractionState.results.successful_extractions\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"summary-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"summary-label\",\n            children: \"Failed:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"summary-value error\",\n            children: extractionState.results.failed_extractions\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"summary-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"summary-label\",\n            children: \"Success Rate:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: `summary-value ${getSuccessRate() > 80 ? 'success' : getSuccessRate() > 50 ? 'warning' : 'error'}`,\n            children: [getSuccessRate().toFixed(1), \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 11\n      }, this), extractionState.results.average_roi_size && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"roi-stats\",\n        children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n          children: \"\\uD83D\\uDCCF Average ROI Size\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [extractionState.results.average_roi_size[0], \" \\xD7 \", extractionState.results.average_roi_size[1], \" pixels\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 13\n      }, this), getSuccessRate() < 70 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"warning-banner\",\n        children: [\"\\u26A0\\uFE0F Low success rate detected. Consider:\", /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Lowering the confidence threshold\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Adjusting the component description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Checking if images contain the specified component\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 13\n      }, this), getSuccessRate() >= 70 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"success-banner\",\n        children: [\"\\u2705 Good ROI extraction! Ready for anomaly detection analysis.\", /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"next-step-button\",\n          onClick: handleProceedToNextStep,\n          style: {\n            marginLeft: '15px',\n            padding: '8px 16px',\n            background: '#28a745',\n            color: 'white',\n            border: 'none',\n            borderRadius: '4px',\n            cursor: 'pointer'\n          },\n          children: \"Proceed to Step 2 \\u2192\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 9\n    }, this), extractionState.results && extractionState.results.successful_extractions > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"roi-preview-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"preview-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \"\\uD83D\\uDDBC\\uFE0F Extracted ROI Preview\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 13\n        }, this), !extractionState.previewImages.length && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"load-preview-button\",\n          onClick: loadROIPreview,\n          disabled: extractionState.loadingPreview,\n          children: extractionState.loadingPreview ? '⏳ Loading...' : '📸 Load Preview'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 11\n      }, this), extractionState.previewImages.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"preview-grid\",\n        children: extractionState.previewImages.map((preview, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"preview-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: `data:image/jpeg;base64,${preview.image_base64}`,\n            alt: `ROI ${index + 1}`,\n            className: \"preview-image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"preview-filename\",\n            children: preview.filename.substring(13)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 19\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"preview-note\",\n        children: \"\\uD83D\\uDCDD Showing sample extracted ROI regions. These cropped areas will be used for anomaly detection.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"step-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \"\\u2139\\uFE0F About ROI Extraction\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"info-points\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"info-point\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"point-icon\",\n            children: \"\\uD83C\\uDFAF\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"point-text\",\n            children: \"Identifies component regions using GroundingDINO\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"info-point\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"point-icon\",\n            children: \"\\u2702\\uFE0F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"point-text\",\n            children: \"Crops out noise (trays, bolts, QR codes)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"info-point\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"point-icon\",\n            children: \"\\uD83D\\uDCCF\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"point-text\",\n            children: \"Adds padding for better anomaly detection\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"info-point\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"point-icon\",\n            children: \"\\uD83C\\uDFAF\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"point-text\",\n            children: \"Prepares clean data for next steps\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 337,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 159,\n    columnNumber: 5\n  }, this);\n}\nexport default ROIExtractionStep;","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ROIExtractionStep","projectId","projectName","trainingImagesCount","onStepComplete","extractionState","setExtractionState","roiMethod","componentDescription","confidenceThreshold","manufacturingScenario","partMaterial","fixtureType","fixtureColor","processing","results","previewImages","loadingPreview","uploadingDefectiveImages","defectiveImagesCount","errors","setErrors","defectiveFiles","setDefectiveFiles","handleSettingChange","setting","value","prev","handleDefectiveImagesUpload","e","files","Array","from","target","length","formData","FormData","forEach","file","index","append","console","log","response","fetch","method","body","result","json","status","uploaded_count","defectiveUpload","message","error","startROIExtraction","setTimeout","loadROIPreview","extraction","getSuccessRate","successful_extractions","total_images","preview_images","warn","handleProceedToNextStep","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","placeholder","disabled","parseFloat","min","max","step","onClick","failed_extractions","toFixed","average_roi_size","style","marginLeft","padding","background","color","border","borderRadius","cursor","map","preview","src","image_base64","alt","filename","substring"],"sources":["/Users/truonghaidang/Desktop/open-trainer/frontend/src/components/auto-annotation/ROIExtractionStep.js"],"sourcesContent":["import React, { useState } from 'react';\n\nfunction ROIExtractionStep({ projectId, projectName, trainingImagesCount, onStepComplete }) {\n  const [extractionState, setExtractionState] = useState({\n    // ROI Method Selection\n    roiMethod: 'grounding_dino',\n    // GroundingDINO settings\n    componentDescription: 'metal plate',\n    confidenceThreshold: 0.3,\n    // Manufacturing segmentation settings\n    manufacturingScenario: 'general',\n    partMaterial: 'metal',\n    fixtureType: 'tray',\n    fixtureColor: 'blue',\n    // Processing state\n    processing: false,\n    results: null,\n    previewImages: [],\n    loadingPreview: false,\n    // Defective images\n    uploadingDefectiveImages: false,\n    defectiveImagesCount: 0\n  });\n  const [errors, setErrors] = useState({});\n  const [defectiveFiles, setDefectiveFiles] = useState([]);\n\n  const handleSettingChange = (setting, value) => {\n    setExtractionState(prev => ({\n      ...prev,\n      [setting]: value\n    }));\n  };\n\n  const handleDefectiveImagesUpload = async (e) => {\n    const files = Array.from(e.target.files);\n    if (files.length === 0) return;\n\n    setDefectiveFiles(files);\n    setExtractionState(prev => ({ \n      ...prev, \n      uploadingDefectiveImages: true,\n      defectiveImagesCount: files.length \n    }));\n    setErrors({});\n\n    try {\n      const formData = new FormData();\n      files.forEach((file, index) => {\n        formData.append(`defective_images`, file);\n      });\n\n      console.log(`📤 Uploading ${files.length} defective images...`);\n\n      const response = await fetch(`/api/auto-annotation/projects/${projectId}/upload-defective-images`, {\n        method: 'POST',\n        body: formData\n      });\n\n      const result = await response.json();\n\n      if (result.status === 'success') {\n        console.log('✅ Defective images uploaded successfully');\n        setExtractionState(prev => ({ \n          ...prev, \n          defectiveImagesCount: result.uploaded_count \n        }));\n      } else {\n        setErrors({ defectiveUpload: result.message || 'Failed to upload defective images' });\n      }\n    } catch (error) {\n      console.error('❌ Defective images upload failed:', error);\n      setErrors({ defectiveUpload: 'Network error during upload' });\n    } finally {\n      setExtractionState(prev => ({ ...prev, uploadingDefectiveImages: false }));\n    }\n  };\n\n  const startROIExtraction = async () => {\n    setExtractionState(prev => ({ ...prev, processing: true }));\n    setErrors({});\n\n    try {\n      const formData = new FormData();\n      formData.append('roi_method', extractionState.roiMethod);\n\n      if (extractionState.roiMethod === 'grounding_dino') {\n        formData.append('component_description', extractionState.componentDescription);\n        formData.append('confidence_threshold', extractionState.confidenceThreshold);\n      } else if (extractionState.roiMethod === 'manufacturing_segmentation') {\n        formData.append('manufacturing_scenario', extractionState.manufacturingScenario);\n        formData.append('part_material', extractionState.partMaterial);\n        formData.append('fixture_type', extractionState.fixtureType);\n        formData.append('fixture_color', extractionState.fixtureColor);\n      }\n\n      const response = await fetch(`/api/auto-annotation/projects/${projectId}/extract-roi`, {\n        method: 'POST',\n        body: formData\n      });\n\n      const result = await response.json();\n\n      if (result.status === 'success') {\n        setExtractionState(prev => ({\n          ...prev,\n          results: result\n        }));\n        console.log('✅ ROI extraction completed:', result);\n        \n        // Auto-load preview after successful extraction\n        setTimeout(() => {\n          loadROIPreview();\n        }, 500);\n      } else {\n        setErrors({ extraction: result.message || 'ROI extraction failed' });\n      }\n    } catch (error) {\n      console.error('ROI extraction failed:', error);\n      setErrors({ extraction: 'Network error. Please try again.' });\n    } finally {\n      setExtractionState(prev => ({ ...prev, processing: false }));\n    }\n  };\n\n  const getSuccessRate = () => {\n    if (!extractionState.results) return 0;\n    return (extractionState.results.successful_extractions / extractionState.results.total_images) * 100;\n  };\n\n  const loadROIPreview = async () => {\n    setExtractionState(prev => ({ ...prev, loadingPreview: true }));\n\n    try {\n      const response = await fetch(`/api/auto-annotation/projects/${projectId}/roi-preview`);\n      const result = await response.json();\n\n      if (result.status === 'success') {\n        setExtractionState(prev => ({\n          ...prev,\n          previewImages: result.preview_images\n        }));\n      } else {\n        console.warn('Failed to load ROI preview:', result.message);\n      }\n    } catch (error) {\n      console.error('Error loading ROI preview:', error);\n    } finally {\n      setExtractionState(prev => ({ ...prev, loadingPreview: false }));\n    }\n  };\n\n  const handleProceedToNextStep = () => {\n    if (onStepComplete) {\n      onStepComplete(extractionState.results);\n    }\n  };\n\n  return (\n    <div className=\"roi-extraction-step\">\n      <div className=\"step-header\">\n        <h4>🎯 Step 1: Extract ROI from Training Images</h4>\n        <p>Use GroundingDINO to identify and crop component regions from your {trainingImagesCount} training images.</p>\n      </div>\n\n      {/* Settings */}\n      <div className=\"extraction-settings\">\n        <h5>⚙️ ROI Extraction Settings</h5>\n        \n        <div className=\"settings-grid\">\n          <div className=\"setting-item\">\n            <label>Component Description</label>\n            <input\n              type=\"text\"\n              value={extractionState.componentDescription}\n              onChange={(e) => handleSettingChange('componentDescription', e.target.value)}\n              placeholder=\"e.g., metal plate, circuit board, component\"\n              disabled={extractionState.processing}\n            />\n            <span className=\"setting-help\">Describe what GroundingDINO should detect</span>\n          </div>\n          \n          <div className=\"setting-item\">\n            <label>Confidence Threshold</label>\n            <div className=\"threshold-control\">\n              <input\n                type=\"range\"\n                value={extractionState.confidenceThreshold}\n                onChange={(e) => handleSettingChange('confidenceThreshold', parseFloat(e.target.value))}\n                min=\"0.1\"\n                max=\"0.8\"\n                step=\"0.1\"\n                disabled={extractionState.processing}\n              />\n              <span className=\"threshold-value\">{extractionState.confidenceThreshold}</span>\n            </div>\n            <span className=\"setting-help\">Detection confidence threshold (lower = more detections)</span>\n          </div>\n        </div>\n      </div>\n\n      {/* Action Button */}\n      <div className=\"extraction-actions\">\n        {errors.extraction && (\n          <div className=\"error-banner\">\n            ❌ {errors.extraction}\n          </div>\n        )}\n        \n        <button\n          className=\"start-extraction-button\"\n          onClick={startROIExtraction}\n          disabled={extractionState.processing}\n        >\n          {extractionState.processing \n            ? '⏳ Extracting ROI...' \n            : '🎯 Extract Component ROI'\n          }\n        </button>\n      </div>\n\n      {/* Results */}\n      {extractionState.results && (\n        <div className=\"extraction-results\">\n          <div className=\"results-header\">\n            <h5>📊 ROI Extraction Results</h5>\n          </div>\n          \n          <div className=\"results-summary\">\n            <div className=\"summary-item\">\n              <span className=\"summary-label\">Total Images:</span>\n              <span className=\"summary-value\">{extractionState.results.total_images}</span>\n            </div>\n            <div className=\"summary-item\">\n              <span className=\"summary-label\">Successful:</span>\n              <span className=\"summary-value success\">{extractionState.results.successful_extractions}</span>\n            </div>\n            <div className=\"summary-item\">\n              <span className=\"summary-label\">Failed:</span>\n              <span className=\"summary-value error\">{extractionState.results.failed_extractions}</span>\n            </div>\n            <div className=\"summary-item\">\n              <span className=\"summary-label\">Success Rate:</span>\n              <span className={`summary-value ${getSuccessRate() > 80 ? 'success' : getSuccessRate() > 50 ? 'warning' : 'error'}`}>\n                {getSuccessRate().toFixed(1)}%\n              </span>\n            </div>\n          </div>\n\n          {extractionState.results.average_roi_size && (\n            <div className=\"roi-stats\">\n              <h6>📏 Average ROI Size</h6>\n              <p>{extractionState.results.average_roi_size[0]} × {extractionState.results.average_roi_size[1]} pixels</p>\n            </div>\n          )}\n\n          {getSuccessRate() < 70 && (\n            <div className=\"warning-banner\">\n              ⚠️ Low success rate detected. Consider:\n              <ul>\n                <li>Lowering the confidence threshold</li>\n                <li>Adjusting the component description</li>\n                <li>Checking if images contain the specified component</li>\n              </ul>\n            </div>\n          )}\n\n          {getSuccessRate() >= 70 && (\n            <div className=\"success-banner\">\n              ✅ Good ROI extraction! Ready for anomaly detection analysis.\n              <button\n                className=\"next-step-button\"\n                onClick={handleProceedToNextStep}\n                style={{ marginLeft: '15px', padding: '8px 16px', background: '#28a745', color: 'white', border: 'none', borderRadius: '4px', cursor: 'pointer' }}\n              >\n                Proceed to Step 2 →\n              </button>\n            </div>\n          )}\n        </div>\n      )}\n\n      {/* ROI Preview */}\n      {extractionState.results && extractionState.results.successful_extractions > 0 && (\n        <div className=\"roi-preview-section\">\n          <div className=\"preview-header\">\n            <h5>🖼️ Extracted ROI Preview</h5>\n            {!extractionState.previewImages.length && (\n              <button\n                className=\"load-preview-button\"\n                onClick={loadROIPreview}\n                disabled={extractionState.loadingPreview}\n              >\n                {extractionState.loadingPreview ? '⏳ Loading...' : '📸 Load Preview'}\n              </button>\n            )}\n          </div>\n          \n          {extractionState.previewImages.length > 0 && (\n            <div className=\"preview-grid\">\n              {extractionState.previewImages.map((preview, index) => (\n                <div key={index} className=\"preview-item\">\n                  <img\n                    src={`data:image/jpeg;base64,${preview.image_base64}`}\n                    alt={`ROI ${index + 1}`}\n                    className=\"preview-image\"\n                  />\n                  <div className=\"preview-filename\">{preview.filename.substring(13)}</div>\n                </div>\n              ))}\n            </div>\n          )}\n          \n          <p className=\"preview-note\">\n            📝 Showing sample extracted ROI regions. These cropped areas will be used for anomaly detection.\n          </p>\n        </div>\n      )}\n\n      {/* Info */}\n      <div className=\"step-info\">\n        <h5>ℹ️ About ROI Extraction</h5>\n        <div className=\"info-points\">\n          <div className=\"info-point\">\n            <span className=\"point-icon\">🎯</span>\n            <span className=\"point-text\">Identifies component regions using GroundingDINO</span>\n          </div>\n          <div className=\"info-point\">\n            <span className=\"point-icon\">✂️</span>\n            <span className=\"point-text\">Crops out noise (trays, bolts, QR codes)</span>\n          </div>\n          <div className=\"info-point\">\n            <span className=\"point-icon\">📏</span>\n            <span className=\"point-text\">Adds padding for better anomaly detection</span>\n          </div>\n          <div className=\"info-point\">\n            <span className=\"point-icon\">🎯</span>\n            <span className=\"point-text\">Prepares clean data for next steps</span>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default ROIExtractionStep;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}