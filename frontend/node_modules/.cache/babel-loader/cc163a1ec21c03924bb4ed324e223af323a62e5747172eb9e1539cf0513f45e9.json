{"ast":null,"code":"var _jsxFileName = \"/Users/truonghaidang/Desktop/open-trainer/frontend/src/components/Annotate.js\";\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Annotate() {\n  const [files, setFiles] = useState([]);\n  const [previews, setPreviews] = useState([]);\n  const [annotatedResults, setAnnotatedResults] = useState([]);\n  const [annotationType, setAnnotationType] = useState('detection');\n  const [isLoading, setIsLoading] = useState(false);\n  const [processingProgress, setProcessingProgress] = useState({\n    current: 0,\n    total: 0\n  });\n  const [batchId, setBatchId] = useState(null);\n\n  // GroundingDINO specific state\n  const [groundingDinoPrompts, setGroundingDinoPrompts] = useState('scratch, dent, dirt');\n  const [confidenceThreshold, setConfidenceThreshold] = useState(0.3);\n  const [groundingDinoAvailable, setGroundingDinoAvailable] = useState(false);\n\n  // Guardrail (Anomaly Detection + Classification) specific state\n  const [guardrailModelFile, setGuardrailModelFile] = useState(null);\n  const [guardrailPrompts, setGuardrailPrompts] = useState('scratch, dent, dirt');\n  const [guardrailConfidenceThreshold, setGuardrailConfidenceThreshold] = useState(0.3);\n\n  // LLM+CLIP Anomaly Detection specific state\n  const [llmClipAvailable, setLlmClipAvailable] = useState(false);\n  const [componentType, setComponentType] = useState('metal plate');\n  const [componentContext, setComponentContext] = useState('automotive');\n  const [useLLM, setUseLLM] = useState(true);\n  const [similarityThreshold, setSimilarityThreshold] = useState(0.7);\n\n  // Check GroundingDINO and LLM+CLIP availability on component mount\n  useEffect(() => {\n    checkGroundingDinoStatus();\n    checkLlmClipStatus();\n  }, []);\n  const checkGroundingDinoStatus = async () => {\n    try {\n      console.log('🔍 Checking GroundingDINO status...');\n      const response = await fetch('/grounding-dino-status');\n      console.log('📡 Response status:', response.status);\n      const data = await response.json();\n      console.log('📊 Response data:', data);\n      setGroundingDinoAvailable(data.available);\n      console.log('✅ GroundingDINO available set to:', data.available);\n    } catch (error) {\n      console.error('❌ Error checking GroundingDINO status:', error);\n      setGroundingDinoAvailable(false);\n    }\n  };\n  const checkLlmClipStatus = async () => {\n    try {\n      console.log('🧠 Checking LLM+CLIP status...');\n      const response = await fetch('/llm-clip-status');\n      const data = await response.json();\n      console.log('📊 LLM+CLIP status:', data);\n      setLlmClipAvailable(data.service_available);\n      console.log('✅ LLM+CLIP available set to:', data.service_available);\n    } catch (error) {\n      console.error('❌ Error checking LLM+CLIP status:', error);\n      setLlmClipAvailable(false);\n    }\n  };\n  const handleFileChange = e => {\n    const selectedFiles = Array.from(e.target.files);\n    setFiles(selectedFiles);\n\n    // Create previews for all selected files\n    const newPreviews = selectedFiles.map(file => ({\n      file,\n      url: URL.createObjectURL(file),\n      name: file.name\n    }));\n    setPreviews(newPreviews);\n    setAnnotatedResults([]); // Reset results when new files are selected\n  };\n  const handleAnnotate = async () => {\n    if (files.length === 0) {\n      alert(\"Please select at least one file first.\");\n      return;\n    }\n    setIsLoading(true);\n    setProcessingProgress({\n      current: 0,\n      total: files.length\n    });\n    setAnnotatedResults([]);\n\n    // Generate unique batch ID\n    const newBatchId = `batch_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n    setBatchId(newBatchId);\n    if (annotationType === 'grounding-dino-only') {\n      await handleGroundingDinoOnlyAnnotation(newBatchId);\n    } else if (annotationType === 'grounding-dino-sam2') {\n      await handleGroundingDinoSAM2Annotation(newBatchId);\n    } else if (annotationType === 'guardrail') {\n      await handleGuardrailAnnotation(newBatchId);\n    } else if (annotationType === 'llm-clip-anomaly') {\n      await handleLlmClipAnomalyAnnotation(newBatchId);\n    } else {\n      await handleTraditionalAnnotation(newBatchId);\n    }\n  };\n  const handleGroundingDinoSAM2Annotation = async newBatchId => {\n    const results = [];\n    try {\n      for (let i = 0; i < files.length; i++) {\n        const file = files[i];\n        setProcessingProgress({\n          current: i + 1,\n          total: files.length\n        });\n        const formData = new FormData();\n        formData.append('file', file);\n        formData.append('prompts', groundingDinoPrompts);\n        formData.append('confidence_threshold', confidenceThreshold);\n        formData.append('batch_id', newBatchId);\n        try {\n          const response = await fetch('/grounding-dino-annotate', {\n            method: 'POST',\n            body: formData\n          });\n          if (response.ok) {\n            const result = await response.json();\n            results.push({\n              originalName: file.name,\n              success: result.status === 'success',\n              annotatedUrl: result.status === 'success' ? `data:image/jpeg;base64,${result.image_base64}` : null,\n              error: result.status !== 'success' ? result.message : null,\n              detections: result.detections || [],\n              total_detections: result.total_detections || 0,\n              yolo_annotations: result.yolo_annotations\n            });\n          } else {\n            results.push({\n              originalName: file.name,\n              success: false,\n              error: \"GroundingDINO annotation failed\"\n            });\n          }\n        } catch (error) {\n          console.error(`Error processing ${file.name}:`, error);\n          results.push({\n            originalName: file.name,\n            success: false,\n            error: \"Processing error\"\n          });\n        }\n      }\n      setAnnotatedResults(results);\n    } catch (error) {\n      console.error('GroundingDINO annotation error:', error);\n      alert('GroundingDINO annotation failed. Please try again.');\n    } finally {\n      setIsLoading(false);\n      setProcessingProgress({\n        current: 0,\n        total: 0\n      });\n    }\n  };\n  const handleGroundingDinoOnlyAnnotation = async newBatchId => {\n    const results = [];\n    try {\n      for (let i = 0; i < files.length; i++) {\n        const file = files[i];\n        setProcessingProgress({\n          current: i + 1,\n          total: files.length\n        });\n        const formData = new FormData();\n        formData.append('file', file);\n        formData.append('prompts', groundingDinoPrompts);\n        formData.append('confidence_threshold', confidenceThreshold);\n        formData.append('batch_id', newBatchId);\n        try {\n          const response = await fetch('/grounding-dino-only-annotate', {\n            method: 'POST',\n            body: formData\n          });\n          if (response.ok) {\n            const result = await response.json();\n            results.push({\n              originalName: file.name,\n              success: result.status === 'success',\n              annotatedUrl: result.status === 'success' ? `data:image/jpeg;base64,${result.image_base64}` : null,\n              error: result.status !== 'success' ? result.message : null,\n              detections: result.detections || [],\n              total_detections: result.total_detections || 0,\n              yolo_annotations: result.yolo_annotations\n            });\n          } else {\n            results.push({\n              originalName: file.name,\n              success: false,\n              error: \"GroundingDINO annotation failed\"\n            });\n          }\n        } catch (error) {\n          console.error(`Error processing ${file.name}:`, error);\n          results.push({\n            originalName: file.name,\n            success: false,\n            error: \"Processing error\"\n          });\n        }\n      }\n      setAnnotatedResults(results);\n    } catch (error) {\n      console.error('GroundingDINO annotation error:', error);\n      alert('GroundingDINO annotation failed. Please try again.');\n    } finally {\n      setIsLoading(false);\n      setProcessingProgress({\n        current: 0,\n        total: 0\n      });\n    }\n  };\n  const handleGuardrailAnnotation = async newBatchId => {\n    if (!guardrailModelFile) {\n      alert(\"Please upload your trained anomaly model file (.ckpt).\");\n      setIsLoading(false);\n      return;\n    }\n    const results = [];\n    try {\n      for (let i = 0; i < files.length; i++) {\n        const file = files[i];\n        setProcessingProgress({\n          current: i + 1,\n          total: files.length\n        });\n        const formData = new FormData();\n        formData.append(\"file\", file);\n        formData.append(\"model_file\", guardrailModelFile);\n        formData.append(\"prompts\", guardrailPrompts);\n        formData.append(\"confidence_threshold\", guardrailConfidenceThreshold);\n        try {\n          const response = await fetch('/annotate-with-guardrail', {\n            method: 'POST',\n            body: formData\n          });\n          if (response.ok) {\n            const data = await response.json();\n            results.push({\n              originalName: file.name,\n              success: data.status === 'success',\n              annotatedUrl: data.status === 'success' && data.annotated_image ? `data:image/jpeg;base64,${btoa(String.fromCharCode(...new Uint8Array(data.annotated_image)))}` : null,\n              error: data.status !== 'success' ? data.message : null,\n              detections: data.detections || [],\n              total_detections: data.detections ? data.detections.length : 0\n            });\n          } else {\n            results.push({\n              originalName: file.name,\n              success: false,\n              error: \"Guardrail annotation failed\"\n            });\n          }\n        } catch (error) {\n          console.error(`Error processing ${file.name}:`, error);\n          results.push({\n            originalName: file.name,\n            success: false,\n            error: \"Processing error\"\n          });\n        }\n      }\n      setAnnotatedResults(results);\n    } catch (error) {\n      console.error('Guardrail annotation error:', error);\n      alert('Guardrail annotation failed. Please try again.');\n    } finally {\n      setIsLoading(false);\n      setProcessingProgress({\n        current: 0,\n        total: 0\n      });\n    }\n  };\n  const handleLlmClipAnomalyAnnotation = async newBatchId => {\n    const results = [];\n    try {\n      for (let i = 0; i < files.length; i++) {\n        const file = files[i];\n        setProcessingProgress({\n          current: i + 1,\n          total: files.length\n        });\n        const formData = new FormData();\n        formData.append('file', file);\n        formData.append('component_type', componentType);\n        formData.append('context', componentContext);\n        formData.append('confidence_threshold', confidenceThreshold);\n        formData.append('similarity_threshold', similarityThreshold);\n        formData.append('use_llm', useLLM);\n        formData.append('batch_id', newBatchId);\n        try {\n          const response = await fetch('/llm-clip-anomaly-detect', {\n            method: 'POST',\n            body: formData\n          });\n          if (response.ok) {\n            const result = await response.json();\n            results.push({\n              originalName: file.name,\n              success: result.status === 'success',\n              annotatedUrl: result.status === 'success' ? `data:image/jpeg;base64,${result.image_base64}` : null,\n              error: result.status !== 'success' ? result.message : null,\n              anomaly_regions: result.anomaly_regions_detected || 0,\n              total_regions: result.total_regions_detected || 0,\n              anomaly_rate: result.anomaly_rate || 0,\n              detections: result.detections || [],\n              component_type: result.component_type,\n              descriptions_used: result.descriptions_used\n            });\n          } else {\n            results.push({\n              originalName: file.name,\n              success: false,\n              error: \"LLM+CLIP anomaly detection failed\"\n            });\n          }\n        } catch (error) {\n          console.error(`Error processing ${file.name}:`, error);\n          results.push({\n            originalName: file.name,\n            success: false,\n            error: \"Processing error\"\n          });\n        }\n      }\n      setAnnotatedResults(results);\n    } catch (error) {\n      console.error('LLM+CLIP annotation error:', error);\n      alert('LLM+CLIP annotation failed. Please try again.');\n    } finally {\n      setIsLoading(false);\n      setProcessingProgress({\n        current: 0,\n        total: 0\n      });\n    }\n  };\n  const handleTraditionalAnnotation = async newBatchId => {\n    const endpointMap = {\n      'detection': '/pre-annotate-detect',\n      'segmentation': '/pre-annotate-segment',\n      'sam2-detection': '/pre-annotate-sam2-detect',\n      'sam2-segmentation': '/pre-annotate-sam2-segment'\n    };\n    const endpoint = endpointMap[annotationType] || '/pre-annotate-detect';\n    const results = [];\n    try {\n      for (let i = 0; i < files.length; i++) {\n        const file = files[i];\n        setProcessingProgress({\n          current: i + 1,\n          total: files.length\n        });\n        const formData = new FormData();\n        formData.append(\"file\", file);\n        formData.append(\"batch_id\", newBatchId); // Add batch ID for caching\n\n        try {\n          const response = await fetch(endpoint, {\n            method: \"POST\",\n            body: formData\n          });\n          if (response.ok) {\n            const imageBlob = await response.blob();\n            results.push({\n              originalName: file.name,\n              annotatedUrl: URL.createObjectURL(imageBlob),\n              success: true\n            });\n          } else {\n            results.push({\n              originalName: file.name,\n              success: false,\n              error: `${annotationType} annotation failed`\n            });\n          }\n        } catch (error) {\n          console.error(`Error processing ${file.name}:`, error);\n          results.push({\n            originalName: file.name,\n            success: false,\n            error: \"Processing error\"\n          });\n        }\n      }\n      setAnnotatedResults(results);\n    } catch (error) {\n      console.error(\"Error during batch annotation:\", error);\n      alert(\"An error occurred during batch annotation.\");\n    } finally {\n      setIsLoading(false);\n      setProcessingProgress({\n        current: 0,\n        total: 0\n      });\n    }\n  };\n  const handleDownloadZip = async () => {\n    const successfulResults = annotatedResults.filter(result => result.success);\n    if (successfulResults.length === 0) {\n      alert(\"No successful annotations to download.\");\n      return;\n    }\n    try {\n      const response = await fetch(`/download-batch-zip/${batchId}`, {\n        method: 'POST'\n      });\n      if (response.ok) {\n        const blob = await response.blob();\n        const url = window.URL.createObjectURL(blob);\n        const a = document.createElement('a');\n        a.style.display = 'none';\n        a.href = url;\n        a.download = `annotated_${annotationType}_batch.zip`;\n        document.body.appendChild(a);\n        a.click();\n        window.URL.revokeObjectURL(url);\n        document.body.removeChild(a);\n      } else {\n        throw new Error('Failed to download zip file');\n      }\n    } catch (error) {\n      console.error('Error downloading zip:', error);\n      alert('Failed to download zip file. Please try again.');\n    }\n  };\n  const handleExportYoloDataset = async () => {\n    const groundingDinoResults = annotatedResults.filter(result => result.success && result.yolo_annotations);\n    if (groundingDinoResults.length === 0) {\n      alert(\"No GroundingDINO results to export.\");\n      return;\n    }\n    try {\n      const formData = new FormData();\n      formData.append('annotation_results', JSON.stringify(groundingDinoResults));\n      formData.append('dataset_name', `grounding_dino_${Date.now()}`);\n      const response = await fetch('/grounding-dino-export-yolo', {\n        method: 'POST',\n        body: formData\n      });\n      if (response.ok) {\n        const data = await response.json();\n        alert(`YOLO dataset exported successfully: ${data.dataset_name}`);\n      } else {\n        throw new Error('Failed to export dataset');\n      }\n    } catch (error) {\n      console.error('Error exporting dataset:', error);\n      alert('Failed to export YOLO dataset.');\n    }\n  };\n  const renderAnnotationTypeSelector = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginBottom: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"\\uD83C\\uDFAF Annotation Method\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 476,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'grid',\n        gridTemplateColumns: 'repeat(auto-fit, minmax(200px, 1fr))',\n        gap: '10px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        style: {\n          display: 'flex',\n          alignItems: 'center',\n          padding: '10px',\n          border: '2px solid #e2e8f0',\n          borderRadius: '8px',\n          backgroundColor: annotationType === 'detection' ? '#dbeafe' : 'white',\n          borderColor: annotationType === 'detection' ? '#3b82f6' : '#e2e8f0',\n          cursor: 'pointer'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          value: \"detection\",\n          checked: annotationType === 'detection',\n          onChange: e => setAnnotationType(e.target.value),\n          style: {\n            marginRight: '8px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 488,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"\\uD83D\\uDCE6 OpenCV Detection\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 495,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 478,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        style: {\n          display: 'flex',\n          alignItems: 'center',\n          padding: '10px',\n          border: '2px solid #e2e8f0',\n          borderRadius: '8px',\n          backgroundColor: annotationType === 'segmentation' ? '#dbeafe' : 'white',\n          borderColor: annotationType === 'segmentation' ? '#3b82f6' : '#e2e8f0',\n          cursor: 'pointer'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          value: \"segmentation\",\n          checked: annotationType === 'segmentation',\n          onChange: e => setAnnotationType(e.target.value),\n          style: {\n            marginRight: '8px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 508,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"\\u2702\\uFE0F OpenCV Segmentation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 515,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 498,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        style: {\n          display: 'flex',\n          alignItems: 'center',\n          padding: '10px',\n          border: '2px solid #e2e8f0',\n          borderRadius: '8px',\n          backgroundColor: annotationType === 'sam2-detection' ? '#dbeafe' : 'white',\n          borderColor: annotationType === 'sam2-detection' ? '#3b82f6' : '#e2e8f0',\n          cursor: 'pointer'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          value: \"sam2-detection\",\n          checked: annotationType === 'sam2-detection',\n          onChange: e => setAnnotationType(e.target.value),\n          style: {\n            marginRight: '8px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 528,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"\\uD83C\\uDFAF SAM2 Detection\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 535,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 518,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        style: {\n          display: 'flex',\n          alignItems: 'center',\n          padding: '10px',\n          border: '2px solid #e2e8f0',\n          borderRadius: '8px',\n          backgroundColor: annotationType === 'sam2-segmentation' ? '#dbeafe' : 'white',\n          borderColor: annotationType === 'sam2-segmentation' ? '#3b82f6' : '#e2e8f0',\n          cursor: 'pointer'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          value: \"sam2-segmentation\",\n          checked: annotationType === 'sam2-segmentation',\n          onChange: e => setAnnotationType(e.target.value),\n          style: {\n            marginRight: '8px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 548,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"\\uD83D\\uDD2A SAM2 Segmentation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 555,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 538,\n        columnNumber: 17\n      }, this), groundingDinoAvailable && /*#__PURE__*/_jsxDEV(\"label\", {\n        style: {\n          display: 'flex',\n          alignItems: 'center',\n          padding: '10px',\n          border: '2px solid #10b981',\n          borderRadius: '8px',\n          backgroundColor: annotationType === 'grounding-dino-only' ? '#d1fae5' : 'white',\n          borderColor: annotationType === 'grounding-dino-only' ? '#10b981' : '#10b981',\n          cursor: 'pointer'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          value: \"grounding-dino-only\",\n          checked: annotationType === 'grounding-dino-only',\n          onChange: e => setAnnotationType(e.target.value),\n          style: {\n            marginRight: '8px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 569,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"\\u2728 GroundingDINO Only (Detection)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 576,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 559,\n        columnNumber: 21\n      }, this), groundingDinoAvailable && /*#__PURE__*/_jsxDEV(\"label\", {\n        style: {\n          display: 'flex',\n          alignItems: 'center',\n          padding: '10px',\n          border: '2px solid #7c2d12',\n          borderRadius: '8px',\n          backgroundColor: annotationType === 'grounding-dino-sam2' ? '#fed7aa' : 'white',\n          borderColor: annotationType === 'grounding-dino-sam2' ? '#7c2d12' : '#7c2d12',\n          cursor: 'pointer'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          value: \"grounding-dino-sam2\",\n          checked: annotationType === 'grounding-dino-sam2',\n          onChange: e => setAnnotationType(e.target.value),\n          style: {\n            marginRight: '8px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 591,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"\\uD83C\\uDFAD GroundingDINO + SAM2 (Detection + Segmentation)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 598,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 581,\n        columnNumber: 21\n      }, this), groundingDinoAvailable && /*#__PURE__*/_jsxDEV(\"label\", {\n        style: {\n          display: 'flex',\n          alignItems: 'center',\n          padding: '10px',\n          border: '2px solid #7c3aed',\n          borderRadius: '8px',\n          backgroundColor: annotationType === 'guardrail' ? '#ede9fe' : 'white',\n          borderColor: annotationType === 'guardrail' ? '#7c3aed' : '#7c3aed',\n          cursor: 'pointer'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          value: \"guardrail\",\n          checked: annotationType === 'guardrail',\n          onChange: e => setAnnotationType(e.target.value),\n          style: {\n            marginRight: '8px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 613,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"\\uD83D\\uDEE1\\uFE0F Guardrail (Anomaly + AI)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 620,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 603,\n        columnNumber: 21\n      }, this), llmClipAvailable && /*#__PURE__*/_jsxDEV(\"label\", {\n        style: {\n          display: 'flex',\n          alignItems: 'center',\n          padding: '10px',\n          border: '2px solid #8b5cf6',\n          borderRadius: '8px',\n          backgroundColor: annotationType === 'llm-clip-anomaly' ? '#f3e8ff' : 'white',\n          borderColor: annotationType === 'llm-clip-anomaly' ? '#8b5cf6' : '#8b5cf6',\n          cursor: 'pointer'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          value: \"llm-clip-anomaly\",\n          checked: annotationType === 'llm-clip-anomaly',\n          onChange: e => setAnnotationType(e.target.value),\n          style: {\n            marginRight: '8px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 635,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"\\uD83E\\uDDE0 LLM+CLIP Anomaly Detection\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 642,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 625,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 477,\n      columnNumber: 13\n    }, this), (!groundingDinoAvailable || !llmClipAvailable) && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '10px',\n        padding: '10px',\n        backgroundColor: '#fef3c7',\n        border: '1px solid #f59e0b',\n        borderRadius: '4px',\n        fontSize: '14px'\n      },\n      children: [!groundingDinoAvailable && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [\"\\u26A0\\uFE0F GroundingDINO not available. Please install dependencies to use AI-powered annotation.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 657,\n          columnNumber: 116\n        }, this)]\n      }, void 0, true), !llmClipAvailable && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [\"\\uD83E\\uDDE0 LLM+CLIP not available. Install transformers and torch, and set OpenAI API key.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 660,\n          columnNumber: 109\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: '8px',\n          display: 'flex',\n          gap: '5px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: checkGroundingDinoStatus,\n          style: {\n            backgroundColor: '#3b82f6',\n            color: 'white',\n            border: 'none',\n            padding: '5px 10px',\n            borderRadius: '4px',\n            cursor: 'pointer',\n            fontSize: '12px'\n          },\n          children: \"\\uD83D\\uDD04 Check GroundingDINO\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 663,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: checkLlmClipStatus,\n          style: {\n            backgroundColor: '#8b5cf6',\n            color: 'white',\n            border: 'none',\n            padding: '5px 10px',\n            borderRadius: '4px',\n            cursor: 'pointer',\n            fontSize: '12px'\n          },\n          children: \"\\uD83E\\uDDE0 Check LLM+CLIP\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 677,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 662,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 648,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 475,\n    columnNumber: 9\n  }, this);\n  const renderGroundingDinoOptions = () => {\n    if (annotationType !== 'grounding-dino-only' && annotationType !== 'grounding-dino-sam2') return null;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '20px',\n        padding: '20px',\n        backgroundColor: '#f0fdf4',\n        border: '1px solid #10b981',\n        borderRadius: '8px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        style: {\n          margin: '0 0 15px 0',\n          color: '#059669'\n        },\n        children: annotationType === 'grounding-dino-only' ? '✨ GroundingDINO Only Settings' : '🎭 GroundingDINO + SAM2 Settings'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 708,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: '15px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          style: {\n            display: 'block',\n            marginBottom: '5px',\n            fontWeight: 'bold'\n          },\n          children: \"Defect Prompts (comma-separated):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 713,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: groundingDinoPrompts,\n          onChange: e => setGroundingDinoPrompts(e.target.value),\n          placeholder: \"e.g., scratch, dent, dirt, corrosion, crack\",\n          style: {\n            width: '100%',\n            padding: '8px',\n            border: '1px solid #d1d5db',\n            borderRadius: '4px',\n            fontSize: '14px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 716,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            fontSize: '12px',\n            color: '#6b7280',\n            marginTop: '5px'\n          },\n          children: \"Describe the defects you want to detect. Be specific (e.g., \\\"scratch on metal surface\\\").\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 729,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 712,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: '15px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          style: {\n            display: 'block',\n            marginBottom: '5px',\n            fontWeight: 'bold'\n          },\n          children: [\"Confidence Threshold: \", confidenceThreshold]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 735,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"range\",\n          min: \"0.1\",\n          max: \"0.9\",\n          step: \"0.1\",\n          value: confidenceThreshold,\n          onChange: e => setConfidenceThreshold(parseFloat(e.target.value)),\n          style: {\n            width: '200px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 738,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            fontSize: '12px',\n            color: '#6b7280',\n            marginTop: '5px'\n          },\n          children: \"Lower values detect more objects but may include false positives.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 747,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 734,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 701,\n      columnNumber: 13\n    }, this);\n  };\n  const renderGuardrailOptions = () => {\n    if (annotationType !== 'guardrail') return null;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '20px',\n        padding: '20px',\n        backgroundColor: '#faf5ff',\n        border: '1px solid #7c3aed',\n        borderRadius: '8px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        style: {\n          margin: '0 0 15px 0',\n          color: '#7c3aed'\n        },\n        children: \"\\uD83D\\uDEE1\\uFE0F Guardrail Settings (Anomaly Detection + AI Classification)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 766,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: '15px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          style: {\n            display: 'block',\n            marginBottom: '5px',\n            fontWeight: 'bold'\n          },\n          children: \"Upload Anomaly Model File:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 770,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          accept: \".ckpt,.pth,.pt\",\n          onChange: e => setGuardrailModelFile(e.target.files[0]),\n          style: {\n            width: '100%',\n            padding: '8px',\n            border: '1px solid #d1d5db',\n            borderRadius: '4px',\n            fontSize: '14px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 773,\n          columnNumber: 21\n        }, this), guardrailModelFile && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            fontSize: '12px',\n            color: '#059669',\n            marginTop: '5px'\n          },\n          children: [\"\\u2705 Selected: \", guardrailModelFile.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 786,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            fontSize: '12px',\n            color: '#6b7280',\n            marginTop: '5px'\n          },\n          children: [\"Upload your trained PatchCore anomaly detection model (.ckpt file).\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 792,\n            columnNumber: 25\n          }, this), \"\\uD83D\\uDCA1 Train one in the \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Train\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 792,\n            columnNumber: 51\n          }, this), \" page first!\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 790,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 769,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: '15px',\n          padding: '10px',\n          backgroundColor: '#e0e7ff',\n          border: '1px solid #6366f1',\n          borderRadius: '6px'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            fontSize: '14px',\n            color: '#4f46e5'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"\\uD83D\\uDCDA Need to train an anomaly model?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 805,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 806,\n            columnNumber: 25\n          }, this), \"Go to the \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Train\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 806,\n            columnNumber: 41\n          }, this), \" page to create a new anomaly detection model using defect-free images.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 804,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 797,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: '15px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          style: {\n            display: 'block',\n            marginBottom: '5px',\n            fontWeight: 'bold'\n          },\n          children: \"Classification Prompts (comma-separated):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 812,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: guardrailPrompts,\n          onChange: e => setGuardrailPrompts(e.target.value),\n          placeholder: \"e.g., scratch, dent, dirt, corrosion, crack\",\n          style: {\n            width: '100%',\n            padding: '8px',\n            border: '1px solid #d1d5db',\n            borderRadius: '4px',\n            fontSize: '14px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 815,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            fontSize: '12px',\n            color: '#6b7280',\n            marginTop: '5px'\n          },\n          children: \"After detecting anomalies, the system will use GroundingDINO to classify them with these prompts.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 828,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 811,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: '15px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          style: {\n            display: 'block',\n            marginBottom: '5px',\n            fontWeight: 'bold'\n          },\n          children: [\"Classification Confidence Threshold: \", guardrailConfidenceThreshold]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 835,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"range\",\n          min: \"0.1\",\n          max: \"0.9\",\n          step: \"0.1\",\n          value: guardrailConfidenceThreshold,\n          onChange: e => setGuardrailConfidenceThreshold(parseFloat(e.target.value)),\n          style: {\n            width: '200px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 838,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            fontSize: '12px',\n            color: '#6b7280',\n            marginTop: '5px'\n          },\n          children: \"Confidence threshold for GroundingDINO classification of detected anomalies.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 847,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 834,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          padding: '10px',\n          backgroundColor: '#e0e7ff',\n          border: '1px solid #3b82f6',\n          borderRadius: '4px',\n          fontSize: '12px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"How Guardrail Works:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 860,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n          style: {\n            margin: '5px 0',\n            paddingLeft: '20px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Anomaly Detection:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 862,\n              columnNumber: 29\n            }, this), \" PatchCore detects deviations from \\\"normal\\\" (high sensitivity)\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 862,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Classification:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 863,\n              columnNumber: 29\n            }, this), \" GroundingDINO classifies detected anomalies using your prompts\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 863,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Result:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 864,\n              columnNumber: 29\n            }, this), \" Only real defects are labeled, with minimal false positives\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 864,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 861,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 853,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 759,\n      columnNumber: 13\n    }, this);\n  };\n  const renderLlmClipOptions = () => {\n    if (annotationType !== 'llm-clip-anomaly') return null;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '20px',\n        padding: '20px',\n        backgroundColor: '#f8fafc',\n        border: '1px solid #8b5cf6',\n        borderRadius: '8px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        style: {\n          margin: '0 0 15px 0',\n          color: '#8b5cf6'\n        },\n        children: \"\\uD83E\\uDDE0 LLM+CLIP Anomaly Detection Settings\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 882,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: '15px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          style: {\n            display: 'block',\n            marginBottom: '5px',\n            fontWeight: 'bold'\n          },\n          children: \"Component Type:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 886,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: componentType,\n          onChange: e => setComponentType(e.target.value),\n          placeholder: \"e.g., metal plate, circuit board, automotive part\",\n          style: {\n            width: '100%',\n            padding: '8px',\n            border: '1px solid #d1d5db',\n            borderRadius: '4px',\n            fontSize: '14px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 889,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            fontSize: '12px',\n            color: '#6b7280',\n            marginTop: '5px'\n          },\n          children: \"What type of component/object are you analyzing for defects?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 902,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 885,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: '15px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          style: {\n            display: 'block',\n            marginBottom: '5px',\n            fontWeight: 'bold'\n          },\n          children: \"Context/Industry:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 909,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: componentContext,\n          onChange: e => setComponentContext(e.target.value),\n          placeholder: \"e.g., automotive, electronics, manufacturing\",\n          style: {\n            width: '100%',\n            padding: '8px',\n            border: '1px solid #d1d5db',\n            borderRadius: '4px',\n            fontSize: '14px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 912,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            fontSize: '12px',\n            color: '#6b7280',\n            marginTop: '5px'\n          },\n          children: \"Additional context to help generate better anomaly descriptions.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 925,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 908,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: '15px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          style: {\n            display: 'flex',\n            alignItems: 'center'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: useLLM,\n            onChange: e => setUseLLM(e.target.checked),\n            style: {\n              marginRight: '8px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 933,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              fontWeight: 'bold'\n            },\n            children: \"Use LLM for Description Generation\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 939,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 932,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            fontSize: '12px',\n            color: '#6b7280',\n            marginTop: '5px'\n          },\n          children: useLLM ? \"🤖 LLM will generate detailed anomaly descriptions (requires OpenAI API key)\" : \"📋 Use predefined template descriptions (faster, no API key needed)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 941,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 931,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'grid',\n          gridTemplateColumns: '1fr 1fr',\n          gap: '15px',\n          marginBottom: '15px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            style: {\n              display: 'block',\n              marginBottom: '5px',\n              fontWeight: 'bold'\n            },\n            children: [\"Detection Confidence: \", confidenceThreshold]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 952,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"range\",\n            min: \"0.1\",\n            max: \"0.9\",\n            step: \"0.1\",\n            value: confidenceThreshold,\n            onChange: e => setConfidenceThreshold(parseFloat(e.target.value)),\n            style: {\n              width: '100%'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 955,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              fontSize: '12px',\n              color: '#6b7280'\n            },\n            children: \"GroundingDINO component detection threshold\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 964,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 951,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            style: {\n              display: 'block',\n              marginBottom: '5px',\n              fontWeight: 'bold'\n            },\n            children: [\"Similarity Threshold: \", similarityThreshold]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 970,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"range\",\n            min: \"0.3\",\n            max: \"0.9\",\n            step: \"0.1\",\n            value: similarityThreshold,\n            onChange: e => setSimilarityThreshold(parseFloat(e.target.value)),\n            style: {\n              width: '100%'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 973,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              fontSize: '12px',\n              color: '#6b7280'\n            },\n            children: \"CLIP similarity threshold for anomaly detection\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 982,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 969,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 950,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          padding: '10px',\n          backgroundColor: '#e0e7ff',\n          border: '1px solid #8b5cf6',\n          borderRadius: '4px',\n          fontSize: '12px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"How LLM+CLIP Works:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 996,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n          style: {\n            margin: '5px 0',\n            paddingLeft: '20px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"LLM Generation:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 998,\n              columnNumber: 29\n            }, this), \" Creates detailed normal/anomaly descriptions for your component\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 998,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Component Localization:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 999,\n              columnNumber: 29\n            }, this), \" GroundingDINO finds component instances in the image\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 999,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"CLIP Analysis:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1000,\n              columnNumber: 29\n            }, this), \" Measures semantic similarity between image regions and descriptions\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1000,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Anomaly Detection:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1001,\n              columnNumber: 29\n            }, this), \" Regions with low similarity to normal descriptions are flagged as anomalies\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1001,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 997,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 989,\n        columnNumber: 17\n      }, this), useLLM && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: '10px',\n          padding: '8px',\n          backgroundColor: '#fef3c7',\n          border: '1px solid #f59e0b',\n          borderRadius: '4px',\n          fontSize: '12px'\n        },\n        children: [\"\\uD83D\\uDCA1 \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Note:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1015,\n          columnNumber: 28\n        }, this), \" LLM mode requires an OpenAI API key to be set in the backend environment.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1007,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 875,\n      columnNumber: 13\n    }, this);\n  };\n  const renderResults = () => {\n    if (annotatedResults.length === 0) return null;\n    const successfulResults = annotatedResults.filter(result => result.success);\n    const failedResults = annotatedResults.filter(result => !result.success);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '30px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          justifyContent: 'space-between',\n          alignItems: 'center',\n          marginBottom: '20px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"\\uD83D\\uDCCA Annotation Results\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1031,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            gap: '10px'\n          },\n          children: [successfulResults.length > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleDownloadZip,\n            style: {\n              backgroundColor: '#059669',\n              color: 'white',\n              padding: '8px 16px',\n              border: 'none',\n              borderRadius: '4px',\n              cursor: 'pointer'\n            },\n            children: \"\\uD83D\\uDCE5 Download ZIP\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1034,\n            columnNumber: 29\n          }, this), (annotationType === 'grounding-dino-only' || annotationType === 'grounding-dino-sam2') && successfulResults.some(r => r.yolo_annotations) && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleExportYoloDataset,\n            style: {\n              backgroundColor: '#7c3aed',\n              color: 'white',\n              padding: '8px 16px',\n              border: 'none',\n              borderRadius: '4px',\n              cursor: 'pointer'\n            },\n            children: \"\\uD83D\\uDCE6 Export YOLO Dataset\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1049,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1032,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1030,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'grid',\n          gridTemplateColumns: 'repeat(auto-fit, minmax(300px, 1fr))',\n          gap: '20px',\n          marginBottom: '20px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            padding: '15px',\n            backgroundColor: '#dcfce7',\n            border: '1px solid #86efac',\n            borderRadius: '8px'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              fontSize: '18px',\n              fontWeight: 'bold',\n              color: '#059669'\n            },\n            children: [\"\\u2705 Successful: \", successfulResults.length]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1078,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1072,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            padding: '15px',\n            backgroundColor: '#fee2e2',\n            border: '1px solid #fca5a5',\n            borderRadius: '8px'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              fontSize: '18px',\n              fontWeight: 'bold',\n              color: '#dc2626'\n            },\n            children: [\"\\u274C Failed: \", failedResults.length]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1088,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1082,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1066,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'grid',\n          gridTemplateColumns: 'repeat(auto-fit, minmax(400px, 1fr))',\n          gap: '20px'\n        },\n        children: annotatedResults.map((result, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            border: '1px solid #e2e8f0',\n            borderRadius: '8px',\n            padding: '15px',\n            backgroundColor: result.success ? '#f9fafb' : '#fef2f2'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            style: {\n              margin: '0 0 10px 0'\n            },\n            children: result.originalName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1102,\n            columnNumber: 29\n          }, this), result.success ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: result.annotatedUrl,\n              alt: `Annotated ${result.originalName}`,\n              style: {\n                width: '100%',\n                borderRadius: '4px',\n                marginBottom: '10px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1106,\n              columnNumber: 37\n            }, this), result.anomaly_regions !== undefined && /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                fontSize: '14px',\n                color: '#6b7280',\n                marginBottom: '10px'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Anomaly Analysis:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1115,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  marginLeft: '10px',\n                  fontSize: '12px'\n                },\n                children: [\"\\u2022 Component: \", result.component_type]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1116,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  marginLeft: '10px',\n                  fontSize: '12px'\n                },\n                children: [\"\\u2022 Regions analyzed: \", result.total_regions]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1119,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  marginLeft: '10px',\n                  fontSize: '12px'\n                },\n                children: [\"\\u2022 Anomalies found: \", result.anomaly_regions]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1122,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  marginLeft: '10px',\n                  fontSize: '12px'\n                },\n                children: [\"\\u2022 Anomaly rate: \", (result.anomaly_rate * 100).toFixed(1), \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1125,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1114,\n              columnNumber: 41\n            }, this), result.detections && result.anomaly_regions === undefined && /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                fontSize: '14px',\n                color: '#6b7280'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Detections:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1134,\n                columnNumber: 45\n              }, this), \" \", result.total_detections || result.detections.length, result.detections.map((detection, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  marginLeft: '10px',\n                  fontSize: '12px'\n                },\n                children: [\"\\u2022 \", detection.class, \": \", (detection.confidence * 100).toFixed(1), \"%\"]\n              }, idx, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1136,\n                columnNumber: 49\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1133,\n              columnNumber: 41\n            }, this), result.detections && result.anomaly_regions !== undefined && result.detections.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                fontSize: '14px',\n                color: '#6b7280'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Anomaly Details:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1146,\n                columnNumber: 45\n              }, this), result.detections.map((detection, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  marginLeft: '10px',\n                  fontSize: '12px'\n                },\n                children: [\"\\u2022 Region \", detection.region_index + 1, \": \", detection.is_anomaly ? '🔴 ANOMALY' : '🟢 NORMAL', detection.is_anomaly && ` (${detection.anomaly_type})`]\n              }, idx, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1148,\n                columnNumber: 49\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1145,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1105,\n            columnNumber: 33\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              color: '#dc2626'\n            },\n            children: [\"Error: \", result.error]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1157,\n            columnNumber: 33\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1096,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1094,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1029,\n      columnNumber: 13\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '20px',\n      maxWidth: '1200px',\n      margin: '0 auto'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uD83C\\uDFF7\\uFE0F Image Annotation\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1170,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        style: {\n          display: 'block',\n          marginBottom: '10px',\n          fontSize: '16px',\n          fontWeight: 'bold'\n        },\n        children: \"\\uD83D\\uDCC1 Select Images:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1173,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        multiple: true,\n        accept: \"image/*\",\n        onChange: handleFileChange,\n        style: {\n          padding: '10px',\n          border: '2px dashed #d1d5db',\n          borderRadius: '8px',\n          width: '100%',\n          cursor: 'pointer'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1176,\n        columnNumber: 17\n      }, this), files.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: '10px',\n          fontSize: '14px',\n          color: '#059669'\n        },\n        children: [\"\\u2705 \", files.length, \" image(s) selected\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1190,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1172,\n      columnNumber: 13\n    }, this), renderAnnotationTypeSelector(), renderGroundingDinoOptions(), renderGuardrailOptions(), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '30px'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAnnotate,\n        disabled: files.length === 0 || isLoading,\n        style: {\n          backgroundColor: files.length === 0 || isLoading ? '#9ca3af' : '#1e3a8a',\n          color: 'white',\n          padding: '12px 24px',\n          border: 'none',\n          borderRadius: '8px',\n          fontSize: '16px',\n          cursor: files.length === 0 || isLoading ? 'not-allowed' : 'pointer'\n        },\n        children: isLoading ? `🔄 Processing... (${processingProgress.current}/${processingProgress.total})` : '🚀 Start Annotation'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1201,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1200,\n      columnNumber: 13\n    }, this), renderResults()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 1169,\n    columnNumber: 9\n  }, this);\n}\nexport default Annotate;","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","Annotate","files","setFiles","previews","setPreviews","annotatedResults","setAnnotatedResults","annotationType","setAnnotationType","isLoading","setIsLoading","processingProgress","setProcessingProgress","current","total","batchId","setBatchId","groundingDinoPrompts","setGroundingDinoPrompts","confidenceThreshold","setConfidenceThreshold","groundingDinoAvailable","setGroundingDinoAvailable","guardrailModelFile","setGuardrailModelFile","guardrailPrompts","setGuardrailPrompts","guardrailConfidenceThreshold","setGuardrailConfidenceThreshold","llmClipAvailable","setLlmClipAvailable","componentType","setComponentType","componentContext","setComponentContext","useLLM","setUseLLM","similarityThreshold","setSimilarityThreshold","checkGroundingDinoStatus","checkLlmClipStatus","console","log","response","fetch","status","data","json","available","error","service_available","handleFileChange","e","selectedFiles","Array","from","target","newPreviews","map","file","url","URL","createObjectURL","name","handleAnnotate","length","alert","newBatchId","Date","now","Math","random","toString","substr","handleGroundingDinoOnlyAnnotation","handleGroundingDinoSAM2Annotation","handleGuardrailAnnotation","handleLlmClipAnomalyAnnotation","handleTraditionalAnnotation","results","i","formData","FormData","append","method","body","ok","result","push","originalName","success","annotatedUrl","image_base64","message","detections","total_detections","yolo_annotations","annotated_image","btoa","String","fromCharCode","Uint8Array","anomaly_regions","anomaly_regions_detected","total_regions","total_regions_detected","anomaly_rate","component_type","descriptions_used","endpointMap","endpoint","imageBlob","blob","handleDownloadZip","successfulResults","filter","window","a","document","createElement","style","display","href","download","appendChild","click","revokeObjectURL","removeChild","Error","handleExportYoloDataset","groundingDinoResults","JSON","stringify","dataset_name","renderAnnotationTypeSelector","marginBottom","children","fileName","_jsxFileName","lineNumber","columnNumber","gridTemplateColumns","gap","alignItems","padding","border","borderRadius","backgroundColor","borderColor","cursor","type","value","checked","onChange","marginRight","marginTop","fontSize","onClick","color","renderGroundingDinoOptions","margin","fontWeight","placeholder","width","min","max","step","parseFloat","renderGuardrailOptions","accept","paddingLeft","renderLlmClipOptions","renderResults","failedResults","justifyContent","some","r","index","src","alt","undefined","marginLeft","toFixed","detection","idx","class","confidence","region_index","is_anomaly","anomaly_type","maxWidth","multiple","disabled"],"sources":["/Users/truonghaidang/Desktop/open-trainer/frontend/src/components/Annotate.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nfunction Annotate() {\n    const [files, setFiles] = useState([]);\n    const [previews, setPreviews] = useState([]);\n    const [annotatedResults, setAnnotatedResults] = useState([]);\n    const [annotationType, setAnnotationType] = useState('detection');\n    const [isLoading, setIsLoading] = useState(false);\n    const [processingProgress, setProcessingProgress] = useState({ current: 0, total: 0 });\n    const [batchId, setBatchId] = useState(null);\n    \n    // GroundingDINO specific state\n    const [groundingDinoPrompts, setGroundingDinoPrompts] = useState('scratch, dent, dirt');\n    const [confidenceThreshold, setConfidenceThreshold] = useState(0.3);\n    const [groundingDinoAvailable, setGroundingDinoAvailable] = useState(false);\n\n    // Guardrail (Anomaly Detection + Classification) specific state\n    const [guardrailModelFile, setGuardrailModelFile] = useState(null);\n    const [guardrailPrompts, setGuardrailPrompts] = useState('scratch, dent, dirt');\n    const [guardrailConfidenceThreshold, setGuardrailConfidenceThreshold] = useState(0.3);\n\n    // LLM+CLIP Anomaly Detection specific state\n    const [llmClipAvailable, setLlmClipAvailable] = useState(false);\n    const [componentType, setComponentType] = useState('metal plate');\n    const [componentContext, setComponentContext] = useState('automotive');\n    const [useLLM, setUseLLM] = useState(true);\n    const [similarityThreshold, setSimilarityThreshold] = useState(0.7);\n\n    // Check GroundingDINO and LLM+CLIP availability on component mount\n    useEffect(() => {\n        checkGroundingDinoStatus();\n        checkLlmClipStatus();\n    }, []);\n\n    const checkGroundingDinoStatus = async () => {\n        try {\n            console.log('🔍 Checking GroundingDINO status...');\n            const response = await fetch('/grounding-dino-status');\n            console.log('📡 Response status:', response.status);\n            const data = await response.json();\n            console.log('📊 Response data:', data);\n            setGroundingDinoAvailable(data.available);\n            console.log('✅ GroundingDINO available set to:', data.available);\n        } catch (error) {\n            console.error('❌ Error checking GroundingDINO status:', error);\n            setGroundingDinoAvailable(false);\n        }\n    };\n\n    const checkLlmClipStatus = async () => {\n        try {\n            console.log('🧠 Checking LLM+CLIP status...');\n            const response = await fetch('/llm-clip-status');\n            const data = await response.json();\n            console.log('📊 LLM+CLIP status:', data);\n            setLlmClipAvailable(data.service_available);\n            console.log('✅ LLM+CLIP available set to:', data.service_available);\n        } catch (error) {\n            console.error('❌ Error checking LLM+CLIP status:', error);\n            setLlmClipAvailable(false);\n        }\n    };\n\n    const handleFileChange = (e) => {\n        const selectedFiles = Array.from(e.target.files);\n        setFiles(selectedFiles);\n        \n        // Create previews for all selected files\n        const newPreviews = selectedFiles.map(file => ({\n            file,\n            url: URL.createObjectURL(file),\n            name: file.name\n        }));\n        setPreviews(newPreviews);\n        setAnnotatedResults([]); // Reset results when new files are selected\n    };\n\n    const handleAnnotate = async () => {\n        if (files.length === 0) {\n            alert(\"Please select at least one file first.\");\n            return;\n        }\n\n        setIsLoading(true);\n        setProcessingProgress({ current: 0, total: files.length });\n        setAnnotatedResults([]);\n\n        // Generate unique batch ID\n        const newBatchId = `batch_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n        setBatchId(newBatchId);\n\n        if (annotationType === 'grounding-dino-only') {\n            await handleGroundingDinoOnlyAnnotation(newBatchId);\n        } else if (annotationType === 'grounding-dino-sam2') {\n            await handleGroundingDinoSAM2Annotation(newBatchId);\n        } else if (annotationType === 'guardrail') {\n            await handleGuardrailAnnotation(newBatchId);\n        } else if (annotationType === 'llm-clip-anomaly') {\n            await handleLlmClipAnomalyAnnotation(newBatchId);\n        } else {\n            await handleTraditionalAnnotation(newBatchId);\n        }\n    };\n\n    const handleGroundingDinoSAM2Annotation = async (newBatchId) => {\n        const results = [];\n        \n        try {\n            for (let i = 0; i < files.length; i++) {\n                const file = files[i];\n                setProcessingProgress({ current: i + 1, total: files.length });\n\n                const formData = new FormData();\n                formData.append('file', file);\n                formData.append('prompts', groundingDinoPrompts);\n                formData.append('confidence_threshold', confidenceThreshold);\n                formData.append('batch_id', newBatchId);\n\n                try {\n                    const response = await fetch('/grounding-dino-annotate', {\n                        method: 'POST',\n                        body: formData\n                    });\n\n                    if (response.ok) {\n                        const result = await response.json();\n                        results.push({\n                            originalName: file.name,\n                            success: result.status === 'success',\n                            annotatedUrl: result.status === 'success' ? `data:image/jpeg;base64,${result.image_base64}` : null,\n                            error: result.status !== 'success' ? result.message : null,\n                            detections: result.detections || [],\n                            total_detections: result.total_detections || 0,\n                            yolo_annotations: result.yolo_annotations\n                        });\n                    } else {\n                        results.push({\n                            originalName: file.name,\n                            success: false,\n                            error: \"GroundingDINO annotation failed\"\n                        });\n                    }\n                } catch (error) {\n                    console.error(`Error processing ${file.name}:`, error);\n                    results.push({\n                        originalName: file.name,\n                        success: false,\n                        error: \"Processing error\"\n                    });\n                }\n            }\n\n            setAnnotatedResults(results);\n        } catch (error) {\n            console.error('GroundingDINO annotation error:', error);\n            alert('GroundingDINO annotation failed. Please try again.');\n        } finally {\n            setIsLoading(false);\n            setProcessingProgress({ current: 0, total: 0 });\n        }\n    };\n\n    const handleGroundingDinoOnlyAnnotation = async (newBatchId) => {\n        const results = [];\n        \n        try {\n            for (let i = 0; i < files.length; i++) {\n                const file = files[i];\n                setProcessingProgress({ current: i + 1, total: files.length });\n\n                const formData = new FormData();\n                formData.append('file', file);\n                formData.append('prompts', groundingDinoPrompts);\n                formData.append('confidence_threshold', confidenceThreshold);\n                formData.append('batch_id', newBatchId);\n\n                try {\n                    const response = await fetch('/grounding-dino-only-annotate', {\n                        method: 'POST',\n                        body: formData\n                    });\n\n                    if (response.ok) {\n                        const result = await response.json();\n                        results.push({\n                            originalName: file.name,\n                            success: result.status === 'success',\n                            annotatedUrl: result.status === 'success' ? `data:image/jpeg;base64,${result.image_base64}` : null,\n                            error: result.status !== 'success' ? result.message : null,\n                            detections: result.detections || [],\n                            total_detections: result.total_detections || 0,\n                            yolo_annotations: result.yolo_annotations\n                        });\n                    } else {\n                        results.push({\n                            originalName: file.name,\n                            success: false,\n                            error: \"GroundingDINO annotation failed\"\n                        });\n                    }\n                } catch (error) {\n                    console.error(`Error processing ${file.name}:`, error);\n                    results.push({\n                        originalName: file.name,\n                        success: false,\n                        error: \"Processing error\"\n                    });\n                }\n            }\n\n            setAnnotatedResults(results);\n        } catch (error) {\n            console.error('GroundingDINO annotation error:', error);\n            alert('GroundingDINO annotation failed. Please try again.');\n        } finally {\n            setIsLoading(false);\n            setProcessingProgress({ current: 0, total: 0 });\n        }\n    };\n\n    const handleGuardrailAnnotation = async (newBatchId) => {\n        if (!guardrailModelFile) {\n            alert(\"Please upload your trained anomaly model file (.ckpt).\");\n            setIsLoading(false);\n            return;\n        }\n\n        const results = [];\n\n        try {\n            for (let i = 0; i < files.length; i++) {\n                const file = files[i];\n                setProcessingProgress({ current: i + 1, total: files.length });\n\n                const formData = new FormData();\n                formData.append(\"file\", file);\n                formData.append(\"model_file\", guardrailModelFile);\n                formData.append(\"prompts\", guardrailPrompts);\n                formData.append(\"confidence_threshold\", guardrailConfidenceThreshold);\n\n                try {\n                    const response = await fetch('/annotate-with-guardrail', {\n                        method: 'POST',\n                        body: formData\n                    });\n\n                    if (response.ok) {\n                        const data = await response.json();\n                        results.push({\n                            originalName: file.name,\n                            success: data.status === 'success',\n                            annotatedUrl: data.status === 'success' && data.annotated_image ? \n                                `data:image/jpeg;base64,${btoa(String.fromCharCode(...new Uint8Array(data.annotated_image)))}` : null,\n                            error: data.status !== 'success' ? data.message : null,\n                            detections: data.detections || [],\n                            total_detections: data.detections ? data.detections.length : 0\n                        });\n                    } else {\n                        results.push({\n                            originalName: file.name,\n                            success: false,\n                            error: \"Guardrail annotation failed\"\n                        });\n                    }\n                } catch (error) {\n                    console.error(`Error processing ${file.name}:`, error);\n                    results.push({\n                        originalName: file.name,\n                        success: false,\n                        error: \"Processing error\"\n                    });\n                }\n            }\n\n            setAnnotatedResults(results);\n        } catch (error) {\n            console.error('Guardrail annotation error:', error);\n            alert('Guardrail annotation failed. Please try again.');\n        } finally {\n            setIsLoading(false);\n            setProcessingProgress({ current: 0, total: 0 });\n        }\n    };\n\n    const handleLlmClipAnomalyAnnotation = async (newBatchId) => {\n        const results = [];\n\n        try {\n            for (let i = 0; i < files.length; i++) {\n                const file = files[i];\n                setProcessingProgress({ current: i + 1, total: files.length });\n\n                const formData = new FormData();\n                formData.append('file', file);\n                formData.append('component_type', componentType);\n                formData.append('context', componentContext);\n                formData.append('confidence_threshold', confidenceThreshold);\n                formData.append('similarity_threshold', similarityThreshold);\n                formData.append('use_llm', useLLM);\n                formData.append('batch_id', newBatchId);\n\n                try {\n                    const response = await fetch('/llm-clip-anomaly-detect', {\n                        method: 'POST',\n                        body: formData\n                    });\n\n                    if (response.ok) {\n                        const result = await response.json();\n                        results.push({\n                            originalName: file.name,\n                            success: result.status === 'success',\n                            annotatedUrl: result.status === 'success' ? `data:image/jpeg;base64,${result.image_base64}` : null,\n                            error: result.status !== 'success' ? result.message : null,\n                            anomaly_regions: result.anomaly_regions_detected || 0,\n                            total_regions: result.total_regions_detected || 0,\n                            anomaly_rate: result.anomaly_rate || 0,\n                            detections: result.detections || [],\n                            component_type: result.component_type,\n                            descriptions_used: result.descriptions_used\n                        });\n                    } else {\n                        results.push({\n                            originalName: file.name,\n                            success: false,\n                            error: \"LLM+CLIP anomaly detection failed\"\n                        });\n                    }\n                } catch (error) {\n                    console.error(`Error processing ${file.name}:`, error);\n                    results.push({\n                        originalName: file.name,\n                        success: false,\n                        error: \"Processing error\"\n                    });\n                }\n            }\n\n            setAnnotatedResults(results);\n        } catch (error) {\n            console.error('LLM+CLIP annotation error:', error);\n            alert('LLM+CLIP annotation failed. Please try again.');\n        } finally {\n            setIsLoading(false);\n            setProcessingProgress({ current: 0, total: 0 });\n        }\n    };\n\n    const handleTraditionalAnnotation = async (newBatchId) => {\n        const endpointMap = {\n            'detection': '/pre-annotate-detect',\n            'segmentation': '/pre-annotate-segment',\n            'sam2-detection': '/pre-annotate-sam2-detect',\n            'sam2-segmentation': '/pre-annotate-sam2-segment'\n        };\n        const endpoint = endpointMap[annotationType] || '/pre-annotate-detect';\n\n        const results = [];\n\n        try {\n            for (let i = 0; i < files.length; i++) {\n                const file = files[i];\n                setProcessingProgress({ current: i + 1, total: files.length });\n\n                const formData = new FormData();\n                formData.append(\"file\", file);\n                formData.append(\"batch_id\", newBatchId); // Add batch ID for caching\n\n                try {\n                    const response = await fetch(endpoint, {\n                        method: \"POST\",\n                        body: formData,\n                    });\n\n                    if (response.ok) {\n                        const imageBlob = await response.blob();\n                        results.push({\n                            originalName: file.name,\n                            annotatedUrl: URL.createObjectURL(imageBlob),\n                            success: true\n                        });\n                    } else {\n                        results.push({\n                            originalName: file.name,\n                            success: false,\n                            error: `${annotationType} annotation failed`\n                        });\n                    }\n                } catch (error) {\n                    console.error(`Error processing ${file.name}:`, error);\n                    results.push({\n                        originalName: file.name,\n                        success: false,\n                        error: \"Processing error\"\n                    });\n                }\n            }\n\n            setAnnotatedResults(results);\n        } catch (error) {\n            console.error(\"Error during batch annotation:\", error);\n            alert(\"An error occurred during batch annotation.\");\n        } finally {\n            setIsLoading(false);\n            setProcessingProgress({ current: 0, total: 0 });\n        }\n    };\n\n    const handleDownloadZip = async () => {\n        const successfulResults = annotatedResults.filter(result => result.success);\n        \n        if (successfulResults.length === 0) {\n            alert(\"No successful annotations to download.\");\n            return;\n        }\n\n        try {\n            const response = await fetch(`/download-batch-zip/${batchId}`, {\n                method: 'POST',\n            });\n\n            if (response.ok) {\n                const blob = await response.blob();\n                const url = window.URL.createObjectURL(blob);\n                const a = document.createElement('a');\n                a.style.display = 'none';\n                a.href = url;\n                a.download = `annotated_${annotationType}_batch.zip`;\n                document.body.appendChild(a);\n                a.click();\n                window.URL.revokeObjectURL(url);\n                document.body.removeChild(a);\n            } else {\n                throw new Error('Failed to download zip file');\n            }\n        } catch (error) {\n            console.error('Error downloading zip:', error);\n            alert('Failed to download zip file. Please try again.');\n        }\n    };\n\n    const handleExportYoloDataset = async () => {\n        const groundingDinoResults = annotatedResults.filter(result => \n            result.success && result.yolo_annotations\n        );\n\n        if (groundingDinoResults.length === 0) {\n            alert(\"No GroundingDINO results to export.\");\n            return;\n        }\n\n        try {\n            const formData = new FormData();\n            formData.append('annotation_results', JSON.stringify(groundingDinoResults));\n            formData.append('dataset_name', `grounding_dino_${Date.now()}`);\n\n            const response = await fetch('/grounding-dino-export-yolo', {\n                method: 'POST',\n                body: formData\n            });\n\n            if (response.ok) {\n                const data = await response.json();\n                alert(`YOLO dataset exported successfully: ${data.dataset_name}`);\n            } else {\n                throw new Error('Failed to export dataset');\n            }\n        } catch (error) {\n            console.error('Error exporting dataset:', error);\n            alert('Failed to export YOLO dataset.');\n        }\n    };\n\n    const renderAnnotationTypeSelector = () => (\n        <div style={{ marginBottom: '20px' }}>\n            <h3>🎯 Annotation Method</h3>\n            <div style={{ display: 'grid', gridTemplateColumns: 'repeat(auto-fit, minmax(200px, 1fr))', gap: '10px' }}>\n                <label style={{ \n                    display: 'flex', \n                    alignItems: 'center',\n                    padding: '10px',\n                    border: '2px solid #e2e8f0',\n                    borderRadius: '8px',\n                    backgroundColor: annotationType === 'detection' ? '#dbeafe' : 'white',\n                    borderColor: annotationType === 'detection' ? '#3b82f6' : '#e2e8f0',\n                    cursor: 'pointer'\n                }}>\n                    <input\n                        type=\"radio\"\n                        value=\"detection\"\n                        checked={annotationType === 'detection'}\n                        onChange={(e) => setAnnotationType(e.target.value)}\n                        style={{ marginRight: '8px' }}\n                    />\n                    <span>📦 OpenCV Detection</span>\n                </label>\n\n                <label style={{\n                    display: 'flex', \n                    alignItems: 'center',\n                    padding: '10px',\n                    border: '2px solid #e2e8f0',\n                    borderRadius: '8px',\n                    backgroundColor: annotationType === 'segmentation' ? '#dbeafe' : 'white',\n                    borderColor: annotationType === 'segmentation' ? '#3b82f6' : '#e2e8f0',\n                    cursor: 'pointer'\n                }}>\n                    <input\n                        type=\"radio\"\n                        value=\"segmentation\"\n                        checked={annotationType === 'segmentation'}\n                        onChange={(e) => setAnnotationType(e.target.value)}\n                        style={{ marginRight: '8px' }}\n                    />\n                    <span>✂️ OpenCV Segmentation</span>\n                </label>\n\n                <label style={{\n                    display: 'flex', \n                    alignItems: 'center',\n                    padding: '10px',\n                    border: '2px solid #e2e8f0',\n                    borderRadius: '8px',\n                    backgroundColor: annotationType === 'sam2-detection' ? '#dbeafe' : 'white',\n                    borderColor: annotationType === 'sam2-detection' ? '#3b82f6' : '#e2e8f0',\n                    cursor: 'pointer'\n                }}>\n                    <input\n                        type=\"radio\"\n                        value=\"sam2-detection\"\n                        checked={annotationType === 'sam2-detection'}\n                        onChange={(e) => setAnnotationType(e.target.value)}\n                        style={{ marginRight: '8px' }}\n                    />\n                    <span>🎯 SAM2 Detection</span>\n                </label>\n\n                <label style={{\n                    display: 'flex', \n                    alignItems: 'center',\n                    padding: '10px',\n                    border: '2px solid #e2e8f0',\n                    borderRadius: '8px',\n                    backgroundColor: annotationType === 'sam2-segmentation' ? '#dbeafe' : 'white',\n                    borderColor: annotationType === 'sam2-segmentation' ? '#3b82f6' : '#e2e8f0',\n                    cursor: 'pointer'\n                }}>\n                    <input\n                        type=\"radio\"\n                        value=\"sam2-segmentation\"\n                        checked={annotationType === 'sam2-segmentation'}\n                        onChange={(e) => setAnnotationType(e.target.value)}\n                        style={{ marginRight: '8px' }}\n                    />\n                    <span>🔪 SAM2 Segmentation</span>\n                </label>\n\n                {groundingDinoAvailable && (\n                    <label style={{\n                        display: 'flex', \n                        alignItems: 'center',\n                        padding: '10px',\n                        border: '2px solid #10b981',\n                        borderRadius: '8px',\n                        backgroundColor: annotationType === 'grounding-dino-only' ? '#d1fae5' : 'white',\n                        borderColor: annotationType === 'grounding-dino-only' ? '#10b981' : '#10b981',\n                        cursor: 'pointer'\n                    }}>\n                        <input\n                            type=\"radio\"\n                            value=\"grounding-dino-only\"\n                            checked={annotationType === 'grounding-dino-only'}\n                            onChange={(e) => setAnnotationType(e.target.value)}\n                            style={{ marginRight: '8px' }}\n                        />\n                        <span>✨ GroundingDINO Only (Detection)</span>\n                    </label>\n                )}\n\n                {groundingDinoAvailable && (\n                    <label style={{\n                        display: 'flex', \n                        alignItems: 'center',\n                        padding: '10px',\n                        border: '2px solid #7c2d12',\n                        borderRadius: '8px',\n                        backgroundColor: annotationType === 'grounding-dino-sam2' ? '#fed7aa' : 'white',\n                        borderColor: annotationType === 'grounding-dino-sam2' ? '#7c2d12' : '#7c2d12',\n                        cursor: 'pointer'\n                    }}>\n                        <input\n                            type=\"radio\"\n                            value=\"grounding-dino-sam2\"\n                            checked={annotationType === 'grounding-dino-sam2'}\n                            onChange={(e) => setAnnotationType(e.target.value)}\n                            style={{ marginRight: '8px' }}\n                        />\n                        <span>🎭 GroundingDINO + SAM2 (Detection + Segmentation)</span>\n                    </label>\n                )}\n\n                {groundingDinoAvailable && (\n                    <label style={{\n                        display: 'flex', \n                        alignItems: 'center',\n                        padding: '10px',\n                        border: '2px solid #7c3aed',\n                        borderRadius: '8px',\n                        backgroundColor: annotationType === 'guardrail' ? '#ede9fe' : 'white',\n                        borderColor: annotationType === 'guardrail' ? '#7c3aed' : '#7c3aed',\n                        cursor: 'pointer'\n                    }}>\n                        <input\n                            type=\"radio\"\n                            value=\"guardrail\"\n                            checked={annotationType === 'guardrail'}\n                            onChange={(e) => setAnnotationType(e.target.value)}\n                            style={{ marginRight: '8px' }}\n                        />\n                        <span>🛡️ Guardrail (Anomaly + AI)</span>\n                    </label>\n                )}\n\n                {llmClipAvailable && (\n                    <label style={{\n                        display: 'flex', \n                        alignItems: 'center',\n                        padding: '10px',\n                        border: '2px solid #8b5cf6',\n                        borderRadius: '8px',\n                        backgroundColor: annotationType === 'llm-clip-anomaly' ? '#f3e8ff' : 'white',\n                        borderColor: annotationType === 'llm-clip-anomaly' ? '#8b5cf6' : '#8b5cf6',\n                        cursor: 'pointer'\n                    }}>\n                        <input\n                            type=\"radio\"\n                            value=\"llm-clip-anomaly\"\n                            checked={annotationType === 'llm-clip-anomaly'}\n                            onChange={(e) => setAnnotationType(e.target.value)}\n                            style={{ marginRight: '8px' }}\n                        />\n                        <span>🧠 LLM+CLIP Anomaly Detection</span>\n                    </label>\n                )}\n            </div>\n\n            {(!groundingDinoAvailable || !llmClipAvailable) && (\n                <div style={{ \n                    marginTop: '10px', \n                    padding: '10px', \n                    backgroundColor: '#fef3c7', \n                    border: '1px solid #f59e0b',\n                    borderRadius: '4px',\n                    fontSize: '14px'\n                }}>\n                    {!groundingDinoAvailable && (\n                        <>⚠️ GroundingDINO not available. Please install dependencies to use AI-powered annotation.<br /></>\n                    )}\n                    {!llmClipAvailable && (\n                        <>🧠 LLM+CLIP not available. Install transformers and torch, and set OpenAI API key.<br /></>\n                    )}\n                    <div style={{ marginTop: '8px', display: 'flex', gap: '5px' }}>\n                        <button \n                            onClick={checkGroundingDinoStatus}\n                            style={{\n                                backgroundColor: '#3b82f6',\n                                color: 'white',\n                                border: 'none',\n                                padding: '5px 10px',\n                                borderRadius: '4px',\n                                cursor: 'pointer',\n                                fontSize: '12px'\n                            }}\n                        >\n                            🔄 Check GroundingDINO\n                        </button>\n                        <button \n                            onClick={checkLlmClipStatus}\n                            style={{\n                                backgroundColor: '#8b5cf6',\n                                color: 'white',\n                                border: 'none',\n                                padding: '5px 10px',\n                                borderRadius: '4px',\n                                cursor: 'pointer',\n                                fontSize: '12px'\n                            }}\n                        >\n                            🧠 Check LLM+CLIP\n                        </button>\n                    </div>\n                </div>\n            )}\n        </div>\n    );\n\n    const renderGroundingDinoOptions = () => {\n        if (annotationType !== 'grounding-dino-only' && annotationType !== 'grounding-dino-sam2') return null;\n\n        return (\n            <div style={{\n                marginBottom: '20px',\n                padding: '20px',\n                backgroundColor: '#f0fdf4',\n                border: '1px solid #10b981',\n                borderRadius: '8px'\n            }}>\n                <h4 style={{ margin: '0 0 15px 0', color: '#059669' }}>\n                    {annotationType === 'grounding-dino-only' ? '✨ GroundingDINO Only Settings' : '🎭 GroundingDINO + SAM2 Settings'}\n                </h4>\n                \n                <div style={{ marginBottom: '15px' }}>\n                    <label style={{ display: 'block', marginBottom: '5px', fontWeight: 'bold' }}>\n                        Defect Prompts (comma-separated):\n                    </label>\n                    <input\n                        type=\"text\"\n                        value={groundingDinoPrompts}\n                        onChange={(e) => setGroundingDinoPrompts(e.target.value)}\n                        placeholder=\"e.g., scratch, dent, dirt, corrosion, crack\"\n                        style={{ \n                            width: '100%', \n                            padding: '8px', \n                            border: '1px solid #d1d5db',\n                            borderRadius: '4px',\n                            fontSize: '14px'\n                        }}\n                    />\n                    <div style={{ fontSize: '12px', color: '#6b7280', marginTop: '5px' }}>\n                        Describe the defects you want to detect. Be specific (e.g., \"scratch on metal surface\").\n                    </div>\n                </div>\n\n                <div style={{ marginBottom: '15px' }}>\n                    <label style={{ display: 'block', marginBottom: '5px', fontWeight: 'bold' }}>\n                        Confidence Threshold: {confidenceThreshold}\n                    </label>\n                    <input\n                        type=\"range\"\n                        min=\"0.1\"\n                        max=\"0.9\"\n                        step=\"0.1\"\n                        value={confidenceThreshold}\n                        onChange={(e) => setConfidenceThreshold(parseFloat(e.target.value))}\n                        style={{ width: '200px' }}\n                    />\n                    <div style={{ fontSize: '12px', color: '#6b7280', marginTop: '5px' }}>\n                        Lower values detect more objects but may include false positives.\n                    </div>\n                </div>\n            </div>\n        );\n    };\n\n    const renderGuardrailOptions = () => {\n        if (annotationType !== 'guardrail') return null;\n\n        return (\n            <div style={{\n                marginBottom: '20px',\n                padding: '20px',\n                backgroundColor: '#faf5ff',\n                border: '1px solid #7c3aed',\n                borderRadius: '8px'\n            }}>\n                <h4 style={{ margin: '0 0 15px 0', color: '#7c3aed' }}>🛡️ Guardrail Settings (Anomaly Detection + AI Classification)</h4>\n                \n                {/* Model File Upload */}\n                <div style={{ marginBottom: '15px' }}>\n                    <label style={{ display: 'block', marginBottom: '5px', fontWeight: 'bold' }}>\n                        Upload Anomaly Model File:\n                    </label>\n                    <input\n                        type=\"file\"\n                        accept=\".ckpt,.pth,.pt\"\n                        onChange={(e) => setGuardrailModelFile(e.target.files[0])}\n                        style={{ \n                            width: '100%', \n                            padding: '8px', \n                            border: '1px solid #d1d5db',\n                            borderRadius: '4px',\n                            fontSize: '14px'\n                        }}\n                    />\n                    {guardrailModelFile && (\n                        <div style={{ fontSize: '12px', color: '#059669', marginTop: '5px' }}>\n                            ✅ Selected: {guardrailModelFile.name}\n                        </div>\n                    )}\n                    <div style={{ fontSize: '12px', color: '#6b7280', marginTop: '5px' }}>\n                        Upload your trained PatchCore anomaly detection model (.ckpt file). \n                        <br />💡 Train one in the <strong>Train</strong> page first!\n                    </div>\n                </div>\n\n                {/* Training Link */}\n                <div style={{ \n                    marginBottom: '15px',\n                    padding: '10px',\n                    backgroundColor: '#e0e7ff',\n                    border: '1px solid #6366f1',\n                    borderRadius: '6px'\n                }}>\n                    <div style={{ fontSize: '14px', color: '#4f46e5' }}>\n                        <strong>📚 Need to train an anomaly model?</strong>\n                        <br />Go to the <strong>Train</strong> page to create a new anomaly detection model using defect-free images.\n                    </div>\n                </div>\n\n                {/* Classification Prompts */}\n                <div style={{ marginBottom: '15px' }}>\n                    <label style={{ display: 'block', marginBottom: '5px', fontWeight: 'bold' }}>\n                        Classification Prompts (comma-separated):\n                    </label>\n                    <input\n                        type=\"text\"\n                        value={guardrailPrompts}\n                        onChange={(e) => setGuardrailPrompts(e.target.value)}\n                        placeholder=\"e.g., scratch, dent, dirt, corrosion, crack\"\n                        style={{ \n                            width: '100%', \n                            padding: '8px', \n                            border: '1px solid #d1d5db',\n                            borderRadius: '4px',\n                            fontSize: '14px'\n                        }}\n                    />\n                    <div style={{ fontSize: '12px', color: '#6b7280', marginTop: '5px' }}>\n                        After detecting anomalies, the system will use GroundingDINO to classify them with these prompts.\n                    </div>\n                </div>\n\n                {/* Confidence Threshold */}\n                <div style={{ marginBottom: '15px' }}>\n                    <label style={{ display: 'block', marginBottom: '5px', fontWeight: 'bold' }}>\n                        Classification Confidence Threshold: {guardrailConfidenceThreshold}\n                    </label>\n                    <input\n                        type=\"range\"\n                        min=\"0.1\"\n                        max=\"0.9\"\n                        step=\"0.1\"\n                        value={guardrailConfidenceThreshold}\n                        onChange={(e) => setGuardrailConfidenceThreshold(parseFloat(e.target.value))}\n                        style={{ width: '200px' }}\n                    />\n                    <div style={{ fontSize: '12px', color: '#6b7280', marginTop: '5px' }}>\n                        Confidence threshold for GroundingDINO classification of detected anomalies.\n                    </div>\n                </div>\n\n                {/* How it works */}\n                <div style={{\n                    padding: '10px',\n                    backgroundColor: '#e0e7ff',\n                    border: '1px solid #3b82f6',\n                    borderRadius: '4px',\n                    fontSize: '12px'\n                }}>\n                    <strong>How Guardrail Works:</strong>\n                    <ol style={{ margin: '5px 0', paddingLeft: '20px' }}>\n                        <li><strong>Anomaly Detection:</strong> PatchCore detects deviations from \"normal\" (high sensitivity)</li>\n                        <li><strong>Classification:</strong> GroundingDINO classifies detected anomalies using your prompts</li>\n                        <li><strong>Result:</strong> Only real defects are labeled, with minimal false positives</li>\n                    </ol>\n                </div>\n            </div>\n        );\n    };\n\n    const renderLlmClipOptions = () => {\n        if (annotationType !== 'llm-clip-anomaly') return null;\n\n        return (\n            <div style={{\n                marginBottom: '20px',\n                padding: '20px',\n                backgroundColor: '#f8fafc',\n                border: '1px solid #8b5cf6',\n                borderRadius: '8px'\n            }}>\n                <h4 style={{ margin: '0 0 15px 0', color: '#8b5cf6' }}>🧠 LLM+CLIP Anomaly Detection Settings</h4>\n                \n                {/* Component Type */}\n                <div style={{ marginBottom: '15px' }}>\n                    <label style={{ display: 'block', marginBottom: '5px', fontWeight: 'bold' }}>\n                        Component Type:\n                    </label>\n                    <input\n                        type=\"text\"\n                        value={componentType}\n                        onChange={(e) => setComponentType(e.target.value)}\n                        placeholder=\"e.g., metal plate, circuit board, automotive part\"\n                        style={{ \n                            width: '100%', \n                            padding: '8px', \n                            border: '1px solid #d1d5db',\n                            borderRadius: '4px',\n                            fontSize: '14px'\n                        }}\n                    />\n                    <div style={{ fontSize: '12px', color: '#6b7280', marginTop: '5px' }}>\n                        What type of component/object are you analyzing for defects?\n                    </div>\n                </div>\n\n                {/* Context */}\n                <div style={{ marginBottom: '15px' }}>\n                    <label style={{ display: 'block', marginBottom: '5px', fontWeight: 'bold' }}>\n                        Context/Industry:\n                    </label>\n                    <input\n                        type=\"text\"\n                        value={componentContext}\n                        onChange={(e) => setComponentContext(e.target.value)}\n                        placeholder=\"e.g., automotive, electronics, manufacturing\"\n                        style={{ \n                            width: '100%', \n                            padding: '8px', \n                            border: '1px solid #d1d5db',\n                            borderRadius: '4px',\n                            fontSize: '14px'\n                        }}\n                    />\n                    <div style={{ fontSize: '12px', color: '#6b7280', marginTop: '5px' }}>\n                        Additional context to help generate better anomaly descriptions.\n                    </div>\n                </div>\n\n                {/* Use LLM Toggle */}\n                <div style={{ marginBottom: '15px' }}>\n                    <label style={{ display: 'flex', alignItems: 'center' }}>\n                        <input\n                            type=\"checkbox\"\n                            checked={useLLM}\n                            onChange={(e) => setUseLLM(e.target.checked)}\n                            style={{ marginRight: '8px' }}\n                        />\n                        <span style={{ fontWeight: 'bold' }}>Use LLM for Description Generation</span>\n                    </label>\n                    <div style={{ fontSize: '12px', color: '#6b7280', marginTop: '5px' }}>\n                        {useLLM \n                            ? \"🤖 LLM will generate detailed anomaly descriptions (requires OpenAI API key)\"\n                            : \"📋 Use predefined template descriptions (faster, no API key needed)\"\n                        }\n                    </div>\n                </div>\n\n                {/* Thresholds */}\n                <div style={{ display: 'grid', gridTemplateColumns: '1fr 1fr', gap: '15px', marginBottom: '15px' }}>\n                    <div>\n                        <label style={{ display: 'block', marginBottom: '5px', fontWeight: 'bold' }}>\n                            Detection Confidence: {confidenceThreshold}\n                        </label>\n                        <input\n                            type=\"range\"\n                            min=\"0.1\"\n                            max=\"0.9\"\n                            step=\"0.1\"\n                            value={confidenceThreshold}\n                            onChange={(e) => setConfidenceThreshold(parseFloat(e.target.value))}\n                            style={{ width: '100%' }}\n                        />\n                        <div style={{ fontSize: '12px', color: '#6b7280' }}>\n                            GroundingDINO component detection threshold\n                        </div>\n                    </div>\n                    \n                    <div>\n                        <label style={{ display: 'block', marginBottom: '5px', fontWeight: 'bold' }}>\n                            Similarity Threshold: {similarityThreshold}\n                        </label>\n                        <input\n                            type=\"range\"\n                            min=\"0.3\"\n                            max=\"0.9\"\n                            step=\"0.1\"\n                            value={similarityThreshold}\n                            onChange={(e) => setSimilarityThreshold(parseFloat(e.target.value))}\n                            style={{ width: '100%' }}\n                        />\n                        <div style={{ fontSize: '12px', color: '#6b7280' }}>\n                            CLIP similarity threshold for anomaly detection\n                        </div>\n                    </div>\n                </div>\n\n                {/* How it works */}\n                <div style={{\n                    padding: '10px',\n                    backgroundColor: '#e0e7ff',\n                    border: '1px solid #8b5cf6',\n                    borderRadius: '4px',\n                    fontSize: '12px'\n                }}>\n                    <strong>How LLM+CLIP Works:</strong>\n                    <ol style={{ margin: '5px 0', paddingLeft: '20px' }}>\n                        <li><strong>LLM Generation:</strong> Creates detailed normal/anomaly descriptions for your component</li>\n                        <li><strong>Component Localization:</strong> GroundingDINO finds component instances in the image</li>\n                        <li><strong>CLIP Analysis:</strong> Measures semantic similarity between image regions and descriptions</li>\n                        <li><strong>Anomaly Detection:</strong> Regions with low similarity to normal descriptions are flagged as anomalies</li>\n                    </ol>\n                </div>\n\n                {/* API Key Warning */}\n                {useLLM && (\n                    <div style={{\n                        marginTop: '10px',\n                        padding: '8px',\n                        backgroundColor: '#fef3c7',\n                        border: '1px solid #f59e0b',\n                        borderRadius: '4px',\n                        fontSize: '12px'\n                    }}>\n                        💡 <strong>Note:</strong> LLM mode requires an OpenAI API key to be set in the backend environment.\n                    </div>\n                )}\n            </div>\n        );\n    };\n\n    const renderResults = () => {\n        if (annotatedResults.length === 0) return null;\n\n        const successfulResults = annotatedResults.filter(result => result.success);\n        const failedResults = annotatedResults.filter(result => !result.success);\n\n        return (\n            <div style={{ marginTop: '30px' }}>\n                <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', marginBottom: '20px' }}>\n                    <h3>📊 Annotation Results</h3>\n                    <div style={{ display: 'flex', gap: '10px' }}>\n                        {successfulResults.length > 0 && (\n                            <button \n                                onClick={handleDownloadZip}\n                                style={{\n                                    backgroundColor: '#059669',\n                                    color: 'white',\n                                    padding: '8px 16px',\n                                    border: 'none',\n                                    borderRadius: '4px',\n                                    cursor: 'pointer'\n                                }}\n                            >\n                                📥 Download ZIP\n                            </button>\n                        )}\n                        {(annotationType === 'grounding-dino-only' || annotationType === 'grounding-dino-sam2') && successfulResults.some(r => r.yolo_annotations) && (\n                            <button \n                                onClick={handleExportYoloDataset}\n                                style={{\n                                    backgroundColor: '#7c3aed',\n                                    color: 'white',\n                                    padding: '8px 16px',\n                                    border: 'none',\n                                    borderRadius: '4px',\n                                    cursor: 'pointer'\n                                }}\n                            >\n                                📦 Export YOLO Dataset\n                            </button>\n                        )}\n                    </div>\n                </div>\n\n                <div style={{ \n                    display: 'grid', \n                    gridTemplateColumns: 'repeat(auto-fit, minmax(300px, 1fr))', \n                    gap: '20px',\n                    marginBottom: '20px'\n                }}>\n                    <div style={{\n                        padding: '15px',\n                        backgroundColor: '#dcfce7',\n                        border: '1px solid #86efac',\n                        borderRadius: '8px'\n                    }}>\n                        <div style={{ fontSize: '18px', fontWeight: 'bold', color: '#059669' }}>\n                            ✅ Successful: {successfulResults.length}\n                        </div>\n                    </div>\n                    <div style={{\n                        padding: '15px',\n                        backgroundColor: '#fee2e2',\n                        border: '1px solid #fca5a5',\n                        borderRadius: '8px'\n                    }}>\n                        <div style={{ fontSize: '18px', fontWeight: 'bold', color: '#dc2626' }}>\n                            ❌ Failed: {failedResults.length}\n                        </div>\n                    </div>\n                </div>\n\n                <div style={{ display: 'grid', gridTemplateColumns: 'repeat(auto-fit, minmax(400px, 1fr))', gap: '20px' }}>\n                    {annotatedResults.map((result, index) => (\n                        <div key={index} style={{ \n                            border: '1px solid #e2e8f0', \n                            borderRadius: '8px', \n                            padding: '15px',\n                            backgroundColor: result.success ? '#f9fafb' : '#fef2f2'\n                        }}>\n                            <h4 style={{ margin: '0 0 10px 0' }}>{result.originalName}</h4>\n                            \n                            {result.success ? (\n                                <div>\n                                    <img \n                                        src={result.annotatedUrl} \n                                        alt={`Annotated ${result.originalName}`} \n                                        style={{ width: '100%', borderRadius: '4px', marginBottom: '10px' }}\n                                    />\n                                    \n                                    {/* LLM+CLIP Results */}\n                                    {result.anomaly_regions !== undefined && (\n                                        <div style={{ fontSize: '14px', color: '#6b7280', marginBottom: '10px' }}>\n                                            <strong>Anomaly Analysis:</strong>\n                                            <div style={{ marginLeft: '10px', fontSize: '12px' }}>\n                                                • Component: {result.component_type}\n                                            </div>\n                                            <div style={{ marginLeft: '10px', fontSize: '12px' }}>\n                                                • Regions analyzed: {result.total_regions}\n                                            </div>\n                                            <div style={{ marginLeft: '10px', fontSize: '12px' }}>\n                                                • Anomalies found: {result.anomaly_regions}\n                                            </div>\n                                            <div style={{ marginLeft: '10px', fontSize: '12px' }}>\n                                                • Anomaly rate: {(result.anomaly_rate * 100).toFixed(1)}%\n                                            </div>\n                                        </div>\n                                    )}\n                                    \n                                    {/* Traditional Detection Results */}\n                                    {result.detections && result.anomaly_regions === undefined && (\n                                        <div style={{ fontSize: '14px', color: '#6b7280' }}>\n                                            <strong>Detections:</strong> {result.total_detections || result.detections.length}\n                                            {result.detections.map((detection, idx) => (\n                                                <div key={idx} style={{ marginLeft: '10px', fontSize: '12px' }}>\n                                                    • {detection.class}: {(detection.confidence * 100).toFixed(1)}%\n                                                </div>\n                                            ))}\n                                        </div>\n                                    )}\n                                    \n                                    {/* LLM+CLIP Detection Details */}\n                                    {result.detections && result.anomaly_regions !== undefined && result.detections.length > 0 && (\n                                        <div style={{ fontSize: '14px', color: '#6b7280' }}>\n                                            <strong>Anomaly Details:</strong>\n                                            {result.detections.map((detection, idx) => (\n                                                <div key={idx} style={{ marginLeft: '10px', fontSize: '12px' }}>\n                                                    • Region {detection.region_index + 1}: {detection.is_anomaly ? '🔴 ANOMALY' : '🟢 NORMAL'} \n                                                    {detection.is_anomaly && ` (${detection.anomaly_type})`}\n                                                </div>\n                                            ))}\n                                        </div>\n                                    )}\n                                </div>\n                            ) : (\n                                <div style={{ color: '#dc2626' }}>\n                                    Error: {result.error}\n                                </div>\n                            )}\n                        </div>\n                    ))}\n                </div>\n            </div>\n        );\n    };\n\n    return (\n        <div style={{ padding: '20px', maxWidth: '1200px', margin: '0 auto' }}>\n            <h2>🏷️ Image Annotation</h2>\n            \n            <div style={{ marginBottom: '20px' }}>\n                <label style={{ display: 'block', marginBottom: '10px', fontSize: '16px', fontWeight: 'bold' }}>\n                    📁 Select Images:\n                </label>\n                <input \n                    type=\"file\" \n                    multiple \n                    accept=\"image/*\"\n                    onChange={handleFileChange}\n                    style={{ \n                        padding: '10px',\n                        border: '2px dashed #d1d5db',\n                        borderRadius: '8px',\n                        width: '100%',\n                        cursor: 'pointer'\n                    }}\n                />\n                {files.length > 0 && (\n                    <div style={{ marginTop: '10px', fontSize: '14px', color: '#059669' }}>\n                        ✅ {files.length} image(s) selected\n                    </div>\n                )}\n            </div>\n\n            {renderAnnotationTypeSelector()}\n            {renderGroundingDinoOptions()}\n            {renderGuardrailOptions()}\n\n            <div style={{ marginBottom: '30px' }}>\n                <button \n                    onClick={handleAnnotate}\n                    disabled={files.length === 0 || isLoading}\n                    style={{\n                        backgroundColor: files.length === 0 || isLoading ? '#9ca3af' : '#1e3a8a',\n                        color: 'white',\n                        padding: '12px 24px',\n                        border: 'none',\n                        borderRadius: '8px',\n                        fontSize: '16px',\n                        cursor: files.length === 0 || isLoading ? 'not-allowed' : 'pointer'\n                    }}\n                >\n                    {isLoading ? `🔄 Processing... (${processingProgress.current}/${processingProgress.total})` : '🚀 Start Annotation'}\n                </button>\n            </div>\n\n            {renderResults()}\n        </div>\n    );\n}\n\nexport default Annotate;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}