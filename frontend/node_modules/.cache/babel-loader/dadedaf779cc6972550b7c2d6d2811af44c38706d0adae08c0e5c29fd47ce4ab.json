{"ast":null,"code":"import React,{useState,useEffect,useRef}from'react';import axios from'axios';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function Train(){var _trainingStatus$statu;const[dataset,setDataset]=useState(null);const[task,setTask]=useState('detection');const[device,setDevice]=useState('cpu');const[message,setMessage]=useState('');const[isTraining,setIsTraining]=useState(false);const[currentTaskId,setCurrentTaskId]=useState(null);const[trainingStatus,setTrainingStatus]=useState(null);const[trainingLogs,setTrainingLogs]=useState([]);const[allTasks,setAllTasks]=useState([]);const logsEndRef=useRef(null);const pollingInterval=useRef(null);// Auto-scroll logs to bottom\nconst scrollToBottom=()=>{var _logsEndRef$current;(_logsEndRef$current=logsEndRef.current)===null||_logsEndRef$current===void 0?void 0:_logsEndRef$current.scrollIntoView({behavior:\"smooth\"});};useEffect(()=>{scrollToBottom();},[trainingLogs]);// Fetch all training tasks on component mount\nuseEffect(()=>{fetchAllTasks();// Cleanup polling on unmount\nreturn()=>{if(pollingInterval.current){clearInterval(pollingInterval.current);}};},[]);const fetchAllTasks=async()=>{try{const response=await axios.get('/training-tasks');setAllTasks(response.data.tasks||[]);}catch(error){console.error('Error fetching training tasks:',error);}};const fetchTrainingStatus=async taskId=>{try{const[statusResponse,logsResponse]=await Promise.all([axios.get(\"/training-status/\".concat(taskId)),axios.get(\"/training-logs/\".concat(taskId,\"?lines=50\"))]);setTrainingStatus(statusResponse.data);setTrainingLogs(logsResponse.data.logs||[]);// Stop polling if training completed or failed\nif(statusResponse.data.status==='completed'||statusResponse.data.status==='failed'){setIsTraining(false);if(pollingInterval.current){clearInterval(pollingInterval.current);pollingInterval.current=null;}fetchAllTasks();// Refresh task list\n}}catch(error){console.error('Error fetching training status:',error);}};const startPolling=taskId=>{// Clear any existing polling\nif(pollingInterval.current){clearInterval(pollingInterval.current);}// Start new polling\npollingInterval.current=setInterval(()=>{fetchTrainingStatus(taskId);},2000);// Poll every 2 seconds\n// Fetch immediately\nfetchTrainingStatus(taskId);};const handleTrain=async()=>{if(!dataset){setMessage('Please select a dataset zip file.');return;}const endpoint=task==='detection'?'/train-detect':'/train-segment';const formData=new FormData();formData.append('file',dataset);formData.append('device',device);setIsTraining(true);setMessage('Starting training...');setTrainingStatus(null);setTrainingLogs([]);try{const response=await axios.post(endpoint,formData,{headers:{'Content-Type':'multipart/form-data'}});setMessage(response.data.message);setCurrentTaskId(response.data.task_id);// Start polling for progress\nstartPolling(response.data.task_id);}catch(error){setMessage('Error starting training.');setIsTraining(false);console.error(error);}};const monitorExistingTask=taskId=>{setCurrentTaskId(taskId);setIsTraining(true);startPolling(taskId);};return/*#__PURE__*/_jsxs(\"div\",{style:{padding:'20px',maxWidth:'1200px'},children:[/*#__PURE__*/_jsx(\"h2\",{children:\"\\uD83C\\uDFCB\\uFE0F Model Training\"}),/*#__PURE__*/_jsxs(\"div\",{style:{backgroundColor:'#f8fafc',border:'1px solid #e2e8f0',borderRadius:'8px',padding:'20px',marginBottom:'20px'},children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Start New Training\"}),/*#__PURE__*/_jsxs(\"div\",{style:{marginBottom:'15px'},children:[/*#__PURE__*/_jsx(\"label\",{style:{display:'block',marginBottom:'5px',fontWeight:'bold'},children:\"Dataset (.zip): \"}),/*#__PURE__*/_jsx(\"input\",{type:\"file\",accept:\".zip\",onChange:e=>setDataset(e.target.files[0]),disabled:isTraining,style:{padding:'8px',width:'300px'}}),/*#__PURE__*/_jsx(\"div\",{style:{fontSize:'12px',color:'#666',marginTop:'5px'},children:\"Upload a zip file containing images/ and labels/ folders with data.yaml\"})]}),/*#__PURE__*/_jsxs(\"div\",{style:{marginBottom:'15px'},children:[/*#__PURE__*/_jsx(\"label\",{style:{display:'block',marginBottom:'5px',fontWeight:'bold'},children:\"Task Type: \"}),/*#__PURE__*/_jsxs(\"select\",{value:task,onChange:e=>setTask(e.target.value),disabled:isTraining,style:{padding:'8px',width:'200px'},children:[/*#__PURE__*/_jsx(\"option\",{value:\"detection\",children:\"Object Detection\"}),/*#__PURE__*/_jsx(\"option\",{value:\"segmentation\",children:\"Image Segmentation\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{style:{marginBottom:'15px'},children:[/*#__PURE__*/_jsx(\"label\",{style:{display:'block',marginBottom:'5px',fontWeight:'bold'},children:\"Training Device: \"}),/*#__PURE__*/_jsxs(\"select\",{value:device,onChange:e=>setDevice(e.target.value),disabled:isTraining,style:{padding:'8px',width:'200px'},children:[/*#__PURE__*/_jsx(\"option\",{value:\"cpu\",children:\"\\uD83D\\uDDA5\\uFE0F CPU (Compatible, Slower)\"}),/*#__PURE__*/_jsx(\"option\",{value:\"auto\",children:\"\\uD83D\\uDE80 Auto-detect (GPU if available)\"}),/*#__PURE__*/_jsx(\"option\",{value:\"cuda\",children:\"\\u26A1 GPU/CUDA (Faster, requires NVIDIA GPU)\"})]}),/*#__PURE__*/_jsxs(\"div\",{style:{fontSize:'12px',color:'#666',marginTop:'5px'},children:[device==='cpu'&&'⚠️ CPU training is slower but works on all systems',device==='auto'&&'🔍 Will automatically use GPU if available, fallback to CPU',device==='cuda'&&'⚡ Requires NVIDIA GPU with CUDA support']})]}),/*#__PURE__*/_jsx(\"button\",{onClick:handleTrain,disabled:!dataset||isTraining,style:{backgroundColor:!dataset||isTraining?'#ccc':'#1e3a8a',color:'white',padding:'12px 24px',border:'none',borderRadius:'6px',cursor:!dataset||isTraining?'not-allowed':'pointer',fontSize:'16px'},children:isTraining?'🔄 Training in Progress...':'🚀 Start Training'}),message&&/*#__PURE__*/_jsx(\"div\",{style:{marginTop:'10px',padding:'10px',backgroundColor:message.includes('Error')?'#fee2e2':'#dcfce7',border:\"1px solid \".concat(message.includes('Error')?'#fca5a5':'#86efac'),borderRadius:'4px',color:message.includes('Error')?'#dc2626':'#059669'},children:message})]}),isTraining&&trainingStatus&&/*#__PURE__*/_jsxs(\"div\",{style:{backgroundColor:'#f0fdf4',border:'1px solid #059669',borderRadius:'8px',padding:'20px',marginBottom:'20px'},children:[/*#__PURE__*/_jsx(\"h3\",{children:\"\\uD83D\\uDD25 Training Progress\"}),/*#__PURE__*/_jsxs(\"div\",{style:{display:'grid',gridTemplateColumns:'repeat(auto-fit, minmax(200px, 1fr))',gap:'15px',marginBottom:'15px'},children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Task ID:\"}),\" \",currentTaskId]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Status:\"}),/*#__PURE__*/_jsx(\"span\",{style:{marginLeft:'8px',padding:'2px 8px',borderRadius:'4px',backgroundColor:trainingStatus.status==='running'?'#059669':trainingStatus.status==='completed'?'#16a34a':trainingStatus.status==='failed'?'#dc2626':'#6b7280',color:'white',fontSize:'12px'},children:(_trainingStatus$statu=trainingStatus.status)===null||_trainingStatus$statu===void 0?void 0:_trainingStatus$statu.toUpperCase()})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Epoch:\"}),\" \",trainingStatus.current_epoch||0,\" / \",trainingStatus.total_epochs||10]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Overall Progress:\"}),\" \",Math.round(trainingStatus.progress||0),\"%\"]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Device:\"}),\" \",device==='cpu'?'🖥️ CPU':device==='auto'?'🚀 Auto':'⚡ GPU']})]}),/*#__PURE__*/_jsx(\"div\",{style:{marginBottom:'15px'},children:/*#__PURE__*/_jsx(\"div\",{style:{width:'100%',backgroundColor:'#e5e7eb',borderRadius:'8px',height:'12px',overflow:'hidden'},children:/*#__PURE__*/_jsx(\"div\",{style:{width:\"\".concat(trainingStatus.progress||0,\"%\"),backgroundColor:'#059669',height:'12px',borderRadius:'8px',transition:'width 0.3s ease'}})})})]}),isTraining&&trainingLogs.length>0&&/*#__PURE__*/_jsxs(\"div\",{style:{backgroundColor:'#1f2937',border:'1px solid #374151',borderRadius:'8px',padding:'15px',marginBottom:'20px'},children:[/*#__PURE__*/_jsx(\"h3\",{style:{color:'#f9fafb',marginTop:'0'},children:\"\\uD83D\\uDCCB Training Logs\"}),/*#__PURE__*/_jsxs(\"div\",{style:{backgroundColor:'#000',color:'#10b981',padding:'10px',borderRadius:'4px',height:'300px',overflowY:'auto',fontSize:'12px',fontFamily:'monospace'},children:[trainingLogs.map((log,index)=>/*#__PURE__*/_jsx(\"div\",{style:{marginBottom:'2px'},children:log},index)),/*#__PURE__*/_jsx(\"div\",{ref:logsEndRef})]})]}),allTasks.length>0&&/*#__PURE__*/_jsxs(\"div\",{style:{backgroundColor:'#f8fafc',border:'1px solid #e2e8f0',borderRadius:'8px',padding:'20px'},children:[/*#__PURE__*/_jsx(\"h3\",{children:\"\\uD83D\\uDCC8 Training History\"}),/*#__PURE__*/_jsx(\"div\",{style:{display:'grid',gap:'10px'},children:allTasks.map((taskInfo,index)=>/*#__PURE__*/_jsxs(\"div\",{style:{backgroundColor:'white',border:'1px solid #d1d5db',borderRadius:'6px',padding:'15px',display:'flex',justifyContent:'space-between',alignItems:'center'},children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:taskInfo.task_id}),/*#__PURE__*/_jsxs(\"div\",{style:{fontSize:'14px',color:'#6b7280'},children:[\"Status: \",/*#__PURE__*/_jsx(\"span\",{style:{color:taskInfo.status==='completed'?'#059669':taskInfo.status==='running'?'#2563eb':taskInfo.status==='failed'?'#dc2626':'#6b7280'},children:taskInfo.status}),\" | Progress: \",Math.round(taskInfo.progress||0),\"% | Epoch: \",taskInfo.current_epoch||0,\"/\",taskInfo.total_epochs||0]})]}),(taskInfo.status==='running'||taskInfo.status==='starting')&&/*#__PURE__*/_jsx(\"button\",{onClick:()=>monitorExistingTask(taskInfo.task_id),style:{backgroundColor:'#2563eb',color:'white',padding:'6px 12px',border:'none',borderRadius:'4px',cursor:'pointer',fontSize:'12px'},children:\"\\uD83D\\uDCCA Monitor\"})]},index))})]})]});}export default Train;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}