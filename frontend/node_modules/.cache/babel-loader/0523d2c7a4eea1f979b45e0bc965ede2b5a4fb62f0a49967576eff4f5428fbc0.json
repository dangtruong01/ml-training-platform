{"ast":null,"code":"var _jsxFileName = \"/Users/truonghaidang/Desktop/open-trainer/frontend/src/components/Train.js\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Train() {\n  var _trainingStatus$statu;\n  const [dataset, setDataset] = useState(null);\n  const [task, setTask] = useState('detection');\n  const [device, setDevice] = useState('cpu');\n  const [message, setMessage] = useState('');\n  const [isTraining, setIsTraining] = useState(false);\n  const [currentTaskId, setCurrentTaskId] = useState(null);\n  const [trainingStatus, setTrainingStatus] = useState(null);\n  const [trainingLogs, setTrainingLogs] = useState([]);\n  const [allTasks, setAllTasks] = useState([]);\n  const logsEndRef = useRef(null);\n  const pollingInterval = useRef(null);\n\n  // Anomaly model training state\n  const [anomalyTrainingFiles, setAnomalyTrainingFiles] = useState([]);\n  const [anomalyProjectName, setAnomalyProjectName] = useState('');\n  const [isTrainingAnomaly, setIsTrainingAnomaly] = useState(false);\n  const [anomalyMessage, setAnomalyMessage] = useState('');\n\n  // Auto-scroll logs to bottom\n  const scrollToBottom = () => {\n    var _logsEndRef$current;\n    (_logsEndRef$current = logsEndRef.current) === null || _logsEndRef$current === void 0 ? void 0 : _logsEndRef$current.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  };\n  useEffect(() => {\n    scrollToBottom();\n  }, [trainingLogs]);\n\n  // Fetch all training tasks on component mount\n  useEffect(() => {\n    fetchAllTasks();\n\n    // Cleanup polling on unmount\n    return () => {\n      if (pollingInterval.current) {\n        clearInterval(pollingInterval.current);\n      }\n    };\n  }, []);\n  const fetchAllTasks = async () => {\n    try {\n      const response = await axios.get('/training-tasks');\n      setAllTasks(response.data.tasks || []);\n    } catch (error) {\n      console.error('Error fetching training tasks:', error);\n    }\n  };\n  const fetchTrainingStatus = async taskId => {\n    try {\n      const [statusResponse, logsResponse] = await Promise.all([axios.get(`/training-status/${taskId}`), axios.get(`/training-logs/${taskId}?lines=50`)]);\n      setTrainingStatus(statusResponse.data);\n      setTrainingLogs(logsResponse.data.logs || []);\n\n      // Stop polling if training completed or failed\n      if (statusResponse.data.status === 'completed' || statusResponse.data.status === 'failed') {\n        setIsTraining(false);\n        if (pollingInterval.current) {\n          clearInterval(pollingInterval.current);\n          pollingInterval.current = null;\n        }\n        fetchAllTasks(); // Refresh task list\n      }\n    } catch (error) {\n      console.error('Error fetching training status:', error);\n    }\n  };\n  const startPolling = taskId => {\n    // Clear any existing polling\n    if (pollingInterval.current) {\n      clearInterval(pollingInterval.current);\n    }\n\n    // Start new polling\n    pollingInterval.current = setInterval(() => {\n      fetchTrainingStatus(taskId);\n    }, 2000); // Poll every 2 seconds\n\n    // Fetch immediately\n    fetchTrainingStatus(taskId);\n  };\n  const handleTrain = async () => {\n    if (!dataset) {\n      setMessage('Please select a dataset zip file.');\n      return;\n    }\n    const endpoint = task === 'detection' ? '/train-detect' : '/train-segment';\n    const formData = new FormData();\n    formData.append('file', dataset);\n    formData.append('device', device);\n    setIsTraining(true);\n    setMessage('Starting training...');\n    setTrainingStatus(null);\n    setTrainingLogs([]);\n    try {\n      const response = await axios.post(endpoint, formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      setMessage(response.data.message);\n      setCurrentTaskId(response.data.task_id);\n\n      // Start polling for progress\n      startPolling(response.data.task_id);\n    } catch (error) {\n      setMessage('Error starting training.');\n      setIsTraining(false);\n      console.error(error);\n    }\n  };\n  const monitorExistingTask = taskId => {\n    setCurrentTaskId(taskId);\n    setIsTraining(true);\n    startPolling(taskId);\n  };\n  const handleAnomalyModelTraining = async () => {\n    if (anomalyTrainingFiles.length === 0) {\n      setAnomalyMessage(\"Please select 'good' images to train the anomaly model.\");\n      return;\n    }\n    if (!anomalyProjectName.trim()) {\n      setAnomalyMessage(\"Please provide a project name for the anomaly model.\");\n      return;\n    }\n    setIsTrainingAnomaly(true);\n    setAnomalyMessage('Training anomaly detection model...');\n    try {\n      const formData = new FormData();\n      anomalyTrainingFiles.forEach(file => formData.append('files', file));\n      formData.append('project_name', anomalyProjectName.trim());\n      const response = await axios.post('/train-anomaly-model', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      setAnomalyMessage(`✅ Anomaly model trained successfully! Model saved at: ${response.data.model_path}`);\n      setAnomalyTrainingFiles([]);\n      setAnomalyProjectName('');\n    } catch (error) {\n      var _error$response, _error$response$data;\n      setAnomalyMessage(`❌ Failed to train anomaly model: ${((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.detail) || error.message}`);\n      console.error('Error training anomaly model:', error);\n    } finally {\n      setIsTrainingAnomaly(false);\n    }\n  };\n  const handleAnomalyTrainingFileChange = e => {\n    const selectedFiles = Array.from(e.target.files);\n    setAnomalyTrainingFiles(selectedFiles);\n    setAnomalyMessage('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '20px',\n      maxWidth: '1200px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uD83C\\uDFCB\\uFE0F Model Training\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        backgroundColor: '#f8fafc',\n        border: '1px solid #e2e8f0',\n        borderRadius: '8px',\n        padding: '20px',\n        marginBottom: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Start New Training\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: '15px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          style: {\n            display: 'block',\n            marginBottom: '5px',\n            fontWeight: 'bold'\n          },\n          children: \"Dataset (.zip): \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          accept: \".zip\",\n          onChange: e => setDataset(e.target.files[0]),\n          disabled: isTraining,\n          style: {\n            padding: '8px',\n            width: '300px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            fontSize: '12px',\n            color: '#666',\n            marginTop: '5px'\n          },\n          children: \"Upload a zip file containing images/ and labels/ folders with data.yaml\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: '15px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          style: {\n            display: 'block',\n            marginBottom: '5px',\n            fontWeight: 'bold'\n          },\n          children: \"Task Type: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: task,\n          onChange: e => setTask(e.target.value),\n          disabled: isTraining,\n          style: {\n            padding: '8px',\n            width: '200px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"detection\",\n            children: \"Object Detection\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"segmentation\",\n            children: \"Image Segmentation\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: '15px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          style: {\n            display: 'block',\n            marginBottom: '5px',\n            fontWeight: 'bold'\n          },\n          children: \"Training Device: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: device,\n          onChange: e => setDevice(e.target.value),\n          disabled: isTraining,\n          style: {\n            padding: '8px',\n            width: '200px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"cpu\",\n            children: \"\\uD83D\\uDDA5\\uFE0F CPU (Compatible, Slower)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"auto\",\n            children: \"\\uD83D\\uDE80 Auto-detect (GPU if available)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"cuda\",\n            children: \"\\u26A1 GPU/CUDA (Faster, requires NVIDIA GPU)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            fontSize: '12px',\n            color: '#666',\n            marginTop: '5px'\n          },\n          children: [device === 'cpu' && '⚠️ CPU training is slower but works on all systems', device === 'auto' && '🔍 Will automatically use GPU if available, fallback to CPU', device === 'cuda' && '⚡ Requires NVIDIA GPU with CUDA support']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleTrain,\n        disabled: !dataset || isTraining,\n        style: {\n          backgroundColor: !dataset || isTraining ? '#ccc' : '#1e3a8a',\n          color: 'white',\n          padding: '12px 24px',\n          border: 'none',\n          borderRadius: '6px',\n          cursor: !dataset || isTraining ? 'not-allowed' : 'pointer',\n          fontSize: '16px'\n        },\n        children: isTraining ? '🔄 Training in Progress...' : '🚀 Start Training'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 9\n      }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: '10px',\n          padding: '10px',\n          backgroundColor: message.includes('Error') ? '#fee2e2' : '#dcfce7',\n          border: `1px solid ${message.includes('Error') ? '#fca5a5' : '#86efac'}`,\n          borderRadius: '4px',\n          color: message.includes('Error') ? '#dc2626' : '#059669'\n        },\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }, this), isTraining && trainingStatus && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        backgroundColor: '#f0fdf4',\n        border: '1px solid #059669',\n        borderRadius: '8px',\n        padding: '20px',\n        marginBottom: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\uD83D\\uDD25 Training Progress\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'grid',\n          gridTemplateColumns: 'repeat(auto-fit, minmax(200px, 1fr))',\n          gap: '15px',\n          marginBottom: '15px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Task ID:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 15\n          }, this), \" \", currentTaskId]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Status:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              marginLeft: '8px',\n              padding: '2px 8px',\n              borderRadius: '4px',\n              backgroundColor: trainingStatus.status === 'running' ? '#059669' : trainingStatus.status === 'completed' ? '#16a34a' : trainingStatus.status === 'failed' ? '#dc2626' : '#6b7280',\n              color: 'white',\n              fontSize: '12px'\n            },\n            children: (_trainingStatus$statu = trainingStatus.status) === null || _trainingStatus$statu === void 0 ? void 0 : _trainingStatus$statu.toUpperCase()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Epoch:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 15\n          }, this), \" \", trainingStatus.current_epoch || 0, \" / \", trainingStatus.total_epochs || 10]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Overall Progress:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 15\n          }, this), \" \", Math.round(trainingStatus.progress || 0), \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Device:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 15\n          }, this), \" \", device === 'cpu' ? '🖥️ CPU' : device === 'auto' ? '🚀 Auto' : '⚡ GPU']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: '15px'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: '100%',\n            backgroundColor: '#e5e7eb',\n            borderRadius: '8px',\n            height: '12px',\n            overflow: 'hidden'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              width: `${trainingStatus.progress || 0}%`,\n              backgroundColor: '#059669',\n              height: '12px',\n              borderRadius: '8px',\n              transition: 'width 0.3s ease'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 9\n    }, this), isTraining && trainingLogs.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        backgroundColor: '#1f2937',\n        border: '1px solid #374151',\n        borderRadius: '8px',\n        padding: '15px',\n        marginBottom: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        style: {\n          color: '#f9fafb',\n          marginTop: '0'\n        },\n        children: \"\\uD83D\\uDCCB Training Logs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          backgroundColor: '#000',\n          color: '#10b981',\n          padding: '10px',\n          borderRadius: '4px',\n          height: '300px',\n          overflowY: 'auto',\n          fontSize: '12px',\n          fontFamily: 'monospace'\n        },\n        children: [trainingLogs.map((log, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: '2px'\n          },\n          children: log\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 15\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: logsEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 9\n    }, this), allTasks.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        backgroundColor: '#f8fafc',\n        border: '1px solid #e2e8f0',\n        borderRadius: '8px',\n        padding: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\uD83D\\uDCC8 Training History\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'grid',\n          gap: '10px'\n        },\n        children: allTasks.map((taskInfo, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            backgroundColor: 'white',\n            border: '1px solid #d1d5db',\n            borderRadius: '6px',\n            padding: '15px',\n            display: 'flex',\n            justifyContent: 'space-between',\n            alignItems: 'center'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: taskInfo.task_id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 373,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                fontSize: '14px',\n                color: '#6b7280'\n              },\n              children: [\"Status: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  color: taskInfo.status === 'completed' ? '#059669' : taskInfo.status === 'running' ? '#2563eb' : taskInfo.status === 'failed' ? '#dc2626' : '#6b7280'\n                },\n                children: taskInfo.status\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 375,\n                columnNumber: 29\n              }, this), \" | Progress: \", Math.round(taskInfo.progress || 0), \"% | Epoch: \", taskInfo.current_epoch || 0, \"/\", taskInfo.total_epochs || 0]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 374,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 372,\n            columnNumber: 17\n          }, this), (taskInfo.status === 'running' || taskInfo.status === 'starting') && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => monitorExistingTask(taskInfo.task_id),\n            style: {\n              backgroundColor: '#2563eb',\n              color: 'white',\n              padding: '6px 12px',\n              border: 'none',\n              borderRadius: '4px',\n              cursor: 'pointer',\n              fontSize: '12px'\n            },\n            children: \"\\uD83D\\uDCCA Monitor\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 385,\n            columnNumber: 19\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 177,\n    columnNumber: 5\n  }, this);\n}\nexport default Train;","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","jsxDEV","_jsxDEV","Train","_trainingStatus$statu","dataset","setDataset","task","setTask","device","setDevice","message","setMessage","isTraining","setIsTraining","currentTaskId","setCurrentTaskId","trainingStatus","setTrainingStatus","trainingLogs","setTrainingLogs","allTasks","setAllTasks","logsEndRef","pollingInterval","anomalyTrainingFiles","setAnomalyTrainingFiles","anomalyProjectName","setAnomalyProjectName","isTrainingAnomaly","setIsTrainingAnomaly","anomalyMessage","setAnomalyMessage","scrollToBottom","_logsEndRef$current","current","scrollIntoView","behavior","fetchAllTasks","clearInterval","response","get","data","tasks","error","console","fetchTrainingStatus","taskId","statusResponse","logsResponse","Promise","all","logs","status","startPolling","setInterval","handleTrain","endpoint","formData","FormData","append","post","headers","task_id","monitorExistingTask","handleAnomalyModelTraining","length","trim","forEach","file","model_path","_error$response","_error$response$data","detail","handleAnomalyTrainingFileChange","e","selectedFiles","Array","from","target","files","style","padding","maxWidth","children","fileName","_jsxFileName","lineNumber","columnNumber","backgroundColor","border","borderRadius","marginBottom","display","fontWeight","type","accept","onChange","disabled","width","fontSize","color","marginTop","value","onClick","cursor","includes","gridTemplateColumns","gap","marginLeft","toUpperCase","current_epoch","total_epochs","Math","round","progress","height","overflow","transition","overflowY","fontFamily","map","log","index","ref","taskInfo","justifyContent","alignItems"],"sources":["/Users/truonghaidang/Desktop/open-trainer/frontend/src/components/Train.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\n\nfunction Train() {\n  const [dataset, setDataset] = useState(null);\n  const [task, setTask] = useState('detection');\n  const [device, setDevice] = useState('cpu');\n  const [message, setMessage] = useState('');\n  const [isTraining, setIsTraining] = useState(false);\n  const [currentTaskId, setCurrentTaskId] = useState(null);\n  const [trainingStatus, setTrainingStatus] = useState(null);\n  const [trainingLogs, setTrainingLogs] = useState([]);\n  const [allTasks, setAllTasks] = useState([]);\n  const logsEndRef = useRef(null);\n  const pollingInterval = useRef(null);\n\n  // Anomaly model training state\n  const [anomalyTrainingFiles, setAnomalyTrainingFiles] = useState([]);\n  const [anomalyProjectName, setAnomalyProjectName] = useState('');\n  const [isTrainingAnomaly, setIsTrainingAnomaly] = useState(false);\n  const [anomalyMessage, setAnomalyMessage] = useState('');\n\n  // Auto-scroll logs to bottom\n  const scrollToBottom = () => {\n    logsEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\n  };\n\n  useEffect(() => {\n    scrollToBottom();\n  }, [trainingLogs]);\n\n  // Fetch all training tasks on component mount\n  useEffect(() => {\n    fetchAllTasks();\n    \n    // Cleanup polling on unmount\n    return () => {\n      if (pollingInterval.current) {\n        clearInterval(pollingInterval.current);\n      }\n    };\n  }, []);\n\n  const fetchAllTasks = async () => {\n    try {\n      const response = await axios.get('/training-tasks');\n      setAllTasks(response.data.tasks || []);\n    } catch (error) {\n      console.error('Error fetching training tasks:', error);\n    }\n  };\n\n  const fetchTrainingStatus = async (taskId) => {\n    try {\n      const [statusResponse, logsResponse] = await Promise.all([\n        axios.get(`/training-status/${taskId}`),\n        axios.get(`/training-logs/${taskId}?lines=50`)\n      ]);\n      \n      setTrainingStatus(statusResponse.data);\n      setTrainingLogs(logsResponse.data.logs || []);\n      \n      // Stop polling if training completed or failed\n      if (statusResponse.data.status === 'completed' || statusResponse.data.status === 'failed') {\n        setIsTraining(false);\n        if (pollingInterval.current) {\n          clearInterval(pollingInterval.current);\n          pollingInterval.current = null;\n        }\n        fetchAllTasks(); // Refresh task list\n      }\n    } catch (error) {\n      console.error('Error fetching training status:', error);\n    }\n  };\n\n  const startPolling = (taskId) => {\n    // Clear any existing polling\n    if (pollingInterval.current) {\n      clearInterval(pollingInterval.current);\n    }\n    \n    // Start new polling\n    pollingInterval.current = setInterval(() => {\n      fetchTrainingStatus(taskId);\n    }, 2000); // Poll every 2 seconds\n    \n    // Fetch immediately\n    fetchTrainingStatus(taskId);\n  };\n\n  const handleTrain = async () => {\n    if (!dataset) {\n      setMessage('Please select a dataset zip file.');\n      return;\n    }\n\n    const endpoint = task === 'detection' ? '/train-detect' : '/train-segment';\n    const formData = new FormData();\n    formData.append('file', dataset);\n    formData.append('device', device);\n\n    setIsTraining(true);\n    setMessage('Starting training...');\n    setTrainingStatus(null);\n    setTrainingLogs([]);\n\n    try {\n      const response = await axios.post(endpoint, formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n        },\n      });\n      \n      setMessage(response.data.message);\n      setCurrentTaskId(response.data.task_id);\n      \n      // Start polling for progress\n      startPolling(response.data.task_id);\n      \n    } catch (error) {\n      setMessage('Error starting training.');\n      setIsTraining(false);\n      console.error(error);\n    }\n  };\n\n  const monitorExistingTask = (taskId) => {\n    setCurrentTaskId(taskId);\n    setIsTraining(true);\n    startPolling(taskId);\n  };\n\n  const handleAnomalyModelTraining = async () => {\n    if (anomalyTrainingFiles.length === 0) {\n      setAnomalyMessage(\"Please select 'good' images to train the anomaly model.\");\n      return;\n    }\n\n    if (!anomalyProjectName.trim()) {\n      setAnomalyMessage(\"Please provide a project name for the anomaly model.\");\n      return;\n    }\n\n    setIsTrainingAnomaly(true);\n    setAnomalyMessage('Training anomaly detection model...');\n\n    try {\n      const formData = new FormData();\n      anomalyTrainingFiles.forEach(file => formData.append('files', file));\n      formData.append('project_name', anomalyProjectName.trim());\n\n      const response = await axios.post('/train-anomaly-model', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n        },\n      });\n\n      setAnomalyMessage(`✅ Anomaly model trained successfully! Model saved at: ${response.data.model_path}`);\n      setAnomalyTrainingFiles([]);\n      setAnomalyProjectName('');\n    } catch (error) {\n      setAnomalyMessage(`❌ Failed to train anomaly model: ${error.response?.data?.detail || error.message}`);\n      console.error('Error training anomaly model:', error);\n    } finally {\n      setIsTrainingAnomaly(false);\n    }\n  };\n\n  const handleAnomalyTrainingFileChange = (e) => {\n    const selectedFiles = Array.from(e.target.files);\n    setAnomalyTrainingFiles(selectedFiles);\n    setAnomalyMessage('');\n  };\n\n  return (\n    <div style={{ padding: '20px', maxWidth: '1200px' }}>\n      <h2>🏋️ Model Training</h2>\n      \n      {/* Training Setup */}\n      <div style={{ \n        backgroundColor: '#f8fafc', \n        border: '1px solid #e2e8f0', \n        borderRadius: '8px',\n        padding: '20px',\n        marginBottom: '20px'\n      }}>\n        <h3>Start New Training</h3>\n        <div style={{ marginBottom: '15px' }}>\n          <label style={{ display: 'block', marginBottom: '5px', fontWeight: 'bold' }}>Dataset (.zip): </label>\n          <input \n            type=\"file\" \n            accept=\".zip\"\n            onChange={(e) => setDataset(e.target.files[0])}\n            disabled={isTraining}\n            style={{ padding: '8px', width: '300px' }}\n          />\n          <div style={{ fontSize: '12px', color: '#666', marginTop: '5px' }}>\n            Upload a zip file containing images/ and labels/ folders with data.yaml\n          </div>\n        </div>\n        <div style={{ marginBottom: '15px' }}>\n          <label style={{ display: 'block', marginBottom: '5px', fontWeight: 'bold' }}>Task Type: </label>\n          <select \n            value={task} \n            onChange={(e) => setTask(e.target.value)}\n            disabled={isTraining}\n            style={{ padding: '8px', width: '200px' }}\n          >\n            <option value=\"detection\">Object Detection</option>\n            <option value=\"segmentation\">Image Segmentation</option>\n          </select>\n        </div>\n        <div style={{ marginBottom: '15px' }}>\n          <label style={{ display: 'block', marginBottom: '5px', fontWeight: 'bold' }}>Training Device: </label>\n          <select \n            value={device} \n            onChange={(e) => setDevice(e.target.value)}\n            disabled={isTraining}\n            style={{ padding: '8px', width: '200px' }}\n          >\n            <option value=\"cpu\">🖥️ CPU (Compatible, Slower)</option>\n            <option value=\"auto\">🚀 Auto-detect (GPU if available)</option>\n            <option value=\"cuda\">⚡ GPU/CUDA (Faster, requires NVIDIA GPU)</option>\n          </select>\n          <div style={{ fontSize: '12px', color: '#666', marginTop: '5px' }}>\n            {device === 'cpu' && '⚠️ CPU training is slower but works on all systems'}\n            {device === 'auto' && '🔍 Will automatically use GPU if available, fallback to CPU'}\n            {device === 'cuda' && '⚡ Requires NVIDIA GPU with CUDA support'}\n          </div>\n        </div>\n        <button \n          onClick={handleTrain}\n          disabled={!dataset || isTraining}\n          style={{\n            backgroundColor: !dataset || isTraining ? '#ccc' : '#1e3a8a',\n            color: 'white',\n            padding: '12px 24px',\n            border: 'none',\n            borderRadius: '6px',\n            cursor: !dataset || isTraining ? 'not-allowed' : 'pointer',\n            fontSize: '16px'\n          }}\n        >\n          {isTraining ? '🔄 Training in Progress...' : '🚀 Start Training'}\n        </button>\n        {message && (\n          <div style={{ \n            marginTop: '10px', \n            padding: '10px',\n            backgroundColor: message.includes('Error') ? '#fee2e2' : '#dcfce7',\n            border: `1px solid ${message.includes('Error') ? '#fca5a5' : '#86efac'}`,\n            borderRadius: '4px',\n            color: message.includes('Error') ? '#dc2626' : '#059669'\n          }}>\n            {message}\n          </div>\n        )}\n      </div>\n\n      {/* Training Progress */}\n      {isTraining && trainingStatus && (\n        <div style={{ \n          backgroundColor: '#f0fdf4', \n          border: '1px solid #059669', \n          borderRadius: '8px',\n          padding: '20px',\n          marginBottom: '20px'\n        }}>\n          <h3>🔥 Training Progress</h3>\n          <div style={{ display: 'grid', gridTemplateColumns: 'repeat(auto-fit, minmax(200px, 1fr))', gap: '15px', marginBottom: '15px' }}>\n            <div>\n              <strong>Task ID:</strong> {currentTaskId}\n            </div>\n            <div>\n              <strong>Status:</strong> \n              <span style={{ \n                marginLeft: '8px',\n                padding: '2px 8px',\n                borderRadius: '4px',\n                backgroundColor: trainingStatus.status === 'running' ? '#059669' : \n                                 trainingStatus.status === 'completed' ? '#16a34a' :\n                                 trainingStatus.status === 'failed' ? '#dc2626' : '#6b7280',\n                color: 'white',\n                fontSize: '12px'\n              }}>\n                {trainingStatus.status?.toUpperCase()}\n              </span>\n            </div>\n            <div>\n              <strong>Epoch:</strong> {trainingStatus.current_epoch || 0} / {trainingStatus.total_epochs || 10}\n            </div>\n            <div>\n              <strong>Overall Progress:</strong> {Math.round(trainingStatus.progress || 0)}%\n            </div>\n            <div>\n              <strong>Device:</strong> {device === 'cpu' ? '🖥️ CPU' : device === 'auto' ? '🚀 Auto' : '⚡ GPU'}\n            </div>\n          </div>\n          \n          {/* Progress Bar */}\n          <div style={{ marginBottom: '15px' }}>\n            <div style={{ \n              width: '100%', \n              backgroundColor: '#e5e7eb', \n              borderRadius: '8px',\n              height: '12px',\n              overflow: 'hidden'\n            }}>\n              <div style={{ \n                width: `${trainingStatus.progress || 0}%`,\n                backgroundColor: '#059669',\n                height: '12px',\n                borderRadius: '8px',\n                transition: 'width 0.3s ease'\n              }} />\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Training Logs */}\n      {isTraining && trainingLogs.length > 0 && (\n        <div style={{ \n          backgroundColor: '#1f2937', \n          border: '1px solid #374151', \n          borderRadius: '8px',\n          padding: '15px',\n          marginBottom: '20px'\n        }}>\n          <h3 style={{ color: '#f9fafb', marginTop: '0' }}>📋 Training Logs</h3>\n          <div style={{\n            backgroundColor: '#000',\n            color: '#10b981',\n            padding: '10px',\n            borderRadius: '4px',\n            height: '300px',\n            overflowY: 'auto',\n            fontSize: '12px',\n            fontFamily: 'monospace'\n          }}>\n            {trainingLogs.map((log, index) => (\n              <div key={index} style={{ marginBottom: '2px' }}>\n                {log}\n              </div>\n            ))}\n            <div ref={logsEndRef} />\n          </div>\n        </div>\n      )}\n\n      {/* All Training Tasks */}\n      {allTasks.length > 0 && (\n        <div style={{ \n          backgroundColor: '#f8fafc', \n          border: '1px solid #e2e8f0', \n          borderRadius: '8px',\n          padding: '20px'\n        }}>\n          <h3>📈 Training History</h3>\n          <div style={{ display: 'grid', gap: '10px' }}>\n            {allTasks.map((taskInfo, index) => (\n              <div key={index} style={{\n                backgroundColor: 'white',\n                border: '1px solid #d1d5db',\n                borderRadius: '6px',\n                padding: '15px',\n                display: 'flex',\n                justifyContent: 'space-between',\n                alignItems: 'center'\n              }}>\n                <div>\n                  <strong>{taskInfo.task_id}</strong>\n                  <div style={{ fontSize: '14px', color: '#6b7280' }}>\n                    Status: <span style={{\n                      color: taskInfo.status === 'completed' ? '#059669' :\n                             taskInfo.status === 'running' ? '#2563eb' :\n                             taskInfo.status === 'failed' ? '#dc2626' : '#6b7280'\n                    }}>{taskInfo.status}</span> |\n                    Progress: {Math.round(taskInfo.progress || 0)}% |\n                    Epoch: {taskInfo.current_epoch || 0}/{taskInfo.total_epochs || 0}\n                  </div>\n                </div>\n                {(taskInfo.status === 'running' || taskInfo.status === 'starting') && (\n                  <button\n                    onClick={() => monitorExistingTask(taskInfo.task_id)}\n                    style={{\n                      backgroundColor: '#2563eb',\n                      color: 'white',\n                      padding: '6px 12px',\n                      border: 'none',\n                      borderRadius: '4px',\n                      cursor: 'pointer',\n                      fontSize: '12px'\n                    }}\n                  >\n                    📊 Monitor\n                  </button>\n                )}\n              </div>\n            ))}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default Train;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}