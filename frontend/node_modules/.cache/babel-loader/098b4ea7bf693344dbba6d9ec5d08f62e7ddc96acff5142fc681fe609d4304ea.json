{"ast":null,"code":"var _jsxFileName = \"/Users/truonghaidang/Desktop/open-trainer/frontend/src/components/auto-annotation/AutoAnnotationInference.js\";\nimport React, { useState } from 'react';\nimport './AutoAnnotationInference.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AutoAnnotationInference({\n  projectId,\n  projectType,\n  trainingStatus\n}) {\n  const [inferenceState, setInferenceState] = useState({\n    images: [],\n    confidenceThreshold: 0.5,\n    processing: false,\n    results: [],\n    dragActive: false\n  });\n  const [errors, setErrors] = useState({});\n  const acceptedImageTypes = ['image/jpeg', 'image/jpg', 'image/png'];\n  const handleImagesDrop = e => {\n    e.preventDefault();\n    setInferenceState(prev => ({\n      ...prev,\n      dragActive: false\n    }));\n    const files = Array.from(e.dataTransfer.files);\n    const imageFiles = files.filter(file => acceptedImageTypes.includes(file.type));\n    if (imageFiles.length !== files.length) {\n      setErrors({\n        images: 'Some files were not images and were ignored'\n      });\n    } else {\n      setErrors(prev => ({\n        ...prev,\n        images: ''\n      }));\n    }\n    setInferenceState(prev => ({\n      ...prev,\n      images: imageFiles\n    }));\n  };\n  const handleImagesSelect = e => {\n    const files = Array.from(e.target.files);\n    setInferenceState(prev => ({\n      ...prev,\n      images: files\n    }));\n    setErrors(prev => ({\n      ...prev,\n      images: ''\n    }));\n  };\n  const handleSettingChange = (setting, value) => {\n    setInferenceState(prev => ({\n      ...prev,\n      [setting]: value\n    }));\n  };\n  const removeImage = index => {\n    setInferenceState(prev => ({\n      ...prev,\n      images: prev.images.filter((_, i) => i !== index)\n    }));\n  };\n  const runAutoAnnotation = async () => {\n    if (inferenceState.images.length === 0) {\n      setErrors({\n        images: 'Please select at least one image'\n      });\n      return;\n    }\n    setInferenceState(prev => ({\n      ...prev,\n      processing: true\n    }));\n    setErrors({});\n    try {\n      const formData = new FormData();\n\n      // Add images\n      inferenceState.images.forEach(image => {\n        formData.append('images', image);\n      });\n\n      // Add settings\n      formData.append('confidence_threshold', inferenceState.confidenceThreshold);\n      const response = await fetch(`/api/auto-annotation/projects/${projectId}/annotate`, {\n        method: 'POST',\n        body: formData\n      });\n      const result = await response.json();\n      if (result.status === 'success') {\n        setInferenceState(prev => ({\n          ...prev,\n          results: result.results,\n          images: [] // Clear images after successful processing\n        }));\n      } else {\n        setErrors({\n          annotation: result.message || 'Auto-annotation failed'\n        });\n      }\n    } catch (error) {\n      console.error('Auto-annotation failed:', error);\n      setErrors({\n        annotation: 'Network error. Please try again.'\n      });\n    } finally {\n      setInferenceState(prev => ({\n        ...prev,\n        processing: false\n      }));\n    }\n  };\n  const downloadResults = () => {\n    // Create downloadable results\n    const resultsData = {\n      project_id: projectId,\n      project_type: projectType,\n      timestamp: new Date().toISOString(),\n      results: inferenceState.results\n    };\n    const dataStr = JSON.stringify(resultsData, null, 2);\n    const dataBlob = new Blob([dataStr], {\n      type: 'application/json'\n    });\n    const url = URL.createObjectURL(dataBlob);\n    const link = document.createElement('a');\n    link.href = url;\n    link.download = `auto_annotation_results_${new Date().toISOString().split('T')[0]}.json`;\n    link.click();\n    URL.revokeObjectURL(url);\n  };\n  const formatFileSize = bytes => {\n    if (bytes === 0) return '0 Bytes';\n    const k = 1024;\n    const sizes = ['Bytes', 'KB', 'MB', 'GB'];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n  };\n  const canRunInference = trainingStatus === 'completed';\n  if (!canRunInference) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"auto-annotation-inference\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"not-ready-state\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"not-ready-icon\",\n          children: \"\\u26A0\\uFE0F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Model Not Ready\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Please complete model training before running auto-annotation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"status-info\",\n          children: [\"Current training status: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: trainingStatus\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 38\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auto-annotation-inference\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"inference-settings\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"\\u2699\\uFE0F Annotation Settings\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"settings-grid\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"setting-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Confidence Threshold\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"threshold-control\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"range\",\n              value: inferenceState.confidenceThreshold,\n              onChange: e => handleSettingChange('confidenceThreshold', parseFloat(e.target.value)),\n              min: \"0.1\",\n              max: \"1.0\",\n              step: \"0.1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"threshold-value\",\n              children: inferenceState.confidenceThreshold\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"setting-help\",\n            children: \"Minimum confidence for defect detection\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"image-upload-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"\\uD83D\\uDCF8 Upload Images for Annotation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `drop-zone ${inferenceState.dragActive ? 'active' : ''}`,\n        onDrop: handleImagesDrop,\n        onDragOver: e => e.preventDefault(),\n        onDragEnter: () => setInferenceState(prev => ({\n          ...prev,\n          dragActive: true\n        })),\n        onDragLeave: () => setInferenceState(prev => ({\n          ...prev,\n          dragActive: false\n        })),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"drop-zone-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"drop-icon\",\n            children: \"\\uD83D\\uDDBC\\uFE0F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Drag and drop images here, or click to select\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"file-types\",\n            children: \"Supported: JPG, JPEG, PNG\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            multiple: true,\n            accept: \".jpg,.jpeg,.png\",\n            onChange: handleImagesSelect,\n            className: \"hidden-file-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this), errors.images && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: errors.images\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 11\n      }, this), inferenceState.images.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"image-preview\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          children: [\"Selected Images (\", inferenceState.images.length, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"image-grid\",\n          children: [inferenceState.images.slice(0, 8).map((file, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"image-preview-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: URL.createObjectURL(file),\n              alt: `Preview ${index}`,\n              onLoad: e => URL.revokeObjectURL(e.target.src)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"image-info\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"image-name\",\n                children: file.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"image-size\",\n                children: formatFileSize(file.size)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"remove-button\",\n              onClick: () => removeImage(index),\n              children: \"\\xD7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 17\n          }, this)), inferenceState.images.length > 8 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"more-images\",\n            children: [\"+\", inferenceState.images.length - 8, \" more\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"process-section\",\n      children: [errors.annotation && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-banner\",\n        children: [\"\\u274C \", errors.annotation]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"process-button\",\n        onClick: runAutoAnnotation,\n        disabled: inferenceState.processing || inferenceState.images.length === 0,\n        children: inferenceState.processing ? '⏳ Processing...' : `🤖 Run ${projectType === 'object_detection' ? 'Object Detection' : 'Segmentation'}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"process-info\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Will process \", inferenceState.images.length, \" images using trained \", projectType === 'object_detection' ? 'YOLO' : 'SAM2', \" model\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 7\n    }, this), inferenceState.results.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"results-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"results-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"\\uD83D\\uDCCA Annotation Results\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"download-button\",\n          onClick: downloadResults,\n          children: \"\\uD83D\\uDCBE Download Results\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"results-grid\",\n        children: inferenceState.results.map((result, index) => {\n          var _result$defect_detect, _result$defect_detect2, _result$defect_masks;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"result-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"result-header\",\n              children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                children: result.filename\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 270,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: `result-status ${result.status}`,\n                children: [result.status === 'success' ? '✅' : '❌', \" \", result.status]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 271,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 17\n            }, this), result.status === 'success' ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"result-content\",\n              children: [result.annotated_image_base64 && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"annotated-image\",\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: `data:image/jpeg;base64,${result.annotated_image_base64}`,\n                  alt: `Annotated ${result.filename}`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 280,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 279,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"detection-summary\",\n                children: projectType === 'object_detection' ? /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Defects Found:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 290,\n                    columnNumber: 27\n                  }, this), \" \", ((_result$defect_detect = result.defect_detections) === null || _result$defect_detect === void 0 ? void 0 : _result$defect_detect.length) || 0, (_result$defect_detect2 = result.defect_detections) === null || _result$defect_detect2 === void 0 ? void 0 : _result$defect_detect2.map((detection, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"detection-item\",\n                    children: [detection.class, \": \", (detection.confidence * 100).toFixed(1), \"%\"]\n                  }, idx, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 292,\n                    columnNumber: 29\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 289,\n                  columnNumber: 25\n                }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Masks Generated:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 299,\n                    columnNumber: 27\n                  }, this), \" \", ((_result$defect_masks = result.defect_masks) === null || _result$defect_masks === void 0 ? void 0 : _result$defect_masks.length) || 0]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 298,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 287,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"result-error\",\n              children: result.message || 'Processing failed'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 305,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"workflow-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \"\\uD83D\\uDD04 Simplified Auto-Annotation Workflow\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"workflow-steps\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"workflow-step\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"step-number\",\n            children: \"1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"step-text\",\n            children: [\"Load trained \", projectType === 'object_detection' ? 'YOLO' : 'SAM2', \" model\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"workflow-step\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"step-number\",\n            children: \"2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"step-text\",\n            children: \"Apply model directly to full images\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"workflow-step\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"step-number\",\n            children: \"3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"step-text\",\n            children: [\"Generate \", projectType === 'object_detection' ? 'bounding boxes' : 'precise masks', \" for detected defects\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"workflow-step\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"step-number\",\n            children: \"4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"step-text\",\n            children: \"Return annotated images with confidence scores\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"workflow-note\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\uD83D\\uDCDD \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Note:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 17\n          }, this), \" This simplified pipeline matches training and inference data exactly, ensuring optimal model performance.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 143,\n    columnNumber: 5\n  }, this);\n}\nexport default AutoAnnotationInference;","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","AutoAnnotationInference","projectId","projectType","trainingStatus","inferenceState","setInferenceState","images","confidenceThreshold","processing","results","dragActive","errors","setErrors","acceptedImageTypes","handleImagesDrop","e","preventDefault","prev","files","Array","from","dataTransfer","imageFiles","filter","file","includes","type","length","handleImagesSelect","target","handleSettingChange","setting","value","removeImage","index","_","i","runAutoAnnotation","formData","FormData","forEach","image","append","response","fetch","method","body","result","json","status","annotation","message","error","console","downloadResults","resultsData","project_id","project_type","timestamp","Date","toISOString","dataStr","JSON","stringify","dataBlob","Blob","url","URL","createObjectURL","link","document","createElement","href","download","split","click","revokeObjectURL","formatFileSize","bytes","k","sizes","Math","floor","log","parseFloat","pow","toFixed","canRunInference","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","min","max","step","onDrop","onDragOver","onDragEnter","onDragLeave","multiple","accept","slice","map","src","alt","onLoad","name","size","onClick","disabled","_result$defect_detect","_result$defect_detect2","_result$defect_masks","filename","annotated_image_base64","defect_detections","detection","idx","class","confidence","defect_masks"],"sources":["/Users/truonghaidang/Desktop/open-trainer/frontend/src/components/auto-annotation/AutoAnnotationInference.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './AutoAnnotationInference.css';\n\nfunction AutoAnnotationInference({ projectId, projectType, trainingStatus }) {\n  const [inferenceState, setInferenceState] = useState({\n    images: [],\n    confidenceThreshold: 0.5,\n    processing: false,\n    results: [],\n    dragActive: false\n  });\n  const [errors, setErrors] = useState({});\n\n  const acceptedImageTypes = ['image/jpeg', 'image/jpg', 'image/png'];\n\n  const handleImagesDrop = (e) => {\n    e.preventDefault();\n    setInferenceState(prev => ({ ...prev, dragActive: false }));\n    \n    const files = Array.from(e.dataTransfer.files);\n    const imageFiles = files.filter(file => acceptedImageTypes.includes(file.type));\n    \n    if (imageFiles.length !== files.length) {\n      setErrors({ images: 'Some files were not images and were ignored' });\n    } else {\n      setErrors(prev => ({ ...prev, images: '' }));\n    }\n    \n    setInferenceState(prev => ({ ...prev, images: imageFiles }));\n  };\n\n  const handleImagesSelect = (e) => {\n    const files = Array.from(e.target.files);\n    setInferenceState(prev => ({ ...prev, images: files }));\n    setErrors(prev => ({ ...prev, images: '' }));\n  };\n\n  const handleSettingChange = (setting, value) => {\n    setInferenceState(prev => ({\n      ...prev,\n      [setting]: value\n    }));\n  };\n\n  const removeImage = (index) => {\n    setInferenceState(prev => ({\n      ...prev,\n      images: prev.images.filter((_, i) => i !== index)\n    }));\n  };\n\n  const runAutoAnnotation = async () => {\n    if (inferenceState.images.length === 0) {\n      setErrors({ images: 'Please select at least one image' });\n      return;\n    }\n\n    setInferenceState(prev => ({ ...prev, processing: true }));\n    setErrors({});\n    \n    try {\n      const formData = new FormData();\n      \n      // Add images\n      inferenceState.images.forEach(image => {\n        formData.append('images', image);\n      });\n      \n      // Add settings\n      formData.append('confidence_threshold', inferenceState.confidenceThreshold);\n\n      const response = await fetch(`/api/auto-annotation/projects/${projectId}/annotate`, {\n        method: 'POST',\n        body: formData\n      });\n\n      const result = await response.json();\n      \n      if (result.status === 'success') {\n        setInferenceState(prev => ({\n          ...prev,\n          results: result.results,\n          images: [] // Clear images after successful processing\n        }));\n      } else {\n        setErrors({ annotation: result.message || 'Auto-annotation failed' });\n      }\n    } catch (error) {\n      console.error('Auto-annotation failed:', error);\n      setErrors({ annotation: 'Network error. Please try again.' });\n    } finally {\n      setInferenceState(prev => ({ ...prev, processing: false }));\n    }\n  };\n\n  const downloadResults = () => {\n    // Create downloadable results\n    const resultsData = {\n      project_id: projectId,\n      project_type: projectType,\n      timestamp: new Date().toISOString(),\n      results: inferenceState.results\n    };\n    \n    const dataStr = JSON.stringify(resultsData, null, 2);\n    const dataBlob = new Blob([dataStr], { type: 'application/json' });\n    const url = URL.createObjectURL(dataBlob);\n    \n    const link = document.createElement('a');\n    link.href = url;\n    link.download = `auto_annotation_results_${new Date().toISOString().split('T')[0]}.json`;\n    link.click();\n    \n    URL.revokeObjectURL(url);\n  };\n\n  const formatFileSize = (bytes) => {\n    if (bytes === 0) return '0 Bytes';\n    const k = 1024;\n    const sizes = ['Bytes', 'KB', 'MB', 'GB'];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n  };\n\n  const canRunInference = trainingStatus === 'completed';\n\n  if (!canRunInference) {\n    return (\n      <div className=\"auto-annotation-inference\">\n        <div className=\"not-ready-state\">\n          <div className=\"not-ready-icon\">⚠️</div>\n          <h3>Model Not Ready</h3>\n          <p>Please complete model training before running auto-annotation</p>\n          <div className=\"status-info\">\n            Current training status: <strong>{trainingStatus}</strong>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"auto-annotation-inference\">\n      {/* Settings Section */}\n      <div className=\"inference-settings\">\n        <h4>⚙️ Annotation Settings</h4>\n        \n        <div className=\"settings-grid\">\n          <div className=\"setting-item\">\n            <label>Confidence Threshold</label>\n            <div className=\"threshold-control\">\n              <input\n                type=\"range\"\n                value={inferenceState.confidenceThreshold}\n                onChange={(e) => handleSettingChange('confidenceThreshold', parseFloat(e.target.value))}\n                min=\"0.1\"\n                max=\"1.0\"\n                step=\"0.1\"\n              />\n              <span className=\"threshold-value\">{inferenceState.confidenceThreshold}</span>\n            </div>\n            <span className=\"setting-help\">Minimum confidence for defect detection</span>\n          </div>\n        </div>\n      </div>\n\n      {/* Image Upload Section */}\n      <div className=\"image-upload-section\">\n        <h4>📸 Upload Images for Annotation</h4>\n        \n        <div \n          className={`drop-zone ${inferenceState.dragActive ? 'active' : ''}`}\n          onDrop={handleImagesDrop}\n          onDragOver={(e) => e.preventDefault()}\n          onDragEnter={() => setInferenceState(prev => ({ ...prev, dragActive: true }))}\n          onDragLeave={() => setInferenceState(prev => ({ ...prev, dragActive: false }))}\n        >\n          <div className=\"drop-zone-content\">\n            <div className=\"drop-icon\">🖼️</div>\n            <p>Drag and drop images here, or click to select</p>\n            <p className=\"file-types\">Supported: JPG, JPEG, PNG</p>\n            <input\n              type=\"file\"\n              multiple\n              accept=\".jpg,.jpeg,.png\"\n              onChange={handleImagesSelect}\n              className=\"hidden-file-input\"\n            />\n          </div>\n        </div>\n        \n        {errors.images && (\n          <div className=\"error-message\">{errors.images}</div>\n        )}\n        \n        {/* Image Preview */}\n        {inferenceState.images.length > 0 && (\n          <div className=\"image-preview\">\n            <h5>Selected Images ({inferenceState.images.length})</h5>\n            <div className=\"image-grid\">\n              {inferenceState.images.slice(0, 8).map((file, index) => (\n                <div key={index} className=\"image-preview-item\">\n                  <img \n                    src={URL.createObjectURL(file)} \n                    alt={`Preview ${index}`}\n                    onLoad={(e) => URL.revokeObjectURL(e.target.src)}\n                  />\n                  <div className=\"image-info\">\n                    <span className=\"image-name\">{file.name}</span>\n                    <span className=\"image-size\">{formatFileSize(file.size)}</span>\n                  </div>\n                  <button \n                    className=\"remove-button\"\n                    onClick={() => removeImage(index)}\n                  >\n                    ×\n                  </button>\n                </div>\n              ))}\n              {inferenceState.images.length > 8 && (\n                <div className=\"more-images\">\n                  +{inferenceState.images.length - 8} more\n                </div>\n              )}\n            </div>\n          </div>\n        )}\n      </div>\n\n      {/* Process Button */}\n      <div className=\"process-section\">\n        {errors.annotation && (\n          <div className=\"error-banner\">\n            ❌ {errors.annotation}\n          </div>\n        )}\n        \n        <button\n          className=\"process-button\"\n          onClick={runAutoAnnotation}\n          disabled={inferenceState.processing || inferenceState.images.length === 0}\n        >\n          {inferenceState.processing \n            ? '⏳ Processing...' \n            : `🤖 Run ${projectType === 'object_detection' ? 'Object Detection' : 'Segmentation'}`\n          }\n        </button>\n        \n        <div className=\"process-info\">\n          <p>\n            Will process {inferenceState.images.length} images using trained {projectType === 'object_detection' ? 'YOLO' : 'SAM2'} model\n          </p>\n        </div>\n      </div>\n\n      {/* Results Section */}\n      {inferenceState.results.length > 0 && (\n        <div className=\"results-section\">\n          <div className=\"results-header\">\n            <h4>📊 Annotation Results</h4>\n            <button className=\"download-button\" onClick={downloadResults}>\n              💾 Download Results\n            </button>\n          </div>\n          \n          <div className=\"results-grid\">\n            {inferenceState.results.map((result, index) => (\n              <div key={index} className=\"result-item\">\n                <div className=\"result-header\">\n                  <h5>{result.filename}</h5>\n                  <span className={`result-status ${result.status}`}>\n                    {result.status === 'success' ? '✅' : '❌'} {result.status}\n                  </span>\n                </div>\n                \n                {result.status === 'success' ? (\n                  <div className=\"result-content\">\n                    {result.annotated_image_base64 && (\n                      <div className=\"annotated-image\">\n                        <img \n                          src={`data:image/jpeg;base64,${result.annotated_image_base64}`}\n                          alt={`Annotated ${result.filename}`}\n                        />\n                      </div>\n                    )}\n                    \n                    <div className=\"detection-summary\">\n                      {projectType === 'object_detection' ? (\n                        <div>\n                          <strong>Defects Found:</strong> {result.defect_detections?.length || 0}\n                          {result.defect_detections?.map((detection, idx) => (\n                            <div key={idx} className=\"detection-item\">\n                              {detection.class}: {(detection.confidence * 100).toFixed(1)}%\n                            </div>\n                          ))}\n                        </div>\n                      ) : (\n                        <div>\n                          <strong>Masks Generated:</strong> {result.defect_masks?.length || 0}\n                        </div>\n                      )}\n                    </div>\n                  </div>\n                ) : (\n                  <div className=\"result-error\">\n                    {result.message || 'Processing failed'}\n                  </div>\n                )}\n              </div>\n            ))}\n          </div>\n        </div>\n      )}\n\n      {/* Workflow Info */}\n      <div className=\"workflow-info\">\n        <h5>🔄 Simplified Auto-Annotation Workflow</h5>\n        <div className=\"workflow-steps\">\n          <div className=\"workflow-step\">\n            <span className=\"step-number\">1</span>\n            <span className=\"step-text\">Load trained {projectType === 'object_detection' ? 'YOLO' : 'SAM2'} model</span>\n          </div>\n          <div className=\"workflow-step\">\n            <span className=\"step-number\">2</span>\n            <span className=\"step-text\">Apply model directly to full images</span>\n          </div>\n          <div className=\"workflow-step\">\n            <span className=\"step-number\">3</span>\n            <span className=\"step-text\">\n              Generate {projectType === 'object_detection' ? 'bounding boxes' : 'precise masks'} for detected defects\n            </span>\n          </div>\n          <div className=\"workflow-step\">\n            <span className=\"step-number\">4</span>\n            <span className=\"step-text\">Return annotated images with confidence scores</span>\n          </div>\n        </div>\n        <div className=\"workflow-note\">\n          <p>📝 <strong>Note:</strong> This simplified pipeline matches training and inference data exactly, ensuring optimal model performance.</p>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default AutoAnnotationInference;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}