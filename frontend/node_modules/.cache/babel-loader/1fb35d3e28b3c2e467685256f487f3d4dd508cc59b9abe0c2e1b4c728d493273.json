{"ast":null,"code":"var _jsxFileName = \"/Users/truonghaidang/Desktop/open-trainer/frontend/src/components/Train.js\";\nimport React, { useState } from 'react';\nimport TrainingProgress from './TrainingProgress';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Train = () => {\n  const [activeTaskId, setActiveTaskId] = useState(null);\n  const [isTraining, setIsTraining] = useState(false);\n  const handleTrainDetection = async file => {\n    const formData = new FormData();\n    formData.append('file', file);\n    try {\n      setIsTraining(true);\n      const response = await fetch('/train-detect', {\n        method: 'POST',\n        body: formData\n      });\n      const result = await response.json();\n      if (result.task_id) {\n        setActiveTaskId(result.task_id);\n      }\n    } catch (error) {\n      console.error('Training failed:', error);\n      setIsTraining(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"section\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Train a Model\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Dataset (.zip): \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: e => setDataset(e.target.files[0])\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Task: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: task,\n        onChange: e => setTask(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"detection\",\n          children: \"Object Detection\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"segmentation\",\n          children: \"Image Segmentation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleTrain,\n      children: \"Start Training\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\nexport default Train;","map":{"version":3,"names":["React","useState","TrainingProgress","jsxDEV","_jsxDEV","Train","activeTaskId","setActiveTaskId","isTraining","setIsTraining","handleTrainDetection","file","formData","FormData","append","response","fetch","method","body","result","json","task_id","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","e","setDataset","target","files","value","task","setTask","onClick","handleTrain","message"],"sources":["/Users/truonghaidang/Desktop/open-trainer/frontend/src/components/Train.js"],"sourcesContent":["import React, { useState } from 'react';\nimport TrainingProgress from './TrainingProgress';\n\nconst Train = () => {\n  const [activeTaskId, setActiveTaskId] = useState(null);\n  const [isTraining, setIsTraining] = useState(false);\n\n  const handleTrainDetection = async (file) => {\n    const formData = new FormData();\n    formData.append('file', file);\n\n    try {\n      setIsTraining(true);\n      const response = await fetch('/train-detect', {\n        method: 'POST',\n        body: formData\n      });\n\n      const result = await response.json();\n      if (result.task_id) {\n        setActiveTaskId(result.task_id);\n      }\n    } catch (error) {\n      console.error('Training failed:', error);\n      setIsTraining(false);\n    }\n  };\n\n  return (\n    <div className=\"section\">\n      <h2>Train a Model</h2>\n      <div>\n        <label>Dataset (.zip): </label>\n        <input type=\"file\" onChange={(e) => setDataset(e.target.files[0])} />\n      </div>\n      <div>\n        <label>Task: </label>\n        <select value={task} onChange={(e) => setTask(e.target.value)}>\n          <option value=\"detection\">Object Detection</option>\n          <option value=\"segmentation\">Image Segmentation</option>\n        </select>\n      </div>\n      <button onClick={handleTrain}>Start Training</button>\n      {message && <p>{message}</p>}\n    </div>\n  );\n}\n\nexport default Train;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}